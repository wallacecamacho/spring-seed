{"version":3,"sources":["webpack:///./node_modules/@angular/material/_theming.scss","webpack:///./src/themes/styles-init.scss","webpack:///$stdin","webpack:///./src/styles.scss"],"names":[],"mappings":"AAwLE,iDAA0C,MAC1C,+CAAwC,MCnL1C,mCD80CI,gCC90CJ,2BDu6CI,sBCv6CJ,kND26CM,2BC36CN,sCDo7CM,2BACA,sBCr7CN,+CDy7CM,sBCz7CN,+ED87CI,cC97CJ,8EDk8CI,cCl8CJ,4EDs8CI,cCt8CJ,mCD29CI,sBC39CJ,0DD+9CI,sBC/9CJ,oCD2/CI,sBC3/CJ,2CD8/CM,cC9/CN,oNDygDI,mBCzgDJ,wHD8gDI,mBC9gDJ,kHDmhDI,mBCnhDJ,yEDwhDM,mBCxhDN,iCD8aE,iCE0F8C,CF1F9C,uBE0FmF,CF1FnF,wBC9aF,iCD8aE,wCE4F+C,CF5F/C,2BE4FoF,CF5FpF,4BC9aF,iCD8aE,wCE8F+C,CF9F/C,2BE8FoF,CF9FpF,4BC9aF,iCD8aE,wCEgG+C,CFhG/C,2BEgGoF,CFhGpF,4BC9aF,iCD8aE,wCEkG+C,CFlG/C,2BEkGoF,CFlGpF,6BC9aF,iCD8aE,wCEoG+C,CFpG/C,2BEoGoF,CFpGpF,6BC9aF,iCD8aE,wCEsG+C,CFtG/C,4BEsGqF,CFtGrF,6BC9aF,iCD8aE,wCEwG+C,CFxG/C,8BEwGqF,CFxGrF,+BC9aF,iCD8aE,wCE0G+C,CF1G/C,8BE0GqF,CF1GrF,+BC9aF,iCD8aE,wCE4G+C,CF5G/C,8BE4GqF,CF5GrF,+BC9aF,kCD8aE,wCE8G+C,CF9G/C,+BE8GsF,CF9GtF,+BC9aF,kCD8aE,wCEgH+C,CFhH/C,+BEgHsF,CFhHtF,+BC9aF,kCD8aE,wCEkH+C,CFlH/C,+BEkHsF,CFlHtF,+BC9aF,kCD8aE,wCEoH+C,CFpH/C,+BEoHsF,CFpHtF,+BC9aF,kCD8aE,wCEsH+C,CFtH/C,+BEsHsF,CFtHtF,+BC9aF,kCD8aE,wCEwH+C,CFxH/C,+BEwHsF,CFxHtF,+BC9aF,kCD8aE,yCE0HgD,CF1HhD,+BE0HuF,CF1HvF,+BC9aF,kCD8aE,yCE4HgD,CF5HhD,+BE4HuF,CF5HvF,+BC9aF,kCD8aE,yCE8HgD,CF9HhD,+BE8HuF,CF9HvF,+BC9aF,kCD8aE,yCEgIgD,CFhIhD,+BEgIuF,CFhIvF,+BC9aF,kCD8aE,0CEkIiD,CFlIjD,+BEkIwF,CFlIxF,+BC9aF,kCD8aE,0CEoIiD,CFpIjD,+BEoIwF,CFpIxF,+BC9aF,kCD8aE,0CEsIiD,CFtIjD,+BEsIwF,CFtIxF,+BC9aF,kCD8aE,0CEwIiD,CFxIjD,+BEwIwF,CFxIxF,+BC9aF,kCD8aE,0CE0IiD,CF1IjD,+BE0IwF,CF1IxF,+BC9aF,qED+uJI,yBACA,sBChvJJ,uCDosDI,gBACA,sBCrsDJ,qED8aE,wCEoJiD,CFpJjD,2BEoJsF,CFpJtF,6BC9aF,6FD6sDM,gBC7sDN,uHDgtDQ,sBChtDR,oDDq0DM,mBACA,WCt0DN,kDD40DM,sBACA,mBC70DN,0BDk1DI,kBCl1DJ,oDDu1DM,aCv1DN,sDDo2DM,mBACA,sBCr2DN,kCD+zDI,WACA,mBA0CA,kBACA,kBACA,qBACA,kBACA,sHEhxCqC,CFgxCrC,kCACA,gDACA,gBACA,mBACA,uBACA,oBCn3DJ,mDD03DI,sCC13DJ,mDD0uDI,WACA,YACA,iBC5uDJ,mEDsvDM,SCtvDN,mED4vDM,YC5vDN,oEDkwDM,WG7/BN,8EHmgCM,UACA,YCzwDN,mED+wDM,YGngCN,6EHygCM,WACA,WCtxDN,sFD6xDQ,UG1gCR,gGHghCQ,UACA,WCpyDR,qFD0yDQ,WGhhCR,+FHshCQ,WACA,UCjzDR,oDD0uDI,WACA,YACA,iBC5uDJ,oEDsvDM,UCtvDN,oED4vDM,aC5vDN,qEDkwDM,WGl9BN,+EHw9BM,UACA,YCzwDN,oED+wDM,YGx9BN,8EH89BM,WACA,WCtxDN,uFD6xDQ,WG/9BR,iGHq+BQ,UACA,YCpyDR,sFD0yDQ,YGr+BR,gGH2+BQ,WACA,WCjzDR,mDD0uDI,WACA,YACA,iBArkDF,6CCvKF,0JD+uDM,kBACA,gBChvDN,sCDqyEM,YCryEN,mEDsvDM,UCtvDN,mED4vDM,aC5vDN,oEDkwDM,WGv6BN,8EH66BM,UACA,YCzwDN,mED+wDM,YG76BN,6EHm7BM,WACA,WCtxDN,sFD6xDQ,WGp7BR,gGH07BQ,UACA,YCpyDR,qFD0yDQ,YG17BR,+FHg8BQ,WACA,WCjzDR,2CD8aE,yCE2RgD,CF3RhD,+BE2RuF,CF3RvF,+BAo/CE,gBACA,sBCn6DJ,8FDkgEI,cACA,eCngEJ,kIDq+DI,cCr+DJ,+HDw+DI,cCx+DJ,yHD2+DI,cC3+DJ,8mBDi/DM,sBCj/DN,gND07DI,yBC17DJ,6MD87DI,yBC97DJ,uMDk8DI,yBCl8DJ,0MDs8DI,6BCt8DJ,0JD4gEM,WACA,8BC7gEN,yCDkhEI,gBClhEJ,mDDwhEI,6BCxhEJ,uHD6hEI,sBACA,sBC9hEJ,0UDq+DI,WCr+DJ,oyBDi/DM,uDCj/DN,uKDq+DI,yBCr+DJ,mKDw+DI,yBCx+DJ,2JD2+DI,+CC3+DJ,0eDg9DI,sCCh9DJ,2ODw9DI,gCCx9DJ,+HD8aE,iCEkV8C,CFlV9C,uBEkVmF,CFlVnF,wBC9aF,gED8aE,wCEoV+C,CFpV/C,2BEoVoF,CFpVpF,4BC9aF,uFD8aE,wCEsV+C,CFtV/C,8BEsVqF,CFtVrF,+BC9aF,0ED8aE,iCEwV8C,CFxV9C,uBEwVmF,CFxVnF,wBC9aF,iHD8aE,wCE0V+C,CF1V/C,4BE0VqF,CF1VrF,6BC9aF,+JD8aE,wCE4V+C,CF5V/C,+BE4VsF,CF5VtF,+BC9aF,qID8aE,iCE8V8C,CF9V9C,uBE8VmF,CF9VnF,wBC9aF,qFD8aE,wCEiW+C,CFjW/C,2BEiWoF,CFjWpF,4BC9aF,+ID8lEI,gBA6DA,iCC3pEJ,kCDkmEI,sBClmEJ,mEDqmEM,iCCrmEN,sDD0mEI,sBACA,gBC3mEJ,uFD8mEM,sBC9mEN,kGDmnEI,sCCnnEJ,4GDunEI,iBACA,uCCxnEJ,6HD6nEM,iBACA,kBACA,qCC/nEN,0CDooEI,yBACA,sBCroEJ,gFDwoEM,sBCxoEN,2CD6oEI,sBACA,sBC9oEJ,iFDipEM,gBCjpEN,qEDqpEM,yBCrpEN,yBDirEI,gBACA,sBClrEJ,uDD8aE,wCE0YiD,CF1YjD,2BE0YsF,CF1YtF,4BC9aF,qED8aE,iCE4YgD,CF5YhD,uBE4YqF,CF5YrF,wBC9aF,kCD2rEI,sBC3rEJ,mCD8uEI,6BC9uEJ,uCDkvEI,aClvEJ,4CDwvEI,yBAjlEF,qDCvKF,4CD6vEM,uBC7vEN,uCDkwEI,yBClwEJ,0JDuwEM,yBCvwEN,wJD2wEM,yBC3wEN,oJD+wEM,yBC/wEN,qHDsxEQ,yBCtxER,qFD4xEQ,qBC5xER,0DDiyEM,sBA1nEJ,6CCvKF,wCD8yEM,eC1yEN,iDD2uDM,kBACA,iBChvDN,8GDozEM,yBCpzEN,6GDwzEM,yBCxzEN,2GD4zEM,yBC5zEN,2CDo1EE,yBACA,sBCr1EF,4DDw1EI,sBACA,WCz1EJ,0ED8aE,wCEybiD,CFzbjD,2BEybsF,CFzbtF,4BC9aF,0FDy3EQ,YCz3ER,6DD83EM,WC93EN,kDDk4EM,gBCl4EN,yEDo1EE,yBACA,WCr1EF,0FDw1EI,WACA,WCz1EJ,6FDi2EI,gCCj2EJ,sEDo1EE,yBACA,sBCr1EF,uFDw1EI,sBACA,WCz1EJ,0FDi2EI,0BCj2EJ,wEDo1EE,yBACA,WCr1EF,yFDw1EI,WACA,WCz1EJ,4FDi2EI,gCCj2EJ,0BD06EI,gBC16EJ,6SDi7EI,mBCj7EJ,kLDs7EI,oCCt7EJ,gCD07EI,sBC17EJ,yDD87EI,sBC97EJ,mCDk/EI,iCCl/EJ,4KD0/EI,sBC1/EJ,0CD8/EI,sBC9/EJ,yDDkgFI,2BClgFJ,wCDsgFI,sBCtgFJ,+CD0gFI,sBACA,yBC3gFJ,4GD+gFI,sBC/gFJ,8YDshFM,iCCthFN,yED6hFI,6BC7hFJ,qGDiiFI,6BCjiFJ,2CD+9EI,yBACA,WCh+EJ,uEDo+EI,qCCp+EJ,mEDw+EI,gCCx+EJ,uCD8aE,wCEugB+C,CFvgB/C,2BEugBoF,CFvgBpF,6BA0nEE,sBACA,sBCziFJ,8ED+9EI,yBACA,WCh+EJ,0GDo+EI,oCCp+EJ,sGDw+EI,gCCx+EJ,4ED+9EI,yBACA,sBCh+EJ,wGDo+EI,qCCp+EJ,oGDw+EI,2CCx+EJ,6CD8aE,iCEyhB8C,CFzhB9C,uBEyhBmF,CFzhBnF,wBC9aF,6CDyjFI,cCzjFJ,wDD4jFM,cC5jFN,sDDgkFM,cChkFN,qCD8aE,0CEiiBiD,CFjiBjD,+BEiiBwF,CFjiBxF,+BA4rEE,gBACA,sBC3mFJ,4BD8wJI,iCC9wJJ,qCDkxJI,mCClxJJ,oCDgoFI,gBACA,sBCjoFJ,kED8aE,wCE4iBiD,CF5iBjD,2BE4iBsF,CF5iBtF,4BC9aF,+BDqoFI,iCCroFJ,sXD6oFQ,2BAON,oBCppFF,mHDupFM,iBCvpFN,iDD4pFI,sBC5pFJ,sGDiqFI,sBCjqFJ,+DDqqFI,sBCrqFJ,wMDyqFM,cCzqFN,8DDk8II,qBCl8IJ,iED08II,cC18IJ,4ED68IM,cC78IN,0EDi9IM,cCj9IN,4DDs9II,cCt9IJ,sCD09II,iCC19IJ,kED+9IM,yBC/9IN,6EDk+IQ,yBCl+IR,2EDs+IQ,yBCt+IR,+QDg/IM,cCh/IN,qKD0/IM,yBC1/IN,0BD+/II,cC//IJ,kIDinIM,sBCjnIN,2EDynIM,iCCznIN,mGDkyFE,+FACA,yBACA,2BCpyFF,6EDi6IM,iCCj6IN,qGDkyFE,+FACA,yBACA,2BCpyFF,oED8gIM,iCC9gIN,4FDkhIM,iCClhIN,iFDshIM,iCCthIN,6FD2hIQ,sBC3hIR,yGD+hIQ,6BC/hIR,0EDuyIM,sBCvyIN,gFD2yIM,sBC3yIN,4FDgzIQ,cChzIR,uGDozIQ,cCpzIR,mODwzIQ,cCxzIR,gGDq0IQ,sBCr0IR,kGDy0IQ,sBCz0IR,qCD2wFM,cC3wFN,oCD+wFM,cC/wFN,kCDmxFM,cCnxFN,mFDo2FI,sBCp2FJ,sJDy2FI,sBCz2FJ,kCD62FI,oBC72FJ,yDDg3FM,sBCh3FN,+CDg3FM,sBCh3FN,oDDg3FM,sBCh3FN,6DDg3FM,sBCh3FN,wDDg3FM,sBCh3FN,8CDo4FI,oBCp4FJ,sGDy4FI,oBCz4FJ,0GD64FI,cC74FJ,4FD46FM,sBC56FN,6CDo7FM,sBCp7FN,uCDy7FI,sBCz7FJ,gLD+7FM,2BC/7FN,+BDkgGI,gBClgGJ,6DD8aE,wCEsrBiD,CFtrBjD,2BEsrBsF,CFtrBtF,6BC9aF,8BDsgGI,eACA,sBCvgGJ,uFD2gGQ,sBC3gGR,0GDkhGI,sBClhGJ,mPD0hGM,2BC1hGN,8BDmjGI,gBCnjGJ,0FDwjGI,sBCxjGJ,gFD6jGI,qCACA,uCC9jGJ,uEDmkGI,qCCnkGJ,mQD2kGM,6BC3kGN,4CDomGI,aCpmGJ,wCDwmGI,yBCxmGJ,6CD4mGI,yBC5mGJ,yEDinGM,aCjnGN,qEDqnGM,yBCrnGN,0EDynGM,yBCznGN,uED+nGM,aC/nGN,mEDmoGM,yBCnoGN,wEDuoGM,yBCvoGN,+ED0pGM,eC1pGN,qGD8pGM,eC9pGN,iGDkqGM,eClqGN,uCDksGI,6BClsGJ,uFD+qGI,qBC/qGJ,uWDsrGI,yBCtrGJ,sFD+qGI,qBC/qGJ,mWDsrGI,yBCtrGJ,oFD+qGI,qBC/qGJ,2VDsrGI,yBCtrGJ,0KDwtGQ,6BCxtGR,sKD6tGQ,iCC7tGR,6EDiuGQ,sBCjuGR,qDDwuGM,sBCxuGN,iCDkwGI,sBClwGJ,uCDswGI,sBCtwGJ,sDD0wGI,sBC1wGJ,iCD8wGI,sBC9wGJ,iCDkxGI,gBClxGJ,+DD8aE,wCEyxBiD,CFzxBjD,2BEyxBsF,CFzxBtF,6BC9aF,oFDsxGM,2BCtxGN,yED6xGQ,cC7xGR,wEDiyGQ,cCjyGR,sJDqyGQ,cCryGR,iFD8yGM,sBC9yGN,qCDs1GI,yBACA,sBCv1GJ,2BD21GI,sBACA,sBC51GJ,2CD+1GM,sBC/1GN,iDD8aE,yCE+yBkD,CF/yBlD,+BE+yByF,CF/yBzF,+BC9aF,gCD02GI,uCC12GJ,yFD62GM,sCACA,kBC92GN,yDDu3GM,iBACA,uCCx3GN,qDD63GI,gCC73GJ,qED24GM,yBC34GN,mEDi5GM,qCCj5GN,iEDu5GM,yBCv5GN,iFD24GM,yBC34GN,+EDi5GM,sCCj5GN,6EDu5GM,yBCv5GN,8ED24GM,yBC34GN,4EDi5GM,sCCj5GN,0EDu5GM,yBCv5GN,uED47GM,sBC57GN,uCD8aE,wCEk1B+C,CFl1B/C,2BEk1BoF,CFl1BpF,4BAohGE,yBCl8GJ,qCDs8GI,iCCt8GJ,4CDk/GI,iCCl/GJ,qJDw9GI,yBCx9GJ,yDD49GI,WC59GJ,kJDw9GI,yBCx9GJ,wDD49GI,WC59GJ,4IDw9GI,yBCx9GJ,sDD49GI,sBC59GJ,sCDkgHI,oCClgHJ,uHDwgHM,iCCxgHN,yPDghHM,iCChhHN,4DD4hHM,iCC5hHN,kLDkiHQ,iCCliHR,0MDwiHU,iCCxiHV,4FD+iHQ,6BACA,6BChjHR,0MDsjHU,6BCtjHV,kPD0jHU,6BC1jHV,gEDikHI,4BCjkHJ,wDDqkHI,iHAIA,sHCzkHJ,sDD8kHI,kHC9kHJ,+ID2mHM,iCAMF,oBCjnHJ,sCDmnHQ,gBCnnHR,mGD2nHM,sBC3nHN,+CDioHM,iCACA,WCloHN,4KDwoHM,yBACA,WCzoHN,2DD6oHM,6BACA,cC9oHN,sEDkpHM,sBClpHN,qEDspHM,cCtpHN,4ED2pHI,sBC3pHJ,kDD+pHI,kCC/pHJ,uJDqqHI,iCCrqHJ,sCDitHI,cCjtHJ,+DDquHI,wCCruHJ,6HD2uHM,qCACA,mBC5uHN,2DDivHI,sBCjvHJ,6FDovHM,sBCpvHN,kDDyvHI,6BCzvHJ,sFD6vHI,6BC7vHJ,8HDmwHI,mBACA,gBCpwHJ,wyBDizHQ,sCCjzHR,gHDuyHI,yBCvyHJ,8JDuyHI,sBCvyHJ,gyBDizHQ,sCCjzHR,8GDuyHI,yBCvyHJ,0JDuyHI,sBCvyHJ,gxBDizHQ,sCCjzHR,0GDuyHI,yBCvyHJ,kJDuyHI,iCCvyHJ,g4BDizHQ,sCCjzHR,sRD0zHI,yBC1zHJ,kRD+zHI,WC/zHJ,sVDk0HM,2BCl0HN,kLDw0HI,kBCx0HJ,0PD40HI,kCC50HJ,oJDk1HI,uCCl1HJ,w3BDizHQ,sCCjzHR,kRD0zHI,yBC1zHJ,8QD+zHI,WC/zHJ,kVDk0HM,2BCl0HN,gLDw0HI,kBCx0HJ,wPD40HI,kCC50HJ,kJDk1HI,uCCl1HJ,w2BDizHQ,sCCjzHR,0QD0zHI,yBC1zHJ,sQD+zHI,sBC/zHJ,0UDk0HM,qBCl0HN,4KDw0HI,6BCx0HJ,oPD40HI,4BC50HJ,8IDk1HI,iCCl1HJ,4BD04HI,mBACA,sBC34HJ,wCD02HE,mBACA,WC32HF,uCD02HE,mBACA,WC32HF,qCD02HE,mBACA,sBC32HF,yKDk3HI,8BCl3HJ,uRD03HI,cC13HJ,+CD83HI,yBC93HJ,4BDy7HI,6BCz7HJ,yBD2oJI,gBC3oJJ,mEDgpJI,sBChpJJ,wCDu9HI,2BACA,mBA1iHF,wCEqjC+C,CFrjC/C,4BEqjCqF,CFrjCrF,6BC9aF,2CD89HI,cC19HJ,iCD00CI,gCC10CJ,yBDm6CI,sBCn6CJ,4MDu6CM,2BCv6CN,oCDg7CM,2BACA,sBCj7CN,6CDq7CM,sBCr7CN,6ED07CI,WC17CJ,4ED87CI,cC97CJ,0EDk8CI,cCl8CJ,iCDu9CI,sBCv9CJ,wDD29CI,sBC39CJ,kCDu/CI,sBCv/CJ,yCD0/CM,cC1/CN,4MDqgDI,mBCrgDJ,oHD0gDI,gBC1gDJ,8GD+gDI,mBC/gDJ,uEDohDM,mBCphDN,+BD0aE,iCEimC8C,CFjmC9C,uBEimCmF,CFjmCnF,wBC1aF,+BD0aE,wCEmmC+C,CFnmC/C,2BEmmCoF,CFnmCpF,4BC1aF,+BD0aE,wCEqmC+C,CFrmC/C,2BEqmCoF,CFrmCpF,4BC1aF,+BD0aE,wCEumC+C,CFvmC/C,2BEumCoF,CFvmCpF,4BC1aF,+BD0aE,wCEymC+C,CFzmC/C,2BEymCoF,CFzmCpF,6BC1aF,+BD0aE,wCE2mC+C,CF3mC/C,2BE2mCoF,CF3mCpF,6BC1aF,+BD0aE,wCE6mC+C,CF7mC/C,4BE6mCqF,CF7mCrF,6BC1aF,+BD0aE,wCE+mC+C,CF/mC/C,8BE+mCqF,CF/mCrF,+BC1aF,+BD0aE,wCEinC+C,CFjnC/C,8BEinCqF,CFjnCrF,+BC1aF,+BD0aE,wCEmnC+C,CFnnC/C,8BEmnCqF,CFnnCrF,+BC1aF,gCD0aE,wCEqnC+C,CFrnC/C,+BEqnCsF,CFrnCtF,+BC1aF,gCD0aE,wCEunC+C,CFvnC/C,+BEunCsF,CFvnCtF,+BC1aF,gCD0aE,wCEynC+C,CFznC/C,+BEynCsF,CFznCtF,+BC1aF,gCD0aE,wCE2nC+C,CF3nC/C,+BE2nCsF,CF3nCtF,+BC1aF,gCD0aE,wCE6nC+C,CF7nC/C,+BE6nCsF,CF7nCtF,+BC1aF,gCD0aE,wCE+nC+C,CF/nC/C,+BE+nCsF,CF/nCtF,+BC1aF,gCD0aE,yCEioCgD,CFjoChD,+BEioCuF,CFjoCvF,+BC1aF,gCD0aE,yCEmoCgD,CFnoChD,+BEmoCuF,CFnoCvF,+BC1aF,gCD0aE,yCEqoCgD,CFroChD,+BEqoCuF,CFroCvF,+BC1aF,gCD0aE,yCEuoCgD,CFvoChD,+BEuoCuF,CFvoCvF,+BC1aF,gCD0aE,0CEyoCiD,CFzoCjD,+BEyoCwF,CFzoCxF,+BC1aF,gCD0aE,0CE2oCiD,CF3oCjD,+BE2oCwF,CF3oCxF,+BC1aF,gCD0aE,0CE6oCiD,CF7oCjD,+BE6oCwF,CF7oCxF,+BC1aF,gCD0aE,0CE+oCiD,CF/oCjD,+BE+oCwF,CF/oCxF,+BC1aF,gCD0aE,0CEipCiD,CFjpCjD,+BEipCwF,CFjpCxF,+BC1aF,iED2uJI,yBACA,sBC5uJJ,qCDgsDI,gBACA,sBCjsDJ,mED0aE,wCE2pCiD,CF3pCjD,2BE2pCsF,CF3pCtF,6BC1aF,2FDysDM,gBCzsDN,qHD4sDQ,sBC5sDR,kDDi0DM,mBACA,sBCl0DN,gDDw0DM,sBACA,mBCz0DN,wBD80DI,kBC90DJ,kDDm1DM,aCn1DN,oDDg2DM,mBACA,sBCj2DN,gCD2zDI,sBACA,gBA0CA,kBACA,kBACA,qBACA,kBACA,sHEzQqC,CFyQrC,kCACA,gDACA,gBACA,mBACA,uBACA,oBC/2DJ,iDDs3DI,sCCt3DJ,iDDsuDI,WACA,YACA,iBCxuDJ,iEDkvDM,SClvDN,iEDwvDM,YCxvDN,kED8vDM,WGyUN,4EHnUM,UACA,YCrwDN,iED2wDM,YGmUN,2EH7TM,WACA,WClxDN,oFDyxDQ,UG4TR,8FHtTQ,UACA,WChyDR,mFDsyDQ,WGsTR,6FHhTQ,WACA,UC7yDR,kDDsuDI,WACA,YACA,iBCxuDJ,kEDkvDM,UClvDN,kEDwvDM,aCxvDN,mED8vDM,WGoXN,6EH9WM,UACA,YCrwDN,kED2wDM,YG8WN,4EHxWM,WACA,WClxDN,qFDyxDQ,WGuWR,+FHjWQ,UACA,YChyDR,oFDsyDQ,YGiWR,8FH3VQ,WACA,WC7yDR,iDDsuDI,WACA,YACA,iBArkDF,6CCnKF,mGD2uDM,kBACA,gBC5uDN,oCDiyEM,YCjyEN,iEDkvDM,UClvDN,iEDwvDM,aCxvDN,kED8vDM,WG+ZN,4EHzZM,UACA,YCrwDN,iED2wDM,YGyZN,2EHnZM,WACA,WClxDN,oFDyxDQ,WGkZR,8FH5YQ,UACA,YChyDR,mFDsyDQ,YG4YR,6FHtYQ,WACA,WC7yDR,yCD0aE,yCEkyCgD,CFlyChD,+BEkyCuF,CFlyCvF,+BAo/CE,gBACA,sBC/5DJ,wFD8/DI,cACA,eC//DJ,4HDi+DI,WCj+DJ,yHDo+DI,cCp+DJ,mHDu+DI,cCv+DJ,slBD6+DM,sBC7+DN,0MDs7DI,sBCt7DJ,uMD07DI,yBC17DJ,iMD87DI,yBC97DJ,oMDk8DI,6BCl8DJ,oJDwgEM,WACA,8BCzgEN,uCD8gEI,gBC9gEJ,iDDohEI,6BCphEJ,+GDyhEI,sBACA,sBC1hEJ,6cDi+DI,sBCj+DJ,owBD6+DM,uDC7+DN,+JDi+DI,sBCj+DJ,2JDo+DI,yBCp+DJ,mJDu+DI,yBCv+DJ,6rBD48DI,gCC58DJ,2HD0aE,iCEy1C8C,CFz1C9C,uBEy1CmF,CFz1CnF,wBC1aF,8DD0aE,wCE21C+C,CF31C/C,2BE21CoF,CF31CpF,4BC1aF,qFD0aE,wCE61C+C,CF71C/C,8BE61CqF,CF71CrF,+BC1aF,wED0aE,iCE+1C8C,CF/1C9C,uBE+1CmF,CF/1CnF,wBC1aF,6GD0aE,wCEi2C+C,CFj2C/C,4BEi2CqF,CFj2CrF,6BC1aF,2JD0aE,wCEm2C+C,CFn2C/C,+BEm2CsF,CFn2CtF,+BC1aF,iID0aE,iCEq2C8C,CFr2C9C,uBEq2CmF,CFr2CnF,wBC1aF,iFD0aE,wCEw2C+C,CFx2C/C,2BEw2CoF,CFx2CpF,4BC1aF,2ID0lEI,gBA6DA,iCCvpEJ,gCD8lEI,sBC9lEJ,iEDimEM,iCCjmEN,oDDsmEI,sBACA,gBCvmEJ,qFD0mEM,sBC1mEN,gGD+mEI,sCC/mEJ,0GDmnEI,iBACA,uCCpnEJ,2HDynEM,iBACA,kBACA,qCC3nEN,wCDgoEI,yBACA,sBCjoEJ,8EDooEM,sBCpoEN,yCDyoEI,sBACA,sBC1oEJ,+ED6oEM,gBC7oEN,mEDipEM,yBCjpEN,uBD6qEI,gBACA,sBC9qEJ,qDD0aE,wCEi5CiD,CFj5CjD,2BEi5CsF,CFj5CtF,4BC1aF,mED0aE,iCEm5CgD,CFn5ChD,uBEm5CqF,CFn5CrF,wBC1aF,gCDurEI,sBCvrEJ,iCD0uEI,6BC1uEJ,qCD8uEI,aC9uEJ,0wallace c. carlosEI,yBAjlEF,qDCnKF,0CDyvEM,uBCzvEN,qCD8vEI,yBC9vEJ,sJDmwEM,sBCnwEN,oJDuwEM,yBCvwEN,gJD2wEM,yBC3wEN,mHDkxEQ,yBClxER,mFDwxEQ,qBCxxER,wDD6xEM,sBA1nEJ,6CCnKF,sCD0yEM,eCtyEN,iDDuuDM,kBACA,iBC5uDN,4GDgzEM,sBChzEN,2GDozEM,yBCpzEN,yGDwzEM,yBCxzEN,yCDg1EE,yBACA,sBCj1EF,0DDo1EI,sBACA,WCr1EJ,wED0aE,wCEg8CiD,CFh8CjD,2BEg8CsF,CFh8CtF,4BC1aF,wFDq3EQ,YCr3ER,2DD03EM,WC13EN,gDD83EM,gBC93EN,uEDg1EE,sBACA,sBCj1EF,wFDo1EI,sBACA,WCr1EJ,2FD61EI,0BC71EJ,oEDg1EE,yBACA,sBCj1EF,qFDo1EI,sBACA,WCr1EJ,wFD61EI,0BC71EJ,sEDg1EE,yBACA,sBCj1EF,uFDo1EI,sBACA,WCr1EJ,0FD61EI,0BC71EJ,wBDs6EI,gBCt6EJ,yRD66EI,mBC76EJ,sKDk7EI,oCCl7EJ,8BDs7EI,sBCt7EJ,qDD07EI,sBC17EJ,iCD8+EI,iCC9+EJ,sKDs/EI,sBCt/EJ,wCD0/EI,sBC1/EJ,uDD8/EI,2BC9/EJ,sCDkgFI,sBClgFJ,6CDsgFI,sBACA,yBCvgFJ,0GD2gFI,sBC3gFJ,wYDkhFM,iCClhFN,uEDyhFI,6BCzhFJ,mGD6hFI,6BC7hFJ,yCD29EI,sBACA,sBC59EJ,qEDg+EI,sCCh+EJ,iEDo+EI,2CCp+EJ,qCD0aE,wCE8gD+C,CF9gD/C,2BE8gDoF,CF9gDpF,6BA0nEE,sBACA,sBCriFJ,4ED29EI,yBACA,sBC59EJ,wGDg+EI,sCCh+EJ,oGDo+EI,2CCp+EJ,0ED29EI,yBACA,sBC59EJ,sGDg+EI,sCCh+EJ,kGDo+EI,2CCp+EJ,2CD0aE,iCEgiD8C,CFhiD9C,uBEgiDmF,CFhiDnF,wBC1aF,2CDqjFI,WCrjFJ,sDDwjFM,cCxjFN,oDD4jFM,cC5jFN,mCD0aE,0CEwiDiD,CFxiDjD,+BEwiDwF,CFxiDxF,+BA4rEE,gBACA,sBCvmFJ,0BD0wJI,iCC1wJJ,mCD8wJI,mCC9wJJ,kCD4nFI,gBACA,sBC7nFJ,gED0aE,wCEmjDiD,CFnjDjD,2BEmjDsF,CFnjDtF,4BC1aF,6BDioFI,iCCjoFJ,gXDyoFQ,2BAON,oBChpFF,iHDmpFM,iBCnpFN,+CDwpFI,sBCxpFJ,kGD6pFI,sBC7pFJ,6DDiqFI,sBCjqFJ,oMDqqFM,cCrqFN,0DD87II,qBC97IJ,+DDs8II,WCt8IJ,0EDy8IM,cCz8IN,wED68IM,cC78IN,0DDk9II,cCl9IJ,oCDs9II,iCCt9IJ,gED29IM,sBC39IN,2ED89IQ,yBC99IR,yEDk+IQ,yBCl+IR,yQD4+IM,cC5+IN,iKDs/IM,yBCt/IN,wBD2/II,cC3/IJ,8HD6mIM,sBC7mIN,yEDqnIM,iCCrnIN,iGD8xFE,+FACA,yBACA,2BChyFF,2ED65IM,iCC75IN,mGD8xFE,+FACA,yBACA,2BChyFF,kED0gIM,iCC1gIN,0FD8gIM,iCC9gIN,+EDkhIM,iCClhIN,2FDuhIQ,sBCvhIR,uGD2hIQ,6BC3hIR,wEDmyIM,sBCnyIN,8EDuyIM,sBCvyIN,0FD4yIQ,WC5yIR,qGDgzIQ,cChzIR,+NDozIQ,cCpzIR,8FDi0IQ,sBCj0IR,gGDq0IQ,sBCr0IR,mCDuwFM,WCvwFN,kCD2wFM,cC3wFN,gCD+wFM,cC/wFN,iFDg2FI,sBCh2FJ,kJDq2FI,sBCr2FJ,gCDy2FI,iBCz2FJ,uDD42FM,sBC52FN,6CD42FM,sBC52FN,kDD42FM,sBC52FN,2DD42FM,sBC52FN,sDD42FM,sBC52FN,4CDg4FI,oBCh4FJ,kGDq4FI,oBCr4FJ,wGDy4FI,cCz4FJ,wFDw6FM,sBCx6FN,2CDg7FM,sBCh7FN,qCDq7FI,sBCr7FJ,wKD27FM,2BC37FN,6BD8/FI,gBC9/FJ,2DD0aE,wCE6rDiD,CF7rDjD,2BE6rDsF,CF7rDtF,6BC1aF,4BDkgGI,eACA,sBCngGJ,mFDugGQ,sBCvgGR,sGD8gGI,sBC9gGJ,2ODshGM,2BCthGN,4BD+iGI,gBC/iGJ,sFDojGI,sBCpjGJ,4EDyjGI,qCACA,uCC1jGJ,mED+jGI,qCC/jGJ,2PDukGM,6BCvkGN,0CDgmGI,aChmGJ,sCDomGI,yBCpmGJ,2CDwmGI,sBCxmGJ,uED6mGM,aC7mGN,mEDinGM,yBCjnGN,wEDqnGM,yBCrnGN,qED2nGM,aC3nGN,iED+nGM,yBC/nGN,sEDmoGM,yBCnoGN,2EDspGM,YCtpGN,iGD0pGM,eC1pGN,6FD8pGM,eC9pGN,qCD8rGI,6BC9rGJ,qFD2qGI,kBC3qGJ,+VDkrGI,sBClrGJ,oFD2qGI,qBC3qGJ,2VDkrGI,yBClrGJ,kFD2qGI,qBC3qGJ,mVDkrGI,yBClrGJ,sKDotGQ,6BCptGR,kKDytGQ,iCCztGR,2ED6tGQ,sBC7tGR,mDDouGM,sBCpuGN,+BD8vGI,sBC9vGJ,qCDkwGI,sBClwGJ,oDDswGI,sBCtwGJ,+BD0wGI,sBC1wGJ,+BD8wGI,gBC9wGJ,6DD0aE,wCEgyDiD,CFhyDjD,2BEgyDsF,CFhyDtF,6BC1aF,kFDkxGM,2BClxGN,uEDyxGQ,WCzxGR,sED6xGQ,cC7xGR,kJDiyGQ,cCjyGR,+ED0yGM,sBC1yGN,mCDk1GI,yBACA,sBCn1GJ,yBDu1GI,sBACA,sBCx1GJ,yCD21GM,sBC31GN,+CD0aE,yCEszDkD,CFtzDlD,+BEszDyF,CFtzDzF,+BC1aF,8BDs2GI,uCCt2GJ,qFDy2GM,sCACA,kBC12GN,uDDm3GM,iBACA,uCCp3GN,mDDy3GI,gCCz3GJ,mEDu4GM,yBCv4GN,iED64GM,uCC74GN,+DDm5GM,yBCn5GN,+EDu4GM,sBCv4GN,6ED64GM,uCC74GN,2EDm5GM,sBCn5GN,4EDu4GM,yBCv4GN,0ED64GM,uCC74GN,wEDm5GM,yBCn5GN,qEDw7GM,sBCx7GN,qCD0aE,wCEy1D+C,CFz1D/C,2BEy1DoF,CFz1DpF,4BAohGE,yBC97GJ,mCDk8GI,iCCl8GJ,0CD8+GI,iCC9+GJ,+IDo9GI,sBCp9GJ,uDDw9GI,sBCx9GJ,4IDo9GI,yBCp9GJ,sDDw9GI,sBCx9GJ,sIDo9GI,yBCp9GJ,oDDw9GI,sBCx9GJ,oCD8/GI,sCC9/GJ,mHDogHM,iCCpgHN,iPD4gHM,iCC5gHN,0DDwhHM,iCCxhHN,8KD8hHQ,iCC9hHR,sMDoiHU,iCCpiHV,0FD2iHQ,6BACA,6BC5iHR,sMDkjHU,6BCljHV,8ODsjHU,6BCtjHV,8DD6jHI,4BC7jHJ,sDDikHI,iHAIA,sHCrkHJ,oDD0kHI,kHC1kHJ,yIDumHM,iCAMF,oBC7mHJ,oCD+mHQ,gBC/mHR,+FDunHM,sBCvnHN,6CD6nHM,iCACA,sBC9nHN,sKDooHM,sBACA,sBCroHN,yDDyoHM,6BACA,cC1oHN,oED8oHM,sBC9oHN,mEDkpHM,cClpHN,wEDupHI,sBCvpHJ,gDD2pHI,kCC3pHJ,iJDiqHI,iCCjqHJ,oCD6sHI,cC7sHJ,2DDiuHI,wCCjuHJ,yHDuuHM,qCACA,mBCxuHN,uDD6uHI,sBC7uHJ,yFDgvHM,sBChvHN,gDDqvHI,6BCrvHJ,oFDyvHI,6BCzvHJ,0HD+vHI,mBACA,gBChwHJ,wxBD6yHQ,sCC7yHR,4GDmyHI,sBCnyHJ,0JDmyHI,iCCnyHJ,gxBD6yHQ,sCC7yHR,0GDmyHI,yBCnyHJ,sJDmyHI,iCCnyHJ,gwBD6yHQ,sCC7yHR,sGDmyHI,yBCnyHJ,8IDmyHI,iCCnyHJ,g3BD6yHQ,sCC7yHR,8QDszHI,sBCtzHJ,0QD2zHI,sBC3zHJ,8UD8zHM,qBC9zHN,8KDo0HI,6BCp0HJ,sPDw0HI,4BCx0HJ,gJD80HI,iCC90HJ,w2BD6yHQ,sCC7yHR,0QDszHI,yBCtzHJ,sQD2zHI,sBC3zHJ,0UD8zHM,qBC9zHN,4KDo0HI,6BCp0HJ,oPDw0HI,4BCx0HJ,8ID80HI,iCC90HJ,w1BD6yHQ,sCC7yHR,kQDszHI,yBCtzHJ,8PD2zHI,sBC3zHJ,kUD8zHM,qBC9zHN,wKDo0HI,6BCp0HJ,gPDw0HI,4BCx0HJ,0ID80HI,iCC90HJ,0BDs4HI,mBACA,sBCv4HJ,sCDs2HE,gBACA,sBCv2HF,qCDs2HE,mBACA,sBCv2HF,mCDs2HE,mBACA,sBCv2HF,mKD82HI,8BC92HJ,6QDs3HI,cCt3HJ,6CD03HI,yBC13HJ,0BDq7HI,6BCr7HJ,uBDuoJI,gBCvoJJ,+DD4oJI,sBC5oJJ,sCDm9HI,2BACA,mBA1iHF,wCE4jE+C,CF5jE/C,4BE4jEqF,CF5jErF,6BC1aF,yCD09HI,cCt9HJ,iCDs0CI,sCCt0CJ,yBD+5CI,WC/5CJ,4MDm6CM,iCCn6CN,oCD46CM,iCACA,WC76CN,6CDi7CM,2BCj7CN,6EDs7CI,cCt7CJ,4ED07CI,cC17CJ,0ED87CI,cC97CJ,iCDm9CI,2BCn9CJ,wDDu9CI,2BCv9CJ,kCDm/CI,2BCn/CJ,yCDs/CM,cCt/CN,4MDigDI,mBCjgDJ,oHDsgDI,mBCtgDJ,8GD2gDI,mBC3gDJ,uEDghDM,mBChhDN,+BDsaE,iCEwmE8C,CFxmE9C,uBEwmEmF,CFxmEnF,wBCtaF,+BDsaE,wCE0mE+C,CF1mE/C,2BE0mEoF,CF1mEpF,4BCtaF,+BDsaE,wCE4mE+C,CF5mE/C,2BE4mEoF,CF5mEpF,4BCtaF,+BDsaE,wCE8mE+C,CF9mE/C,2BE8mEoF,CF9mEpF,4BCtaF,+BDsaE,wCEgnE+C,CFhnE/C,2BEgnEoF,CFhnEpF,6BCtaF,+BDsaE,wCEknE+C,CFlnE/C,2BEknEoF,CFlnEpF,6BCtaF,+BDsaE,wCEonE+C,CFpnE/C,4BEonEqF,CFpnErF,6BCtaF,+BDsaE,wCEsnE+C,CFtnE/C,8BEsnEqF,CFtnErF,+BCtaF,+BDsaE,wCEwnE+C,CFxnE/C,8BEwnEqF,CFxnErF,+BCtaF,+BDsaE,wCE0nE+C,CF1nE/C,8BE0nEqF,CF1nErF,+BCtaF,gCDsaE,wCE4nE+C,CF5nE/C,+BE4nEsF,CF5nEtF,+BCtaF,gCDsaE,wCE8nE+C,CF9nE/C,+BE8nEsF,CF9nEtF,+BCtaF,gCDsaE,wCEgoE+C,CFhoE/C,+BEgoEsF,CFhoEtF,+BCtaF,gCDsaE,wCEkoE+C,CFloE/C,+BEkoEsF,CFloEtF,+BCtaF,gCDsaE,wCEooE+C,CFpoE/C,+BEooEsF,CFpoEtF,+BCtaF,gCDsaE,wCEsoE+C,CFtoE/C,+BEsoEsF,CFtoEtF,+BCtaF,gCDsaE,yCEwoEgD,CFxoEhD,+BEwoEuF,CFxoEvF,+BCtaF,gCDsaE,yCE0oEgD,CF1oEhD,+BE0oEuF,CF1oEvF,+BCtaF,gCDsaE,yCE4oEgD,CF5oEhD,+BE4oEuF,CF5oEvF,+BCtaF,gCDsaE,yCE8oEgD,CF9oEhD,+BE8oEuF,CF9oEvF,+BCtaF,gCDsaE,0CEgpEiD,CFhpEjD,+BEgpEwF,CFhpExF,+BCtaF,gCDsaE,0CEkpEiD,CFlpEjD,+BEkpEwF,CFlpExF,+BCtaF,gCDsaE,0CEopEiD,CFppEjD,+BEopEwF,CFppExF,+BCtaF,gCDsaE,0CEspEiD,CFtpEjD,+BEspEwF,CFtpExF,+BCtaF,gCDsaE,0CEwpEiD,CFxpEjD,+BEwpEwF,CFxpExF,+BCtaF,iEDuuJI,yBACA,WCxuJJ,qCD4rDI,mBACA,WC7rDJ,mEDsaE,wCEkqEiD,CFlqEjD,2BEkqEsF,CFlqEtF,6BCtaF,2FDqsDM,mBCrsDN,qHDwsDQ,WCxsDR,kDD6zDM,mBACA,sBC9zDN,gDDo0DM,WACA,mBCr0DN,wBD00DI,kBC10DJ,kDD+0DM,aC/0DN,oDD41DM,mBACA,2BC71DN,gCDuzDI,WACA,mBA0CA,kBACA,kBACA,qBACA,kBACA,sHE8vBqC,CF9vBrC,kCACA,gDACA,gBACA,mBACA,uBACA,oBC32DJ,iDDk3DI,sCCl3DJ,iDDkuDI,WACA,YACA,iBCpuDJ,iED8uDM,SC9uDN,iEDovDM,YCpvDN,kED0vDM,WG+oDN,4EHzoDM,UACA,YCjwDN,iEDuwDM,YGyoDN,2EHnoDM,WACA,WC9wDN,oFDqxDQ,UGkoDR,8FH5nDQ,UACA,WC5xDR,mFDkyDQ,WG4nDR,6FHtnDQ,WACA,UCzyDR,kDDkuDI,WACA,YACA,iBCpuDJ,kED8uDM,UC9uDN,kEDovDM,aCpvDN,mED0vDM,WG0rDN,6EHprDM,UACA,YCjwDN,kEDuwDM,YGorDN,4EH9qDM,WACA,WC9wDN,qFDqxDQ,WG6qDR,+FHvqDQ,UACA,YC5xDR,oFDkyDQ,YGuqDR,8FHjqDQ,WACA,WCzyDR,iDDkuDI,WACA,YACA,iBArkDF,6CC/JF,mGDuuDM,kBACA,gBCxuDN,oCD6xEM,YC7xEN,iED8uDM,UC9uDN,iEDovDM,aCpvDN,kED0vDM,WGquDN,4EH/tDM,UACA,YCjwDN,iEDuwDM,YG+tDN,2EHztDM,WACA,WC9wDN,oFDqxDQ,WGwtDR,8FHltDQ,UACA,YC5xDR,mFDkyDQ,YGktDR,6FH5sDQ,WACA,WCzyDR,yCDsaE,yCEyyEgD,CFzyEhD,+BEyyEuF,CFzyEvF,+BAo/CE,mBACA,WC35DJ,wFD0/DI,cACA,eC3/DJ,4HD69DI,cC79DJ,yHDg+DI,cCh+DJ,mHDm+DI,cCn+DJ,slBDy+DM,2BCz+DN,0MDk7DI,yBCl7DJ,uMDs7DI,yBCt7DJ,iMD07DI,yBC17DJ,oMD87DI,6BC97DJ,oJDogEM,WACA,8BCrgEN,uCD0gEI,gBC1gEJ,iDDghEI,mCChhEJ,+GDqhEI,WACA,yBCthEJ,+JD69DI,oCC79DJ,2JDg+DI,+CCh+DJ,mJDm+DI,oCCn+DJ,owBDy+DM,kECz+DN,+ODw8DI,sCCx8DJ,2OD48DI,gCC58DJ,mODg9DI,sCCh9DJ,2HDsaE,iCEg2E8C,CFh2E9C,uBEg2EmF,CFh2EnF,wBCtaF,8DDsaE,wCEk2E+C,CFl2E/C,2BEk2EoF,CFl2EpF,4BCtaF,qFDsaE,wCEo2E+C,CFp2E/C,8BEo2EqF,CFp2ErF,+BCtaF,wEDsaE,iCEs2E8C,CFt2E9C,uBEs2EmF,CFt2EnF,wBCtaF,6GDsaE,wCEw2E+C,CFx2E/C,4BEw2EqF,CFx2ErF,6BCtaF,2JDsaE,wCE02E+C,CF12E/C,+BE02EsF,CF12EtF,+BCtaF,iIDsaE,iCE42E8C,CF52E9C,uBE42EmF,CF52EnF,wBCtaF,iFDsaE,wCE+2E+C,CF/2E/C,2BE+2EoF,CF/2EpF,4BCtaF,2IDslEI,gBA6DA,uCCnpEJ,gCD0lEI,2BC1lEJ,iED6lEM,uCC7lEN,oDDkmEI,WACA,mBCnmEJ,qFDsmEM,sBCtmEN,gGD2mEI,4CC3mEJ,0GD+mEI,iBACA,6CChnEJ,2HDqnEM,iBACA,kBACA,2CCvnEN,wCD4nEI,yBACA,2BC7nEJ,8EDgoEM,WChoEN,yCDqoEI,2BACA,sBCtoEJ,+EDyoEM,mBCzoEN,mED6oEM,yBC7oEN,uBDyqEI,mBACA,WC1qEJ,qDDsaE,wCEw5EiD,CFx5EjD,2BEw5EsF,CFx5EtF,4BCtaF,mEDsaE,iCE05EgD,CF15EhD,uBE05EqF,CF15ErF,wBCtaF,gCDmrEI,2BCnrEJ,iCDsuEI,kCCtuEJ,qCD0uEI,aC1uEJ,0CDgvEI,yBChvEJ,qCD0vEI,yBC1vEJ,sJD+vEM,yBC/vEN,oJDmwEM,yBCnwEN,gJDuwEM,yBCvwEN,mHD8wEQ,yBC9wER,mFDoxEQ,qBCpxER,wDDyxEM,2BA1nEJ,6CC/JF,sCDsyEM,eAr/BJ,oBAUI,cC3zCN,4GD4yEM,yBC5yEN,2GDgzEM,yBChzEN,yGDozEM,yBCpzEN,yCD40EE,yBACA,WC70EF,0DDg1EI,WACA,WCj1EJ,wEDsaE,wCEu8EiD,CFv8EjD,2BEu8EsF,CFv8EtF,4BCtaF,wFDi3EQ,YCj3ER,2DDs3EM,WCt3EN,gDD03EM,gBC13EN,uED40EE,yBACA,WC70EF,wFDg1EI,WACA,WCj1EJ,2FDy1EI,gCCz1EJ,oED40EE,yBACA,WC70EF,qFDg1EI,WACA,WCj1EJ,wFDy1EI,gCCz1EJ,sED40EE,yBACA,sBC70EF,uFDg1EI,sBACA,WCj1EJ,0FDy1EI,0BCz1EJ,wBDk6EI,mBCl6EJ,yRDy6EI,mBCz6EJ,sKD86EI,0CC96EJ,8BDk7EI,2BCl7EJ,qDDs7EI,WCt7EJ,iCD0+EI,sBC1+EJ,sKDk/EI,WCl/EJ,wCDs/EI,2BCt/EJ,uDD0/EI,iCC1/EJ,sCD8/EI,2BC9/EJ,6CDkgFI,WACA,yBCngFJ,0GDugFI,2BCvgFJ,wYD8gFM,uCC9gFN,uEDqhFI,kCCrhFJ,mGDyhFI,kCCzhFJ,yCDu9EI,yBACA,WCx9EJ,qED49EI,mCC59EJ,iEDg+EI,gCCh+EJ,qCDsaE,wCEqhF+C,CFrhF/C,2BEqhFoF,CFrhFpF,6BA0nEE,yBACA,WCjiFJ,4EDu9EI,yBACA,sBCx9EJ,wGD49EI,sCC59EJ,oGDg+EI,2CCh+EJ,0EDu9EI,yBACA,WCx9EJ,sGD49EI,oCC59EJ,kGDg+EI,gCCh+EJ,2CDsaE,iCEuiF8C,CFviF9C,uBEuiFmF,CFviFnF,wBCtaF,2CDijFI,cCjjFJ,sDDojFM,cCpjFN,oDDwjFM,cCxjFN,mCDsaE,0CE+iFiD,CF/iFjD,+BE+iFwF,CF/iFxF,+BA4rEE,mBACA,WCnmFJ,0BDswJI,uCCtwJJ,mCD0wJI,yCC1wJJ,kCDwnFI,mBACA,WCznFJ,gEDsaE,wCE0jFiD,CF1jFjD,2BE0jFsF,CF1jFtF,4BCtaF,6BD6nFI,uCC7nFJ,gXDqoFQ,iCAON,oBC5oFF,iHD+oFM,oBC/oFN,+CDopFI,WCppFJ,kGDypFI,2BCzpFJ,6DD6pFI,2BC7pFJ,oMDiqFM,cCjqFN,0DD07II,2BC17IJ,+DDk8II,cCl8IJ,0EDq8IM,cCr8IN,wEDy8IM,cCz8IN,0DD88II,cC98IJ,oCDk9II,sBCl9IJ,gEDu9IM,yBCv9IN,2ED09IQ,yBC19IR,yED89IQ,yBC99IR,yQDw+IM,cCx+IN,iKDk/IM,yBCl/IN,wBDu/II,cCv/IJ,8HDymIM,2BCzmIN,yEDinIM,sCCjnIN,iGD0xFE,yGACA,yBACA,2BC5xFF,2EDy5IM,sCCz5IN,mGD0xFE,yGACA,yBACA,2BC5xFF,kEDsgIM,sCCtgIN,0FD0gIM,uCC1gIN,+ED8gIM,sCC9gIN,2FDmhIQ,2BCnhIR,uGDuhIQ,6BCvhIR,wED+xIM,2BC/xIN,8EDmyIM,WCnyIN,0FDwyIQ,cCxyIR,qGD4yIQ,cC5yIR,+NDgzIQ,cChzIR,8FD6zIQ,2BC7zIR,gGDi0IQ,4BCj0IR,mCDmwFM,cCnwFN,kCDuwFM,cCvwFN,gCD2wFM,cC3wFN,iFD41FI,2BC51FJ,kJDi2FI,2BCj2FJ,gCDq2FI,oBCr2FJ,uDDw2FM,2BCx2FN,6CDw2FM,2BCx2FN,kDDw2FM,2BCx2FN,2DDw2FM,2BCx2FN,sDDw2FM,2BCx2FN,uCDk3FQ,sBCl3FR,gDDs3FQ,sBCt3FR,4CD43FI,oBC53FJ,kGDi4FI,oBCj4FJ,wGDq4FI,cCr4FJ,wFDo6FM,WCp6FN,2CD46FM,2BC56FN,qCDi7FI,sBCj7FJ,wKDu7FM,iCCv7FN,6BD0/FI,mBC1/FJ,2DDsaE,wCEwsFiD,CFxsFjD,2BEwsFsF,CFxsFtF,6BCtaF,4BD8/FI,eACA,WC//FJ,mFDmgGQ,2BCngGR,sGD0gGI,WC1gGJ,2ODkhGM,iCClhGN,4BD2iGI,mBC3iGJ,sFDgjGI,2BChjGJ,4EDqjGI,0BACA,4BCtjGJ,mED2jGI,0BC3jGJ,2PDmkGM,kCCnkGN,0CD4lGI,aC5lGJ,sCDgmGI,yBChmGJ,2CDomGI,yBCpmGJ,uEDymGM,aCzmGN,mED6mGM,yBC7mGN,wEDinGM,yBCjnGN,qEDunGM,aCvnGN,iED2nGM,yBC3nGN,sED+nGM,yBC/nGN,2EDkpGM,eClpGN,iGDspGM,eCtpGN,6FD0pGM,eC1pGN,qCD0rGI,kCC1rGJ,qFDuqGI,qBCvqGJ,+VD8qGI,yBC9qGJ,oFDuqGI,qBCvqGJ,2VD8qGI,yBC9qGJ,kFDuqGI,qBCvqGJ,mVD8qGI,yBC9qGJ,sKDgtGQ,kCChtGR,kKDqtGQ,sCCrtGR,2EDytGQ,2BCztGR,mDDguGM,sBChuGN,+BD0vGI,WC1vGJ,yFD8vGI,2BC9vGJ,+BDswGI,2BCtwGJ,+BD0wGI,mBC1wGJ,6DDsaE,wCE2yFiD,CF3yFjD,2BE2yFsF,CF3yFtF,6BCtaF,kFD8wGM,iCC9wGN,uEDqxGQ,cCrxGR,sEDyxGQ,cCzxGR,kJD6xGQ,cC7xGR,+EDsyGM,2BCtyGN,mCD80GI,yBACA,WC/0GJ,yBDm1GI,yBACA,WCp1GJ,yCDu1GM,yBCv1GN,+CDsaE,yCEi0FkD,CFj0FlD,+BEi0FyF,CFj0FzF,+BCtaF,8BDk2GI,6CCl2GJ,qFDq2GM,4CACA,kBCt2GN,uDD+2GM,iBACA,6CCh3GN,mDDq3GI,sCCr3GJ,mEDm4GM,yBCn4GN,iEDy4GM,uCCz4GN,+DD+4GM,yBC/4GN,+EDm4GM,sBCn4GN,6EDy4GM,uCCz4GN,2ED+4GM,sBC/4GN,4EDm4GM,yBCn4GN,0EDy4GM,uCCz4GN,wED+4GM,yBC/4GN,qEDo7GM,sBCp7GN,qCDsaE,wCEo2F+C,CFp2F/C,2BEo2FoF,CFp2FpF,4BAohGE,yBC17GJ,mCD87GI,sCC97GJ,0CD0+GI,sCC1+GJ,+IDg9GI,yBCh9GJ,uDDo9GI,WCp9GJ,4IDg9GI,yBCh9GJ,sDDo9GI,sBCp9GJ,sIDg9GI,yBCh9GJ,oDDo9GI,WCp9GJ,oCD0/GI,sCC1/GJ,oWDggHM,sCChgHN,0DDohHM,uCCphHN,8KD0hHQ,sBC1hHR,sMDgiHU,sCChiHV,0FDuiHQ,kCACA,6BCxiHR,sMD8iHU,kCC9iHV,8ODkjHU,kCCljHV,8DDyjHI,kCCzjHJ,sDD6jHI,6HAIA,kICjkHJ,oDDskHI,8HCtkHJ,yIDmmHM,uCAMF,oBCzmHJ,oCD2mHQ,gBC3mHR,+FDmnHM,2BCnnHN,6CDynHM,sCACA,WC1nHN,sKDgoHM,yBACA,WCjoHN,yDDqoHM,6BACA,cCtoHN,oED0oHM,WC1oHN,mED8oHM,cC9oHN,wEDmpHI,yBCnpHJ,gDDupHI,wCCvpHJ,iJD6pHI,uCC7pHJ,oCDysHI,cCzsHJ,2DD6tHI,8CC7tHJ,yHDmuHM,2CACA,mBCpuHN,uDDyuHI,WCzuHJ,yFD4uHM,2BC5uHN,gDDivHI,kBCjvHJ,oFDqvHI,kCCrvHJ,0HD2vHI,mBACA,gBC5vHJ,wxBDyyHQ,sCCzyHR,4GD+xHI,yBC/xHJ,0JD+xHI,sBC/xHJ,gxBDyyHQ,sCCzyHR,0GD+xHI,yBC/xHJ,sJD+xHI,iCC/xHJ,gwBDyyHQ,sCCzyHR,sGD+xHI,yBC/xHJ,8ID+xHI,sBC/xHJ,g3BDyyHQ,sCCzyHR,8QDkzHI,yBClzHJ,0QDuzHI,WCvzHJ,8UD0zHM,2BC1zHN,8KDg0HI,kBCh0HJ,sPDo0HI,kCCp0HJ,gJD00HI,uCC10HJ,w2BDyyHQ,sCCzyHR,0QDkzHI,yBClzHJ,sQDuzHI,sBCvzHJ,0UD0zHM,qBC1zHN,4KDg0HI,6BCh0HJ,oPDo0HI,4BCp0HJ,8ID00HI,iCC10HJ,w1BDyyHQ,sCCzyHR,kQDkzHI,yBClzHJ,8PDuzHI,WCvzHJ,kUD0zHM,2BC1zHN,wKDg0HI,kBCh0HJ,gPDo0HI,kCCp0HJ,0ID00HI,uCC10HJ,gEDk4HI,mBACA,WCn4HJ,qCDk2HE,mBACA,sBCn2HF,mCDk2HE,mBACA,WCn2HF,mKD02HI,8BC12HJ,6QDk3HI,cCl3HJ,6CDs3HI,yBCt3HJ,0BDi7HI,6BCj7HJ,uBDmoJI,mBCnoJJ,+DDwoJI,WCxoJJ,sCD+8HI,sBACA,mBA1iHF,wCEukG+C,CFvkG/C,4BEukGqF,CFvkGrF,6BCtaF,yCDs9HI,cArlEF,mBACE,gBACA,eACA,kBEynDiB,CFznDjB,gBEynDmC,CFznDnC,WAGF,oCACE,cAGF,oCACE,eAhTF,yCArNE,sDAuNA,gBAGF,sCA1NE,sDA4NA,gBAGF,6CA/NE,sDAiOA,gBA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","file":"styles.b5f91374abe04f5ec850.css","sourcesContent":["// Import all the theming functionality.\n// We can use relative imports for imports from the cdk because we bundle everything\n// up into a single flat scss file for material.\n// We want overlays to always appear over user content, so set a baseline\n// very high z-index for the overlay container, which is where we create the new\n// stacking context for all overlays.\n$cdk-z-index-overlay-container: 1000;\n$cdk-z-index-overlay: 1000;\n$cdk-z-index-overlay-backdrop: 1000;\n\n// Background color for all of the backdrops\n$cdk-overlay-dark-backdrop-background: rgba(0, 0, 0, 0.32);\n\n// Default backdrop animation is based on the Material Design swift-ease-out.\n$backdrop-animation-duration: 400ms !default;\n$backdrop-animation-timing-function: cubic-bezier(0.25, 0.8, 0.25, 1) !default;\n\n\n@mixin cdk-overlay() {\n  .cdk-overlay-container, .cdk-global-overlay-wrapper {\n    // Disable events from being captured on the overlay container.\n    pointer-events: none;\n\n    // The container should be the size of the viewport.\n    top: 0;\n    left: 0;\n    height: 100%;\n    width: 100%;\n  }\n\n  // The overlay-container is an invisible element which contains all individual overlays.\n  .cdk-overlay-container {\n    position: fixed;\n    z-index: $cdk-z-index-overlay-container;\n\n    &:empty {\n      // Hide the element when it doesn't have any child nodes. This doesn't\n      // include overlays that have been detached, rather than disposed.\n      display: none;\n    }\n  }\n\n  // We use an extra wrapper element in order to use make the overlay itself a flex item.\n  // This makes centering the overlay easy without running into the subpixel rendering\n  // problems tied to using `transform` and without interfering with the other position\n  // strategies.\n  .cdk-global-overlay-wrapper {\n    display: flex;\n    position: absolute;\n    z-index: $cdk-z-index-overlay;\n  }\n\n  // A single overlay pane.\n  .cdk-overlay-pane {\n    // Note: it's important for this one to start off `absolute`,\n    // in order for us to be able to measure it correctly.\n    position: absolute;\n    pointer-events: auto;\n    box-sizing: border-box;\n    z-index: $cdk-z-index-overlay;\n\n    // For connected-position overlays, we set `display: flex` in\n    // order to force `max-width` and `max-height` to take effect.\n    display: flex;\n    max-width: 100%;\n    max-height: 100%;\n  }\n\n  .cdk-overlay-backdrop {\n    // TODO(jelbourn): reuse sidenav fullscreen mixin.\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n\n    z-index: $cdk-z-index-overlay-backdrop;\n    pointer-events: auto;\n    -webkit-tap-highlight-color: transparent;\n    transition: opacity $backdrop-animation-duration $backdrop-animation-timing-function;\n    opacity: 0;\n\n    &.cdk-overlay-backdrop-showing {\n      opacity: 1;\n\n      // In high contrast mode the rgba background will become solid so we need to fall back\n      // to making it opaque using `opacity`. Note that we can't use the `cdk-high-contrast`\n      // mixin, because we can't normalize the import path to the _a11y.scss both for the\n      // source and when this file is distributed. See #10908.\n      @media screen and (-ms-high-contrast: active) {\n        opacity: 0.6;\n      }\n    }\n  }\n\n  .cdk-overlay-dark-backdrop {\n    background: $cdk-overlay-dark-backdrop-background;\n  }\n\n  .cdk-overlay-transparent-backdrop {\n    // Note: as of Firefox 57, having the backdrop be `background: none` will prevent it from\n    // capturing the user's mouse scroll events. Since we also can't use something like\n    // `rgba(0, 0, 0, 0)`, we work around the inconsistency by not setting the background at\n    // all and using `opacity` to make the element transparent.\n    &, &.cdk-overlay-backdrop-showing {\n      opacity: 0;\n    }\n  }\n\n  // Overlay parent element used with the connected position strategy. Used to constrain the\n  // overlay element's size to fit within the viewport.\n  .cdk-overlay-connected-position-bounding-box {\n    position: absolute;\n    z-index: $cdk-z-index-overlay;\n\n    // We use `display: flex` on this element exclusively for centering connected overlays.\n    // When *not* centering, a top/left/bottom/right will be set which overrides the normal\n    // flex layout.\n    display: flex;\n\n    // We use the `column` direction here to avoid some flexbox issues in Edge\n    // when using the \"grow after open\" options.\n    flex-direction: column;\n\n    // Add some dimensions so the element has an `innerText` which some people depend on in tests.\n    min-width: 1px;\n    min-height: 1px;\n  }\n\n  // Used when disabling global scrolling.\n  .cdk-global-scrollblock {\n    position: fixed;\n\n    // Necessary for the content not to lose its width. Note that we're using 100%, instead of\n    // 100vw, because 100vw includes the width plus the scrollbar, whereas 100% is the width\n    // that the element had before we made it `fixed`.\n    width: 100%;\n\n    // Note: this will always add a scrollbar to whatever element it is on, which can\n    // potentially result in double scrollbars. It shouldn't be an issue, because we won't\n    // block scrolling on a page that doesn't have a scrollbar in the first place.\n    overflow-y: scroll;\n  }\n}\n\n@mixin cdk-a11y {\n  .cdk-visually-hidden {\n    border: 0;\n    clip: rect(0 0 0 0);\n    height: 1px;\n    margin: -1px;\n    overflow: hidden;\n    padding: 0;\n    position: absolute;\n    width: 1px;\n\n    // Avoid browsers rendering the focus ring in some cases.\n    outline: 0;\n\n    // Avoid some cases where the browser will still render the native controls (see #9049).\n    -webkit-appearance: none;\n    -moz-appearance: none;\n  }\n}\n\n/**\n * Applies styles for users in high contrast mode. Note that this only applies\n * to Microsoft browsers. Chrome can be included by checking for the `html[hc]`\n * attribute, however Chrome handles high contrast differently.\n * @param target Which kind of high contrast setting to target. Defaults to `active`, can be\n *    `white-on-black` or `black-on-white`.\n */\n@mixin cdk-high-contrast($target: active) {\n  @media screen and (-ms-high-contrast: $target) {\n    @content;\n  }\n}\n\n// Core styles that enable monitoring autofill state of text fields.\n@mixin cdk-text-field {\n  // Keyframes that apply no styles, but allow us to monitor when an text field becomes autofilled\n  // by watching for the animation events that are fired when they start. Note: the /*!*/ comment is\n  // needed to prevent LibSass from stripping the keyframes out.\n  // Based on: https://medium.com/@brunn/detecting-autofilled-fields-in-javascript-aed598d25da7\n  @keyframes cdk-text-field-autofill-start {/*!*/}\n  @keyframes cdk-text-field-autofill-end {/*!*/}\n\n  .cdk-text-field-autofill-monitored:-webkit-autofill {\n    animation-name: cdk-text-field-autofill-start;\n  }\n\n  .cdk-text-field-autofill-monitored:not(:-webkit-autofill) {\n    animation-name: cdk-text-field-autofill-end;\n  }\n\n  // Remove the resize handle on autosizing textareas, because whatever height\n  // the user resized to will be overwritten once they start typing again.\n  textarea.cdk-textarea-autosize {\n    resize: none;\n  }\n\n  // This class is temporarily applied to the textarea when it is being measured. It is immediately\n  // removed when measuring is complete. We use `!important` rules here to make sure user-specified\n  // rules do not interfere with the measurement.\n  textarea.cdk-textarea-autosize-measuring {\n    height: auto !important;\n    overflow: hidden !important;\n    // Having 2px top and bottom padding seems to fix a bug where Chrome gets an incorrect\n    // measurement. We just have to account for it later and subtract it off the final result.\n    padding: 2px 0 !important;\n    box-sizing: content-box !important;\n  }\n}\n\n// Used to generate UIDs for keyframes used to change the text field autofill styles.\n$cdk-text-field-autofill-color-frame-count: 0;\n\n// Mixin used to apply custom background and foreground colors to an autofilled text field.\n// Based on: https://stackoverflow.com/questions/2781549/\n// removing-input-background-colour-for-chrome-autocomplete#answer-37432260\n@mixin cdk-text-field-autofill-color($background, $foreground:'') {\n  @keyframes cdk-text-field-autofill-color-#{$cdk-text-field-autofill-color-frame-count} {\n    to {\n      background: $background;\n      @if $foreground != '' { color: $foreground; }\n    }\n  }\n\n  &:-webkit-autofill {\n    animation-name: cdk-text-field-autofill-color-#{$cdk-text-field-autofill-color-frame-count};\n    animation-fill-mode: both;\n  }\n\n  &.cdk-text-field-autofill-monitored:-webkit-autofill {\n    animation-name: cdk-text-field-autofill-start,\n                    cdk-text-field-autofill-color-#{$cdk-text-field-autofill-color-frame-count};\n  }\n\n  $cdk-text-field-autofill-color-frame-count:\n      $cdk-text-field-autofill-color-frame-count + 1 !global;\n}\n\n\n// Core styles that can be used to apply material design treatments to any element.\n// Media queries\n// TODO(josephperrott): Change $mat-xsmall and $mat-small usages to rely on BreakpointObserver,\n$mat-xsmall: 'max-width: 599px';\n$mat-small: 'max-width: 959px';\n\n// TODO: Revisit all z-indices before beta\n// z-index master list\n\n$z-index-fab: 20 !default;\n$z-index-drawer: 100 !default;\n\n// Global constants\n$pi: 3.14159265;\n\n// Padding between input toggles and their labels\n$mat-toggle-padding: 8px !default;\n// Width and height of input toggles\n$mat-toggle-size: 20px !default;\n\n// Easing Curves\n// TODO(jelbourn): all of these need to be revisited\n\n// The default animation curves used by material design.\n$mat-linear-out-slow-in-timing-function: cubic-bezier(0, 0, 0.2, 0.1) !default;\n$mat-fast-out-slow-in-timing-function: cubic-bezier(0.4, 0, 0.2, 1) !default;\n$mat-fast-out-linear-in-timing-function: cubic-bezier(0.4, 0, 1, 1) !default;\n\n$ease-in-out-curve-function: cubic-bezier(0.35, 0, 0.25, 1) !default;\n\n$swift-ease-out-duration: 400ms !default;\n$swift-ease-out-timing-function: cubic-bezier(0.25, 0.8, 0.25, 1) !default;\n$swift-ease-out: all $swift-ease-out-duration $swift-ease-out-timing-function !default;\n\n$swift-ease-in-duration: 300ms !default;\n$swift-ease-in-timing-function: cubic-bezier(0.55, 0, 0.55, 0.2) !default;\n$swift-ease-in: all $swift-ease-in-duration $swift-ease-in-timing-function !default;\n\n$swift-ease-in-out-duration: 500ms !default;\n$swift-ease-in-out-timing-function: $ease-in-out-curve-function !default;\n$swift-ease-in-out: all $swift-ease-in-out-duration $swift-ease-in-out-timing-function !default;\n\n$swift-linear-duration: 80ms !default;\n$swift-linear-timing-function: linear !default;\n$swift-linear: all $swift-linear-duration $swift-linear-timing-function !default;\n\n\n\n// A collection of mixins and CSS classes that can be used to apply elevation to a material\n// element.\n// See: https://material.io/design/environment/elevation.html\n// Examples:\n//\n//\n// .mat-foo {\n//   @include $mat-elevation(2);\n//\n//   &:active {\n//     @include $mat-elevation(8);\n//   }\n// }\n//\n// <div id=\"external-card\" class=\"mat-elevation-z2\"><p>Some content</p></div>\n//\n// For an explanation of the design behind how elevation is implemented, see the design doc at\n// https://goo.gl/Kq0k9Z.\n\n// Colors for umbra, penumbra, and ambient shadows. As described in the design doc, each elevation\n// level is created using a set of 3 shadow values, one for umbra (the shadow representing the\n// space completely obscured by an object relative to its light source), one for penumbra (the\n// space partially obscured by an object), and one for ambient (the space which contains the object\n// itself). For a further explanation of these terms and their meanings, see\n// https://en.wikipedia.org/wiki/Umbra,_penumbra_and_antumbra.\n\n// Maps for the different shadow sets and their values within each z-space. These values were\n// created by taking a few reference shadow sets created by Google's Designers and interpolating\n// all of the values between them.\n\n@function _get-umbra-map($color, $opacity) {\n  @return (\n    0: '0px 0px 0px 0px #{rgba($color, $opacity * 0.2)}',\n    1: '0px 2px 1px -1px #{rgba($color, $opacity * 0.2)}',\n    2: '0px 3px 1px -2px #{rgba($color, $opacity * 0.2)}',\n    3: '0px 3px 3px -2px #{rgba($color, $opacity * 0.2)}',\n    4: '0px 2px 4px -1px #{rgba($color, $opacity * 0.2)}',\n    5: '0px 3px 5px -1px #{rgba($color, $opacity * 0.2)}',\n    6: '0px 3px 5px -1px #{rgba($color, $opacity * 0.2)}',\n    7: '0px 4px 5px -2px #{rgba($color, $opacity * 0.2)}',\n    8: '0px 5px 5px -3px #{rgba($color, $opacity * 0.2)}',\n    9: '0px 5px 6px -3px #{rgba($color, $opacity * 0.2)}',\n    10: '0px 6px 6px -3px #{rgba($color, $opacity * 0.2)}',\n    11: '0px 6px 7px -4px #{rgba($color, $opacity * 0.2)}',\n    12: '0px 7px 8px -4px #{rgba($color, $opacity * 0.2)}',\n    13: '0px 7px 8px -4px #{rgba($color, $opacity * 0.2)}',\n    14: '0px 7px 9px -4px #{rgba($color, $opacity * 0.2)}',\n    15: '0px 8px 9px -5px #{rgba($color, $opacity * 0.2)}',\n    16: '0px 8px 10px -5px #{rgba($color, $opacity * 0.2)}',\n    17: '0px 8px 11px -5px #{rgba($color, $opacity * 0.2)}',\n    18: '0px 9px 11px -5px #{rgba($color, $opacity * 0.2)}',\n    19: '0px 9px 12px -6px #{rgba($color, $opacity * 0.2)}',\n    20: '0px 10px 13px -6px #{rgba($color, $opacity * 0.2)}',\n    21: '0px 10px 13px -6px #{rgba($color, $opacity * 0.2)}',\n    22: '0px 10px 14px -6px #{rgba($color, $opacity * 0.2)}',\n    23: '0px 11px 14px -7px #{rgba($color, $opacity * 0.2)}',\n    24: '0px 11px 15px -7px #{rgba($color, $opacity * 0.2)}'\n  );\n}\n\n@function _get-penumbra-map($color, $opacity) {\n  @return (\n    0: '0px 0px 0px 0px #{rgba($color, $opacity * 0.14)}',\n    1: '0px 1px 1px 0px #{rgba($color, $opacity * 0.14)}',\n    2: '0px 2px 2px 0px #{rgba($color, $opacity * 0.14)}',\n    3: '0px 3px 4px 0px #{rgba($color, $opacity * 0.14)}',\n    4: '0px 4px 5px 0px #{rgba($color, $opacity * 0.14)}',\n    5: '0px 5px 8px 0px #{rgba($color, $opacity * 0.14)}',\n    6: '0px 6px 10px 0px #{rgba($color, $opacity * 0.14)}',\n    7: '0px 7px 10px 1px #{rgba($color, $opacity * 0.14)}',\n    8: '0px 8px 10px 1px #{rgba($color, $opacity * 0.14)}',\n    9: '0px 9px 12px 1px #{rgba($color, $opacity * 0.14)}',\n    10: '0px 10px 14px 1px #{rgba($color, $opacity * 0.14)}',\n    11: '0px 11px 15px 1px #{rgba($color, $opacity * 0.14)}',\n    12: '0px 12px 17px 2px #{rgba($color, $opacity * 0.14)}',\n    13: '0px 13px 19px 2px #{rgba($color, $opacity * 0.14)}',\n    14: '0px 14px 21px 2px #{rgba($color, $opacity * 0.14)}',\n    15: '0px 15px 22px 2px #{rgba($color, $opacity * 0.14)}',\n    16: '0px 16px 24px 2px #{rgba($color, $opacity * 0.14)}',\n    17: '0px 17px 26px 2px #{rgba($color, $opacity * 0.14)}',\n    18: '0px 18px 28px 2px #{rgba($color, $opacity * 0.14)}',\n    19: '0px 19px 29px 2px #{rgba($color, $opacity * 0.14)}',\n    20: '0px 20px 31px 3px #{rgba($color, $opacity * 0.14)}',\n    21: '0px 21px 33px 3px #{rgba($color, $opacity * 0.14)}',\n    22: '0px 22px 35px 3px #{rgba($color, $opacity * 0.14)}',\n    23: '0px 23px 36px 3px #{rgba($color, $opacity * 0.14)}',\n    24: '0px 24px 38px 3px #{rgba($color, $opacity * 0.14)}'\n  );\n}\n\n@function _get-ambient-map($color, $opacity) {\n  @return (\n    0: '0px 0px 0px 0px #{rgba($color, $opacity * 0.12)}',\n    1: '0px 1px 3px 0px #{rgba($color, $opacity * 0.12)}',\n    2: '0px 1px 5px 0px #{rgba($color, $opacity * 0.12)}',\n    3: '0px 1px 8px 0px #{rgba($color, $opacity * 0.12)}',\n    4: '0px 1px 10px 0px #{rgba($color, $opacity * 0.12)}',\n    5: '0px 1px 14px 0px #{rgba($color, $opacity * 0.12)}',\n    6: '0px 1px 18px 0px #{rgba($color, $opacity * 0.12)}',\n    7: '0px 2px 16px 1px #{rgba($color, $opacity * 0.12)}',\n    8: '0px 3px 14px 2px #{rgba($color, $opacity * 0.12)}',\n    9: '0px 3px 16px 2px #{rgba($color, $opacity * 0.12)}',\n    10: '0px 4px 18px 3px #{rgba($color, $opacity * 0.12)}',\n    11: '0px 4px 20px 3px #{rgba($color, $opacity * 0.12)}',\n    12: '0px 5px 22px 4px #{rgba($color, $opacity * 0.12)}',\n    13: '0px 5px 24px 4px #{rgba($color, $opacity * 0.12)}',\n    14: '0px 5px 26px 4px #{rgba($color, $opacity * 0.12)}',\n    15: '0px 6px 28px 5px #{rgba($color, $opacity * 0.12)}',\n    16: '0px 6px 30px 5px #{rgba($color, $opacity * 0.12)}',\n    17: '0px 6px 32px 5px #{rgba($color, $opacity * 0.12)}',\n    18: '0px 7px 34px 6px #{rgba($color, $opacity * 0.12)}',\n    19: '0px 7px 36px 6px #{rgba($color, $opacity * 0.12)}',\n    20: '0px 8px 38px 7px #{rgba($color, $opacity * 0.12)}',\n    21: '0px 8px 40px 7px #{rgba($color, $opacity * 0.12)}',\n    22: '0px 8px 42px 7px #{rgba($color, $opacity * 0.12)}',\n    23: '0px 9px 44px 8px #{rgba($color, $opacity * 0.12)}',\n    24: '0px 9px 46px 8px #{rgba($color, $opacity * 0.12)}'\n  );\n}\n\n// The default duration value for elevation transitions.\n$mat-elevation-transition-duration: 280ms !default;\n\n// The default easing value for elevation transitions.\n$mat-elevation-transition-timing-function: $mat-fast-out-slow-in-timing-function;\n\n// The default color for elevation shadows.\n$mat-elevation-color: black !default;\n\n// The default opacity scaling value for elevation shadows.\n$mat-elevation-opacity: 1 !default;\n\n// Prefix for elevation-related selectors.\n$_mat-elevation-prefix: 'mat-elevation-z';\n\n// Applies the correct css rules to an element to give it the elevation specified by $zValue.\n// The $zValue must be between 0 and 24.\n@mixin mat-elevation($zValue, $color: $mat-elevation-color, $opacity: $mat-elevation-opacity) {\n  @if type-of($zValue) != number or not unitless($zValue) {\n    @error '$zValue must be a unitless number';\n  }\n  @if $zValue < 0 or $zValue > 24 {\n    @error '$zValue must be between 0 and 24';\n  }\n\n  box-shadow: #{map-get(_get-umbra-map($color, $opacity), $zValue)},\n              #{map-get(_get-penumbra-map($color, $opacity), $zValue)},\n              #{map-get(_get-ambient-map($color, $opacity), $zValue)};\n}\n\n@mixin _mat-theme-elevation($zValue, $theme, $opacity: $mat-elevation-opacity) {\n  $foreground: map-get($theme, foreground);\n  $elevation-color: map-get($foreground, elevation);\n  $elevation-color-or-default: if($elevation-color == null, $mat-elevation-color, $elevation-color);\n\n  @include mat-elevation($zValue, $elevation-color-or-default, $opacity);\n}\n\n// Applies the elevation to an element in a manner that allows\n// consumers to override it via the Material elevation classes.\n@mixin mat-overridable-elevation(\n    $zValue,\n    $color: $mat-elevation-color,\n    $opacity: $mat-elevation-opacity) {\n  &:not([class*='#{$_mat-elevation-prefix}']) {\n    @include mat-elevation($zValue, $color, $opacity);\n  }\n}\n\n@mixin _mat-theme-overridable-elevation($zValue, $theme, $opacity: $mat-elevation-opacity) {\n  $foreground: map-get($theme, foreground);\n  $elevation-color: map-get($foreground, elevation);\n  $elevation-color-or-default: if($elevation-color == null, $mat-elevation-color, $elevation-color);\n\n  @include mat-overridable-elevation($zValue, $elevation-color-or-default, $opacity);\n}\n\n// Returns a string that can be used as the value for a transition property for elevation.\n// Calling this function directly is useful in situations where a component needs to transition\n// more than one property.\n//\n// .foo {\n//   transition: mat-elevation-transition-property-value(), opacity 100ms ease;\n// }\n@function mat-elevation-transition-property-value(\n    $duration: $mat-elevation-transition-duration,\n    $easing: $mat-elevation-transition-timing-function) {\n  @return box-shadow #{$duration} #{$easing};\n}\n\n// Applies the correct css rules needed to have an element transition between elevations.\n// This mixin should be applied to elements whose elevation values will change depending on their\n// context (e.g. when active or disabled).\n//\n// NOTE(traviskaufman): Both this mixin and the above function use default parameters so they can\n// be used in the same way by clients.\n@mixin mat-elevation-transition(\n    $duration: $mat-elevation-transition-duration,\n    $easing: $mat-elevation-transition-timing-function) {\n  transition: mat-elevation-transition-property-value($duration, $easing);\n}\n\n// Color palettes from the Material Design spec.\n// See https://material.io/design/color/\n//\n// Contrast colors are hard-coded because it is too difficult (probably impossible) to\n// calculate them. These contrast colors are pulled from the public Material Design spec swatches.\n// While the contrast colors in the spec are not prescriptive, we use them for convenience.\n\n\n// @deprecated renamed to $dark-primary-text.\n// @breaking-change 8.0.0\n$black-87-opacity: rgba(black, 0.87);\n// @deprecated renamed to $light-primary-text.\n// @breaking-change 8.0.0\n$white-87-opacity: rgba(white, 0.87);\n// @deprecated use $dark-[secondary-text,disabled-text,dividers,focused] instead.\n// @breaking-change 8.0.0\n$black-12-opacity: rgba(black, 0.12);\n// @deprecated use $light-[secondary-text,disabled-text,dividers,focused] instead.\n// @breaking-change 8.0.0\n$white-12-opacity: rgba(white, 0.12);\n// @deprecated use $dark-[secondary-text,disabled-text,dividers,focused] instead.\n// @breaking-change 8.0.0\n$black-6-opacity: rgba(black, 0.06);\n// @deprecated use $light-[secondary-text,disabled-text,dividers,focused] instead.\n// @breaking-change 8.0.0\n$white-6-opacity: rgba(white, 0.06);\n\n$dark-primary-text: rgba(black, 0.87);\n$dark-secondary-text: rgba(black, 0.54);\n$dark-disabled-text: rgba(black, 0.38);\n$dark-dividers: rgba(black, 0.12);\n$dark-focused: rgba(black, 0.12);\n$light-primary-text: white;\n$light-secondary-text: rgba(white, 0.7);\n$light-disabled-text: rgba(white, 0.5);\n$light-dividers: rgba(white, 0.12);\n$light-focused: rgba(white, 0.12);\n\n$mat-red: (\n  50: #ffebee,\n  100: #ffcdd2,\n  200: #ef9a9a,\n  300: #e57373,\n  400: #ef5350,\n  500: #f44336,\n  600: #e53935,\n  700: #d32f2f,\n  800: #c62828,\n  900: #b71c1c,\n  A100: #ff8a80,\n  A200: #ff5252,\n  A400: #ff1744,\n  A700: #d50000,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $light-primary-text,\n    A400: $light-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n$mat-pink: (\n  50: #fce4ec,\n  100: #f8bbd0,\n  200: #f48fb1,\n  300: #f06292,\n  400: #ec407a,\n  500: #e91e63,\n  600: #d81b60,\n  700: #c2185b,\n  800: #ad1457,\n  900: #880e4f,\n  A100: #ff80ab,\n  A200: #ff4081,\n  A400: #f50057,\n  A700: #c51162,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $light-primary-text,\n    A400: $light-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n$mat-purple: (\n  50: #f3e5f5,\n  100: #e1bee7,\n  200: #ce93d8,\n  300: #ba68c8,\n  400: #ab47bc,\n  500: #9c27b0,\n  600: #8e24aa,\n  700: #7b1fa2,\n  800: #6a1b9a,\n  900: #4a148c,\n  A100: #ea80fc,\n  A200: #e040fb,\n  A400: #d500f9,\n  A700: #aa00ff,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $light-primary-text,\n    400: $light-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $light-primary-text,\n    A400: $light-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n$mat-deep-purple: (\n  50: #ede7f6,\n  100: #d1c4e9,\n  200: #b39ddb,\n  300: #9575cd,\n  400: #7e57c2,\n  500: #673ab7,\n  600: #5e35b1,\n  700: #512da8,\n  800: #4527a0,\n  900: #311b92,\n  A100: #b388ff,\n  A200: #7c4dff,\n  A400: #651fff,\n  A700: #6200ea,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $light-primary-text,\n    400: $light-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $light-primary-text,\n    A400: $light-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n$mat-indigo: (\n  50: #e8eaf6,\n  100: #c5cae9,\n  200: #9fa8da,\n  300: #7986cb,\n  400: #5c6bc0,\n  500: #3f51b5,\n  600: #3949ab,\n  700: #303f9f,\n  800: #283593,\n  900: #1a237e,\n  A100: #8c9eff,\n  A200: #536dfe,\n  A400: #3d5afe,\n  A700: #304ffe,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $light-primary-text,\n    400: $light-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $light-primary-text,\n    A400: $light-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n$mat-blue: (\n  50: #e3f2fd,\n  100: #bbdefb,\n  200: #90caf9,\n  300: #64b5f6,\n  400: #42a5f5,\n  500: #2196f3,\n  600: #1e88e5,\n  700: #1976d2,\n  800: #1565c0,\n  900: #0d47a1,\n  A100: #82b1ff,\n  A200: #448aff,\n  A400: #2979ff,\n  A700: #2962ff,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $light-primary-text,\n    A400: $light-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n$mat-light-blue: (\n  50: #e1f5fe,\n  100: #b3e5fc,\n  200: #81d4fa,\n  300: #4fc3f7,\n  400: #29b6f6,\n  500: #03a9f4,\n  600: #039be5,\n  700: #0288d1,\n  800: #0277bd,\n  900: #01579b,\n  A100: #80d8ff,\n  A200: #40c4ff,\n  A400: #00b0ff,\n  A700: #0091ea,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n$mat-cyan: (\n  50: #e0f7fa,\n  100: #b2ebf2,\n  200: #80deea,\n  300: #4dd0e1,\n  400: #26c6da,\n  500: #00bcd4,\n  600: #00acc1,\n  700: #0097a7,\n  800: #00838f,\n  900: #006064,\n  A100: #84ffff,\n  A200: #18ffff,\n  A400: #00e5ff,\n  A700: #00b8d4,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: $dark-primary-text,\n  )\n);\n\n$mat-teal: (\n  50: #e0f2f1,\n  100: #b2dfdb,\n  200: #80cbc4,\n  300: #4db6ac,\n  400: #26a69a,\n  500: #009688,\n  600: #00897b,\n  700: #00796b,\n  800: #00695c,\n  900: #004d40,\n  A100: #a7ffeb,\n  A200: #64ffda,\n  A400: #1de9b6,\n  A700: #00bfa5,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: $dark-primary-text,\n  )\n);\n\n$mat-green: (\n  50: #e8f5e9,\n  100: #c8e6c9,\n  200: #a5d6a7,\n  300: #81c784,\n  400: #66bb6a,\n  500: #4caf50,\n  600: #43a047,\n  700: #388e3c,\n  800: #2e7d32,\n  900: #1b5e20,\n  A100: #b9f6ca,\n  A200: #69f0ae,\n  A400: #00e676,\n  A700: #00c853,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $dark-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: $dark-primary-text,\n  )\n);\n\n$mat-light-green: (\n  50: #f1f8e9,\n  100: #dcedc8,\n  200: #c5e1a5,\n  300: #aed581,\n  400: #9ccc65,\n  500: #8bc34a,\n  600: #7cb342,\n  700: #689f38,\n  800: #558b2f,\n  900: #33691e,\n  A100: #ccff90,\n  A200: #b2ff59,\n  A400: #76ff03,\n  A700: #64dd17,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $dark-primary-text,\n    600: $dark-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: $dark-primary-text,\n  )\n);\n\n$mat-lime: (\n  50: #f9fbe7,\n  100: #f0f4c3,\n  200: #e6ee9c,\n  300: #dce775,\n  400: #d4e157,\n  500: #cddc39,\n  600: #c0ca33,\n  700: #afb42b,\n  800: #9e9d24,\n  900: #827717,\n  A100: #f4ff81,\n  A200: #eeff41,\n  A400: #c6ff00,\n  A700: #aeea00,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $dark-primary-text,\n    600: $dark-primary-text,\n    700: $dark-primary-text,\n    800: $dark-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: $dark-primary-text,\n  )\n);\n\n$mat-yellow: (\n  50: #fffde7,\n  100: #fff9c4,\n  200: #fff59d,\n  300: #fff176,\n  400: #ffee58,\n  500: #ffeb3b,\n  600: #fdd835,\n  700: #fbc02d,\n  800: #f9a825,\n  900: #f57f17,\n  A100: #ffff8d,\n  A200: #ffff00,\n  A400: #ffea00,\n  A700: #ffd600,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $dark-primary-text,\n    600: $dark-primary-text,\n    700: $dark-primary-text,\n    800: $dark-primary-text,\n    900: $dark-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: $dark-primary-text,\n  )\n);\n\n$mat-amber: (\n  50: #fff8e1,\n  100: #ffecb3,\n  200: #ffe082,\n  300: #ffd54f,\n  400: #ffca28,\n  500: #ffc107,\n  600: #ffb300,\n  700: #ffa000,\n  800: #ff8f00,\n  900: #ff6f00,\n  A100: #ffe57f,\n  A200: #ffd740,\n  A400: #ffc400,\n  A700: #ffab00,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $dark-primary-text,\n    600: $dark-primary-text,\n    700: $dark-primary-text,\n    800: $dark-primary-text,\n    900: $dark-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: $dark-primary-text,\n  )\n);\n\n$mat-orange: (\n  50: #fff3e0,\n  100: #ffe0b2,\n  200: #ffcc80,\n  300: #ffb74d,\n  400: #ffa726,\n  500: #ff9800,\n  600: #fb8c00,\n  700: #f57c00,\n  800: #ef6c00,\n  900: #e65100,\n  A100: #ffd180,\n  A200: #ffab40,\n  A400: #ff9100,\n  A700: #ff6d00,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $dark-primary-text,\n    600: $dark-primary-text,\n    700: $dark-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: black,\n  )\n);\n\n$mat-deep-orange: (\n  50: #fbe9e7,\n  100: #ffccbc,\n  200: #ffab91,\n  300: #ff8a65,\n  400: #ff7043,\n  500: #ff5722,\n  600: #f4511e,\n  700: #e64a19,\n  800: #d84315,\n  900: #bf360c,\n  A100: #ff9e80,\n  A200: #ff6e40,\n  A400: #ff3d00,\n  A700: #dd2c00,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $light-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n$mat-brown: (\n  50: #efebe9,\n  100: #d7ccc8,\n  200: #bcaaa4,\n  300: #a1887f,\n  400: #8d6e63,\n  500: #795548,\n  600: #6d4c41,\n  700: #5d4037,\n  800: #4e342e,\n  900: #3e2723,\n  A100: #d7ccc8,\n  A200: #bcaaa4,\n  A400: #8d6e63,\n  A700: #5d4037,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $light-primary-text,\n    400: $light-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $light-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n$mat-grey: (\n  50: #fafafa,\n  100: #f5f5f5,\n  200: #eeeeee,\n  300: #e0e0e0,\n  400: #bdbdbd,\n  500: #9e9e9e,\n  600: #757575,\n  700: #616161,\n  800: #424242,\n  900: #212121,\n  A100: #ffffff,\n  A200: #eeeeee,\n  A400: #bdbdbd,\n  A700: #616161,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $dark-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n// Alias for alternate spelling.\n$mat-gray: $mat-grey;\n\n$mat-blue-grey: (\n  50: #eceff1,\n  100: #cfd8dc,\n  200: #b0bec5,\n  300: #90a4ae,\n  400: #78909c,\n  500: #607d8b,\n  600: #546e7a,\n  700: #455a64,\n  800: #37474f,\n  900: #263238,\n  A100: #cfd8dc,\n  A200: #b0bec5,\n  A400: #78909c,\n  A700: #455a64,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $light-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $light-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n// Alias for alternate spelling.\n$mat-blue-gray: $mat-blue-grey;\n\n\n// Background palette for light themes.\n$mat-light-theme-background: (\n  status-bar: map_get($mat-grey, 300),\n  app-bar:    map_get($mat-grey, 100),\n  background: map_get($mat-grey, 50),\n  hover:      rgba(black, 0.04), // TODO(kara): check style with Material Design UX\n  card:       white,\n  dialog:     white,\n  disabled-button: rgba(black, 0.12),\n  raised-button: white,\n  focused-button: $dark-focused,\n  selected-button: map_get($mat-grey, 300),\n  selected-disabled-button: map_get($mat-grey, 400),\n  disabled-button-toggle: map_get($mat-grey, 200),\n  unselected-chip: map_get($mat-grey, 300),\n  disabled-list-option: map_get($mat-grey, 200),\n);\n\n// Background palette for dark themes.\n$mat-dark-theme-background: (\n  status-bar: black,\n  app-bar:    map_get($mat-grey, 900),\n  background: #303030,\n  hover:      rgba(white, 0.04), // TODO(kara): check style with Material Design UX\n  card:       map_get($mat-grey, 800),\n  dialog:     map_get($mat-grey, 800),\n  disabled-button: rgba(white, 0.12),\n  raised-button: map-get($mat-grey, 800),\n  focused-button: $light-focused,\n  selected-button: map_get($mat-grey, 900),\n  selected-disabled-button: map_get($mat-grey, 800),\n  disabled-button-toggle: black,\n  unselected-chip: map_get($mat-grey, 700),\n  disabled-list-option: black,\n);\n\n// Foreground palette for light themes.\n$mat-light-theme-foreground: (\n  base:              black,\n  divider:           $dark-dividers,\n  dividers:          $dark-dividers,\n  disabled:          $dark-disabled-text,\n  disabled-button:   rgba(black, 0.26),\n  disabled-text:     $dark-disabled-text,\n  elevation:         black,\n  hint-text:         $dark-disabled-text,\n  secondary-text:    $dark-secondary-text,\n  icon:              rgba(black, 0.54),\n  icons:             rgba(black, 0.54),\n  text:              rgba(black, 0.87),\n  slider-min:        rgba(black, 0.87),\n  slider-off:        rgba(black, 0.26),\n  slider-off-active: rgba(black, 0.38),\n);\n\n// Foreground palette for dark themes.\n$mat-dark-theme-foreground: (\n  base:              white,\n  divider:           $light-dividers,\n  dividers:          $light-dividers,\n  disabled:          $light-disabled-text,\n  disabled-button:   rgba(white, 0.3),\n  disabled-text:     $light-disabled-text,\n  elevation:         black,\n  hint-text:         $light-disabled-text,\n  secondary-text:    $light-secondary-text,\n  icon:              white,\n  icons:             white,\n  text:              white,\n  slider-min:        white,\n  slider-off:        rgba(white, 0.3),\n  slider-off-active: rgba(white, 0.3),\n);\n\n\n\n// For a given hue in a palette, return the contrast color from the map of contrast palettes.\n// @param $color-map\n// @param $hue\n@function mat-contrast($palette, $hue) {\n  @return map-get(map-get($palette, contrast), $hue);\n}\n\n\n// Creates a map of hues to colors for a theme. This is used to define a theme palette in terms\n// of the Material Design hues.\n// @param $color-map\n// @param $primary\n// @param $lighter\n@function mat-palette($base-palette, $default: 500, $lighter: 100, $darker: 700) {\n  $result: map_merge($base-palette, (\n    default: map-get($base-palette, $default),\n    lighter: map-get($base-palette, $lighter),\n    darker: map-get($base-palette, $darker),\n\n    default-contrast: mat-contrast($base-palette, $default),\n    lighter-contrast: mat-contrast($base-palette, $lighter),\n    darker-contrast: mat-contrast($base-palette, $darker)\n  ));\n\n  // For each hue in the palette, add a \"-contrast\" color to the map.\n  @each $hue, $color in $base-palette {\n    $result: map_merge($result, (\n      '#{$hue}-contrast': mat-contrast($base-palette, $hue)\n    ));\n  }\n\n  @return $result;\n}\n\n\n// Gets a color from a theme palette (the output of mat-palette).\n// The hue can be one of the standard values (500, A400, etc.), one of the three preconfigured\n// hues (default, lighter, darker), or any of the aforementioned prefixed with \"-contrast\".\n//\n// @param $color-map The theme palette (output of mat-palette).\n// @param $hue The hue from the palette to use. If this is a value between 0 and 1, it will\n//     be treated as opacity.\n// @param $opacity The alpha channel value for the color.\n@function mat-color($palette, $hue: default, $opacity: null) {\n  // If hueKey is a number between zero and one, then it actually contains an\n  // opacity value, so recall this function with the default hue and that given opacity.\n  @if type-of($hue) == number and $hue >= 0 and $hue <= 1 {\n    @return mat-color($palette, default, $hue);\n  }\n\n  $color: map-get($palette, $hue);\n  $opacity: if($opacity == null, opacity($color), $opacity);\n\n  @return rgba($color, $opacity);\n}\n\n\n// Creates a container object for a light theme to be given to individual component theme mixins.\n@function mat-light-theme($primary, $accent, $warn: mat-palette($mat-red)) {\n  @return (\n    primary: $primary,\n    accent: $accent,\n    warn: $warn,\n    is-dark: false,\n    foreground: $mat-light-theme-foreground,\n    background: $mat-light-theme-background,\n  );\n}\n\n\n// Creates a container object for a dark theme to be given to individual component theme mixins.\n@function mat-dark-theme($primary, $accent, $warn: mat-palette($mat-red)) {\n  @return (\n    primary: $primary,\n    accent: $accent,\n    warn: $warn,\n    is-dark: true,\n    foreground: $mat-dark-theme-foreground,\n    background: $mat-dark-theme-background,\n  );\n}\n\n\n\n$mat-ripple-color-opacity: 0.1;\n\n@mixin mat-ripple() {\n\n  // The host element of an mat-ripple directive should always have a position of \"absolute\" or\n  // \"relative\" so that the ripples inside are correctly positioned relatively to the container.\n  .mat-ripple {\n    overflow: hidden;\n\n    // By default, every ripple container should have position: relative in favor of creating an\n    // easy API for developers using the MatRipple directive.\n    position: relative;\n  }\n\n  .mat-ripple.mat-ripple-unbounded {\n    overflow: visible;\n  }\n\n  .mat-ripple-element {\n    position: absolute;\n    border-radius: 50%;\n    pointer-events: none;\n\n    transition: opacity, transform 0ms cubic-bezier(0, 0, 0.2, 1);\n    transform: scale(0);\n\n    // In high contrast mode the ripple is opaque, causing it to obstruct the content.\n    @include cdk-high-contrast {\n      display: none;\n    }\n  }\n}\n\n/* Theme for the ripple elements.*/\n@mixin mat-ripple-theme($theme) {\n  $foreground: map_get($theme, foreground);\n  $foreground-base: map_get($foreground, base);\n\n  .mat-ripple-element {\n    background-color: rgba($foreground-base, $mat-ripple-color-opacity);\n  }\n}\n\n\n\n// Utility for fetching a nested value from a typography config.\n@function _mat-get-type-value($config, $level, $name) {\n  @return map-get(map-get($config, $level), $name);\n}\n\n// Gets the font size for a level inside a typography config.\n@function mat-font-size($config, $level) {\n  @return _mat-get-type-value($config, $level, font-size);\n}\n\n// Gets the line height for a level inside a typography config.\n@function mat-line-height($config, $level) {\n  @return _mat-get-type-value($config, $level, line-height);\n}\n\n// Gets the font weight for a level inside a typography config.\n@function mat-font-weight($config, $level) {\n  @return _mat-get-type-value($config, $level, font-weight);\n}\n\n// Gets the letter spacing for a level inside a typography config.\n@function mat-letter-spacing($config, $level) {\n  @return _mat-get-type-value($config, $level, letter-spacing);\n}\n\n// Gets the font-family from a typography config and removes the quotes around it.\n@function mat-font-family($config, $level: null) {\n  $font-family: map-get($config, font-family);\n\n  @if $level != null {\n    $font-family: _mat-get-type-value($config, $level, font-family);\n  }\n\n  @return if($font-family == null, $font-family, unquote($font-family));\n}\n\n// Outputs the shorthand `font` CSS property, based on a set of typography values. Falls back to\n// the individual properties if a value that isn't allowed in the shorthand is passed in.\n@mixin mat-typography-font-shorthand($font-size, $font-weight, $line-height, $font-family) {\n  // If any of the values are set to `inherit`, we can't use the shorthand\n  // so we fall back to passing in the individual properties.\n  @if ($font-size == inherit or\n       $font-weight == inherit or\n       $line-height == inherit or\n       $font-family == inherit or\n       $font-size == null or\n       $font-weight == null or\n       $line-height == null or\n       $font-family == null) {\n\n    font-size: $font-size;\n    font-weight: $font-weight;\n    line-height: $line-height;\n    font-family: $font-family;\n  }\n  @else {\n    // Otherwise use the shorthand `font`, because it's the least amount of bytes. Note\n    // that we need to use interpolation for `font-size/line-height` in order to prevent\n    // Sass from dividing the two values.\n    font: $font-weight #{$font-size}/#{$line-height} $font-family;\n  }\n}\n\n// Converts a typography level into CSS styles.\n@mixin mat-typography-level-to-styles($config, $level) {\n  $font-size: mat-font-size($config, $level);\n  $font-weight: mat-font-weight($config, $level);\n  $line-height: mat-line-height($config, $level);\n  $font-family: mat-font-family($config, $level);\n\n  @include mat-typography-font-shorthand($font-size, $font-weight, $line-height, $font-family);\n  letter-spacing: mat-letter-spacing($config, $level);\n}\n\n\n@mixin mat-option-theme($theme) {\n  $foreground: map-get($theme, foreground);\n  $background: map-get($theme, background);\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n\n  .mat-option {\n    color: mat-color($foreground, text);\n\n    &:hover:not(.mat-option-disabled),\n    &:focus:not(.mat-option-disabled) {\n      background: mat-color($background, hover);\n    }\n\n    // In multiple mode there is a checkbox to show that the option is selected.\n    &.mat-selected:not(.mat-option-multiple):not(.mat-option-disabled) {\n      background: mat-color($background, hover);\n    }\n\n    &.mat-active {\n      background: mat-color($background, hover);\n      color: mat-color($foreground, text);\n    }\n\n    &.mat-option-disabled {\n      color: mat-color($foreground, hint-text);\n    }\n  }\n\n  .mat-primary .mat-option.mat-selected:not(.mat-option-disabled) {\n    color: mat-color($primary);\n  }\n\n  .mat-accent .mat-option.mat-selected:not(.mat-option-disabled) {\n    color: mat-color($accent);\n  }\n\n  .mat-warn .mat-option.mat-selected:not(.mat-option-disabled) {\n    color: mat-color($warn);\n  }\n}\n\n@mixin mat-option-typography($config) {\n  .mat-option {\n    font: {\n      family: mat-font-family($config);\n      size: mat-font-size($config, subheading-2);\n    }\n  }\n}\n\n\n\n\n\n@mixin mat-optgroup-theme($theme) {\n  $foreground: map-get($theme, foreground);\n\n  .mat-optgroup-label {\n    color: mat-color($foreground, secondary-text);\n  }\n\n  .mat-optgroup-disabled .mat-optgroup-label {\n    color: mat-color($foreground, hint-text);\n  }\n}\n\n@mixin mat-optgroup-typography($config) {\n  .mat-optgroup-label {\n    @include mat-typography-level-to-styles($config, body-2);\n  }\n}\n\n\n\n@mixin mat-pseudo-checkbox-theme($theme) {\n  $is-dark-theme: map-get($theme, is-dark);\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $background: map-get($theme, background);\n\n  // NOTE(traviskaufman): While the spec calls for translucent blacks/whites for disabled colors,\n  // this does not work well with elements layered on top of one another. To get around this we\n  // blend the colors together based on the base color and the theme background.\n  $white-30pct-opacity-on-dark: #686868;\n  $black-26pct-opacity-on-light: #b0b0b0;\n  $disabled-color: if($is-dark-theme, $white-30pct-opacity-on-dark, $black-26pct-opacity-on-light);\n  $colored-box-selector: '.mat-pseudo-checkbox-checked, .mat-pseudo-checkbox-indeterminate';\n\n  .mat-pseudo-checkbox {\n    color: mat-color(map-get($theme, foreground), secondary-text);\n\n    &::after {\n      color: mat-color($background, background);\n    }\n  }\n\n  // Default to the accent color. Note that the pseudo checkboxes are meant to inherit the\n  // theme from their parent, rather than implementing their own theming, which is why we\n  // don't attach to the `mat-*` classes.\n  .mat-pseudo-checkbox-checked,\n  .mat-pseudo-checkbox-indeterminate,\n  .mat-accent .mat-pseudo-checkbox-checked,\n  .mat-accent .mat-pseudo-checkbox-indeterminate {\n    background: mat-color(map-get($theme, accent));\n  }\n\n  .mat-primary .mat-pseudo-checkbox-checked,\n  .mat-primary .mat-pseudo-checkbox-indeterminate {\n    background: mat-color(map-get($theme, primary));\n  }\n\n  .mat-warn .mat-pseudo-checkbox-checked,\n  .mat-warn .mat-pseudo-checkbox-indeterminate {\n    background: mat-color(map-get($theme, warn));\n  }\n\n  .mat-pseudo-checkbox-checked {\n    &.mat-pseudo-checkbox-disabled {\n      background: $disabled-color;\n    }\n  }\n}\n\n\n\n// Represents a typography level from the Material design spec.\n@function mat-typography-level(\n  $font-size,\n  $line-height: $font-size,\n  $font-weight: 400,\n  $font-family: null,\n  $letter-spacing: null) {\n\n  @return (\n    font-size: $font-size,\n    line-height: $line-height,\n    font-weight: $font-weight,\n    font-family: $font-family,\n    letter-spacing: $letter-spacing\n  );\n}\n\n// Represents a collection of typography levels.\n// Defaults come from https://material.io/guidelines/style/typography.html\n@function mat-typography-config(\n  $font-family:   'Roboto, \"Helvetica Neue\", sans-serif',\n  $display-4:     mat-typography-level(112px, 112px, 300),\n  $display-3:     mat-typography-level(56px, 56px, 400),\n  $display-2:     mat-typography-level(45px, 48px, 400),\n  $display-1:     mat-typography-level(34px, 40px, 400),\n  $headline:      mat-typography-level(24px, 32px, 400),\n  $title:         mat-typography-level(20px, 32px, 500),\n  $subheading-2:  mat-typography-level(16px, 28px, 400),\n  $subheading-1:  mat-typography-level(15px, 24px, 400),\n  $body-2:        mat-typography-level(14px, 24px, 500),\n  $body-1:        mat-typography-level(14px, 20px, 400),\n  $caption:       mat-typography-level(12px, 20px, 400),\n  $button:        mat-typography-level(14px, 14px, 500),\n  // Line-height must be unit-less fraction of the font-size.\n  $input:         mat-typography-level(inherit, 1.125, 400)\n) {\n\n  // Declare an initial map with all of the levels.\n  $config: (\n    display-4:      $display-4,\n    display-3:      $display-3,\n    display-2:      $display-2,\n    display-1:      $display-1,\n    headline:       $headline,\n    title:          $title,\n    subheading-2:   $subheading-2,\n    subheading-1:   $subheading-1,\n    body-2:         $body-2,\n    body-1:         $body-1,\n    caption:        $caption,\n    button:         $button,\n    input:          $input,\n  );\n\n  // Loop through the levels and set the `font-family` of the ones that don't have one to the base.\n  // Note that Sass can't modify maps in place, which means that we need to merge and re-assign.\n  @each $key, $level in $config {\n    @if map-get($level, font-family) == null {\n      $new-level: map-merge($level, (font-family: $font-family));\n      $config: map-merge($config, ($key: $new-level));\n    }\n  }\n\n  // Add the base font family to the config.\n  @return map-merge($config, (font-family: $font-family));\n}\n\n// Adds the base typography styles, based on a config.\n@mixin mat-base-typography($config, $selector: '.mat-typography') {\n  .mat-h1, .mat-headline, #{$selector} h1 {\n    @include mat-typography-level-to-styles($config, headline);\n    margin: 0 0 16px;\n  }\n\n  .mat-h2, .mat-title, #{$selector} h2 {\n    @include mat-typography-level-to-styles($config, title);\n    margin: 0 0 16px;\n  }\n\n  .mat-h3, .mat-subheading-2, #{$selector} h3 {\n    @include mat-typography-level-to-styles($config, subheading-2);\n    margin: 0 0 16px;\n  }\n\n  .mat-h4, .mat-subheading-1, #{$selector} h4 {\n    @include mat-typography-level-to-styles($config, subheading-1);\n    margin: 0 0 16px;\n  }\n\n  // Note: the spec doesn't have anything that would correspond to h5 and h6, but we add these for\n  // consistency. The font sizes come from the Chrome user agent styles which have h5 at 0.83em\n  // and h6 at 0.67em.\n  .mat-h5, #{$selector} h5 {\n    @include mat-typography-font-shorthand(\n      mat-font-size($config, body-1) * 0.83,\n      mat-font-weight($config, body-1),\n      mat-line-height($config, body-1),\n      mat-font-family($config, body-1)\n    );\n\n    margin: 0 0 12px;\n  }\n\n  .mat-h6, #{$selector} h6 {\n    @include mat-typography-font-shorthand(\n      mat-font-size($config, body-1) * 0.67,\n      mat-font-weight($config, body-1),\n      mat-line-height($config, body-1),\n      mat-font-family($config, body-1)\n    );\n\n    margin: 0 0 12px;\n  }\n\n  .mat-body-strong, .mat-body-2 {\n    @include mat-typography-level-to-styles($config, body-2);\n  }\n\n  .mat-body, .mat-body-1, #{$selector} {\n    @include mat-typography-level-to-styles($config, body-1);\n\n    p {\n      margin: 0 0 12px;\n    }\n  }\n\n  .mat-small, .mat-caption {\n    @include mat-typography-level-to-styles($config, caption);\n  }\n\n  // Note: The spec doesn't mention letter spacing. The value comes from\n  // eyeballing it until it looked exactly like the spec examples.\n  .mat-display-4, #{$selector} .mat-display-4 {\n    @include mat-typography-level-to-styles($config, display-4);\n    margin: 0 0 56px;\n    letter-spacing: -0.05em;\n  }\n\n  .mat-display-3, #{$selector} .mat-display-3 {\n    @include mat-typography-level-to-styles($config, display-3);\n    margin: 0 0 64px;\n    letter-spacing: -0.02em;\n  }\n\n  .mat-display-2, #{$selector} .mat-display-2 {\n    @include mat-typography-level-to-styles($config, display-2);\n    margin: 0 0 64px;\n    letter-spacing: -0.005em;\n  }\n\n  .mat-display-1, #{$selector} .mat-display-1 {\n    @include mat-typography-level-to-styles($config, display-1);\n    margin: 0 0 64px;\n  }\n}\n\n\n\n\n@mixin mat-autocomplete-theme($theme) {\n  $foreground: map-get($theme, foreground);\n  $background: map-get($theme, background);\n\n  .mat-autocomplete-panel {\n    @include _mat-theme-overridable-elevation(4, $theme);\n    background: mat-color($background, card);\n    color: mat-color($foreground, text);\n\n    // Selected options in autocompletes should not be gray, but we\n    // only want to override the background for selected options if\n    // they are *not* in hover or focus state. This change has to be\n    // made here because base option styles are shared between the\n    // autocomplete and the select.\n    .mat-option.mat-selected:not(.mat-active):not(:hover) {\n      background: mat-color($background, card);\n\n      &:not(.mat-option-disabled) {\n        color: mat-color($foreground, text);\n      }\n    }\n  }\n\n}\n\n@mixin mat-autocomplete-typography($config) { }\n\n// This contains all of the styles for the badge\n// rather than just the color/theme because of\n// no style sheet support for directives.\n\n\n\n\n\n$mat-badge-font-size: 12px;\n$mat-badge-font-weight: 600;\n$mat-badge-default-size: 22px !default;\n$mat-badge-small-size: $mat-badge-default-size - 6;\n$mat-badge-large-size: $mat-badge-default-size + 6;\n\n// Mixin for building offset given different sizes\n@mixin _mat-badge-size($size) {\n  .mat-badge-content {\n    width: $size;\n    height: $size;\n    line-height: $size;\n\n    @include cdk-high-contrast {\n      outline: solid 1px;\n      border-radius: 0;\n    }\n  }\n\n  &.mat-badge-above {\n    .mat-badge-content {\n      top: -$size / 2;\n    }\n  }\n\n  &.mat-badge-below {\n    .mat-badge-content {\n      bottom: -$size / 2;\n    }\n  }\n\n  &.mat-badge-before {\n    .mat-badge-content {\n      left: -$size;\n    }\n  }\n\n  [dir='rtl'] &.mat-badge-before {\n    .mat-badge-content {\n      left: auto;\n      right: -$size;\n    }\n  }\n\n  &.mat-badge-after {\n    .mat-badge-content {\n      right: -$size;\n    }\n  }\n\n  [dir='rtl'] &.mat-badge-after {\n    .mat-badge-content {\n      right: auto;\n      left: -$size;\n    }\n  }\n\n  &.mat-badge-overlap {\n    &.mat-badge-before {\n      .mat-badge-content {\n        left: -$size / 2;\n      }\n    }\n\n    [dir='rtl'] &.mat-badge-before {\n      .mat-badge-content {\n        left: auto;\n        right: -$size / 2;\n      }\n    }\n\n    &.mat-badge-after {\n      .mat-badge-content {\n        right: -$size / 2;\n      }\n    }\n\n    [dir='rtl'] &.mat-badge-after {\n      .mat-badge-content {\n        right: auto;\n        left: -$size / 2;\n      }\n    }\n  }\n}\n\n@mixin mat-badge-theme($theme) {\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $primary: map-get($theme, primary);\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  .mat-badge-content {\n    color: mat-color($primary, default-contrast);\n    background: mat-color($primary);\n  }\n\n  .mat-badge-accent {\n    .mat-badge-content {\n      background: mat-color($accent);\n      color: mat-color($accent, default-contrast);\n    }\n  }\n\n  .mat-badge-warn {\n    .mat-badge-content {\n      color: mat-color($warn, default-contrast);\n      background: mat-color($warn);\n    }\n  }\n\n  .mat-badge {\n    position: relative;\n  }\n\n  .mat-badge-hidden {\n    .mat-badge-content {\n      display: none;\n    }\n  }\n\n  .mat-badge-disabled {\n    .mat-badge-content {\n      // The disabled color usually has some kind of opacity, but because the badge is overlayed\n      // on top of something else, it won't look good if it's opaque. We convert it into a solid\n      // color by taking the opacity from the rgba value and using the value to determine the\n      // percentage of the background to put into foreground when mixing the colors together.\n      $app-background: mat-color($background, 'background');\n      $badge-color: mat-color($foreground, disabled-button);\n      $badge-opacity: opacity($badge-color);\n      background: mix($app-background, rgba($badge-color, 1), (1 - $badge-opacity) * 100%);\n      color: mat-color($foreground, disabled-text);\n    }\n  }\n\n  .mat-badge-content {\n    position: absolute;\n    text-align: center;\n    display: inline-block;\n    border-radius: 50%;\n    transition: transform 200ms ease-in-out;\n    transform: scale(0.6);\n    overflow: hidden;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    pointer-events: none;\n  }\n\n  // The active class is added after the element is added\n  // so it can animate scale to default\n  .mat-badge-content.mat-badge-active {\n    // Scale to `none` instead of `1` to avoid blurry text in some browsers.\n    transform: none;\n  }\n\n  .mat-badge-small {\n    @include _mat-badge-size($mat-badge-small-size);\n  }\n  .mat-badge-medium {\n    @include _mat-badge-size($mat-badge-default-size);\n  }\n  .mat-badge-large {\n    @include _mat-badge-size($mat-badge-large-size);\n  }\n}\n\n@mixin mat-badge-typography($config) {\n  .mat-badge-content {\n    font-weight: $mat-badge-font-weight;\n    font-size: $mat-badge-font-size;\n    font-family: mat-font-family($config);\n  }\n\n  .mat-badge-small .mat-badge-content {\n    font-size: $mat-badge-font-size / 2;\n  }\n\n  .mat-badge-large .mat-badge-content {\n    font-size: $mat-badge-font-size * 2;\n  }\n}\n\n\n\n\n\n@mixin mat-bottom-sheet-theme($theme) {\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  .mat-bottom-sheet-container {\n    @include _mat-theme-elevation(16, $theme);\n    background: mat-color($background, dialog);\n    color: mat-color($foreground, text);\n  }\n}\n\n@mixin mat-bottom-sheet-typography($config) {\n  .mat-bottom-sheet-container {\n    @include mat-typography-level-to-styles($config, body-1);\n  }\n}\n\n\n\n\n\n$_mat-button-ripple-opacity: 0.1;\n\n// Applies a focus style to an mat-button element for each of the supported palettes.\n@mixin _mat-button-focus-overlay-color($theme) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n\n  &.mat-primary .mat-button-focus-overlay {\n    background-color: mat-color($primary);\n  }\n\n  &.mat-accent .mat-button-focus-overlay {\n    background-color: mat-color($accent);\n  }\n\n  &.mat-warn .mat-button-focus-overlay {\n    background-color: mat-color($warn);\n  }\n\n  &[disabled] .mat-button-focus-overlay {\n    background-color: transparent;\n  }\n}\n\n@mixin _mat-button-ripple-color($theme, $hue, $opacity: $_mat-button-ripple-opacity) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n\n  &.mat-primary .mat-ripple-element {\n    background-color: mat-color($primary, $hue, $opacity);\n  }\n\n  &.mat-accent .mat-ripple-element {\n    background-color: mat-color($accent, $hue, $opacity);\n  }\n\n  &.mat-warn .mat-ripple-element {\n    background-color: mat-color($warn, $hue, $opacity);\n  }\n}\n\n// Applies a property to an mat-button element for each of the supported palettes.\n@mixin _mat-button-theme-property($theme, $property, $hue) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  &.mat-primary {\n    #{$property}: mat-color($primary, $hue);\n  }\n  &.mat-accent {\n    #{$property}: mat-color($accent, $hue);\n  }\n  &.mat-warn {\n    #{$property}: mat-color($warn, $hue);\n  }\n\n  &.mat-primary, &.mat-accent, &.mat-warn, &[disabled] {\n    &[disabled] {\n      $palette: if($property == 'color', $foreground, $background);\n      #{$property}: mat-color($palette, disabled-button);\n    }\n  }\n}\n\n@mixin mat-button-theme($theme) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  .mat-button, .mat-icon-button, .mat-stroked-button {\n    // Buttons without a background color should inherit the font color. This is necessary to\n    // ensure that the button is readable on custom background colors. It's wrong to always assume\n    // that those buttons are always placed inside of containers with the default background\n    // color of the theme (e.g. themed toolbars).\n    color: inherit;\n    background: transparent;\n\n    @include _mat-button-theme-property($theme, 'color', default);\n    @include _mat-button-focus-overlay-color($theme);\n\n    // Setup the ripple color to be based on the text color. This ensures that the ripples\n    // are matching with the current theme palette and are in contrast to the background color\n    // (e.g in themed toolbars).\n    .mat-ripple-element {\n      opacity: $_mat-button-ripple-opacity;\n      background-color: currentColor;\n    }\n  }\n\n  .mat-button-focus-overlay {\n    background: map_get($foreground, base);\n  }\n\n  // Note: this needs a bit extra specificity, because we're not guaranteed the inclusion\n  // order of the theme styles and the button reset may end up resetting this as well.\n  .mat-stroked-button:not([disabled]) {\n    border-color: mat-color($foreground, divider);\n  }\n\n  .mat-flat-button, .mat-raised-button, .mat-fab, .mat-mini-fab {\n    // Default font and background color when not using any color palette.\n    color: mat-color($foreground, text);\n    background-color: mat-color($background, raised-button);\n\n    @include _mat-button-theme-property($theme, 'color', default-contrast);\n    @include _mat-button-theme-property($theme, 'background-color', default);\n    @include _mat-button-ripple-color($theme, default-contrast);\n  }\n\n  .mat-stroked-button, .mat-flat-button {\n    @include _mat-theme-overridable-elevation(0, $theme);\n  }\n\n  .mat-raised-button {\n    @include _mat-theme-overridable-elevation(2, $theme);\n\n    &:not([disabled]):active {\n      @include _mat-theme-overridable-elevation(8, $theme);\n    }\n\n    &[disabled] {\n      @include _mat-theme-overridable-elevation(0, $theme);\n    }\n  }\n\n  .mat-fab, .mat-mini-fab {\n    @include _mat-theme-overridable-elevation(6, $theme);\n\n    &:not([disabled]):active {\n      @include _mat-theme-overridable-elevation(12, $theme);\n    }\n\n    &[disabled] {\n      @include _mat-theme-overridable-elevation(0, $theme);\n    }\n  }\n}\n\n@mixin mat-button-typography($config) {\n  .mat-button, .mat-raised-button, .mat-icon-button, .mat-stroked-button,\n  .mat-flat-button, .mat-fab, .mat-mini-fab {\n    font: {\n      family: mat-font-family($config, button);\n      size: mat-font-size($config, button);\n      weight: mat-font-weight($config, button);\n    }\n  }\n}\n\n\n\n\n\n\n@mixin mat-button-toggle-theme($theme) {\n  $foreground: map-get($theme, foreground);\n  $background: map-get($theme, background);\n  $divider-color: mat-color($foreground, divider);\n\n  .mat-button-toggle-standalone,\n  .mat-button-toggle-group {\n    @include _mat-theme-elevation(2, $theme);\n  }\n\n  .mat-button-toggle-standalone.mat-button-toggle-appearance-standard,\n  .mat-button-toggle-group-appearance-standard {\n    box-shadow: none;\n  }\n\n  .mat-button-toggle {\n    color: mat-color($foreground, hint-text);\n\n    .mat-button-toggle-focus-overlay {\n      background-color: mat-color($background, focused-button);\n    }\n  }\n\n  .mat-button-toggle-appearance-standard {\n    color: mat-color($foreground, text);\n    background: mat-color($background, card);\n\n    .mat-button-toggle-focus-overlay {\n      background-color: mat-color($background, focused-button, 1);\n    }\n  }\n\n  .mat-button-toggle-group-appearance-standard .mat-button-toggle + .mat-button-toggle {\n    border-left: solid 1px $divider-color;\n  }\n\n  [dir='rtl'] .mat-button-toggle-group-appearance-standard .mat-button-toggle + .mat-button-toggle {\n    border-left: none;\n    border-right: solid 1px $divider-color;\n  }\n\n  .mat-button-toggle-group-appearance-standard.mat-button-toggle-vertical {\n    .mat-button-toggle + .mat-button-toggle {\n      border-left: none;\n      border-right: none;\n      border-top: solid 1px $divider-color;\n    }\n  }\n\n  .mat-button-toggle-checked {\n    background-color: mat-color($background, selected-button);\n    color: mat-color($foreground, secondary-text);\n\n    &.mat-button-toggle-appearance-standard {\n      color: mat-color($foreground, text);\n    }\n  }\n\n  .mat-button-toggle-disabled {\n    color: mat-color($foreground, disabled-button);\n    background-color: mat-color($background, disabled-button-toggle);\n\n    &.mat-button-toggle-appearance-standard {\n      background: mat-color($background, card);\n    }\n\n    &.mat-button-toggle-checked {\n      background-color: mat-color($background, selected-disabled-button);\n    }\n  }\n\n  .mat-button-toggle-standalone.mat-button-toggle-appearance-standard,\n  .mat-button-toggle-group-appearance-standard {\n    border: solid 1px $divider-color;\n  }\n}\n\n@mixin mat-button-toggle-typography($config) {\n  .mat-button-toggle {\n    font-family: mat-font-family($config);\n  }\n}\n\n\n\n\n\n\n\n@mixin mat-card-theme($theme) {\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  .mat-card {\n    @include _mat-theme-overridable-elevation(1, $theme);\n    background: mat-color($background, card);\n    color: mat-color($foreground, text);\n\n    // Needs extra specificity to be able to override the elevation selectors.\n    &.mat-card-flat {\n      @include _mat-theme-overridable-elevation(0, $theme);\n    }\n  }\n\n  .mat-card-subtitle {\n    color: mat-color($foreground, secondary-text);\n  }\n}\n\n@mixin mat-card-typography($config) {\n  .mat-card {\n    font-family: mat-font-family($config);\n  }\n\n  .mat-card-title {\n    font: {\n      size: mat-font-size($config, headline);\n      weight: mat-font-weight($config, title);\n    }\n  }\n\n  .mat-card-header .mat-card-title {\n    font-size: mat-font-size($config, title);\n  }\n\n  .mat-card-subtitle,\n  .mat-card-content {\n    font-size: mat-font-size($config, body-1);\n  }\n}\n\n\n\n\n\n\n@mixin mat-checkbox-theme($theme) {\n  $is-dark-theme: map-get($theme, is-dark);\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n\n  // The color of the checkbox's checkmark / mixedmark.\n  $checkbox-mark-color: mat-color($background, background);\n\n  // NOTE(traviskaufman): While the spec calls for translucent blacks/whites for disabled colors,\n  // this does not work well with elements layered on top of one another. To get around this we\n  // blend the colors together based on the base color and the theme background.\n  $white-30pct-opacity-on-dark: #686868;\n  $black-26pct-opacity-on-light: #b0b0b0;\n  $disabled-color: if($is-dark-theme, $white-30pct-opacity-on-dark, $black-26pct-opacity-on-light);\n\n  .mat-checkbox-frame {\n    border-color: mat-color($foreground, secondary-text);\n  }\n\n  .mat-checkbox-checkmark {\n    fill: $checkbox-mark-color;\n  }\n\n  .mat-checkbox-checkmark-path {\n    // !important is needed here because a stroke must be set as an\n    // attribute on the SVG in order for line animation to work properly.\n    stroke: $checkbox-mark-color !important;\n\n    @include cdk-high-contrast(black-on-white) {\n      // Having the one above be !important ends up overriding the browser's automatic\n      // color inversion so we need to re-invert it ourselves for black-on-white.\n      stroke: #000 !important;\n    }\n  }\n\n  .mat-checkbox-mixedmark {\n    background-color: $checkbox-mark-color;\n  }\n\n  .mat-checkbox-indeterminate, .mat-checkbox-checked {\n    &.mat-primary .mat-checkbox-background {\n      background-color: mat-color($primary);\n    }\n\n    &.mat-accent .mat-checkbox-background {\n      background-color: mat-color($accent);\n    }\n\n    &.mat-warn .mat-checkbox-background {\n      background-color: mat-color($warn);\n    }\n  }\n\n  .mat-checkbox-disabled {\n    &.mat-checkbox-checked:not(.mat-checkbox-indeterminate) {\n      .mat-checkbox-background {\n        background-color: $disabled-color;\n      }\n    }\n\n    &:not(.mat-checkbox-checked) {\n      .mat-checkbox-frame {\n        border-color: $disabled-color;\n      }\n    }\n\n    .mat-checkbox-label {\n      color: mat-color($foreground, secondary-text);\n    }\n\n    @include cdk-high-contrast {\n      opacity: 0.5;\n    }\n  }\n\n  // This one is moved down here so it can target both\n  // the theme colors and the disabled state.\n  @include cdk-high-contrast {\n    .mat-checkbox-background {\n      // Needs to be removed because it hides the checkbox outline.\n      background: none;\n    }\n  }\n\n  .mat-checkbox:not(.mat-checkbox-disabled) {\n    &.mat-primary .mat-checkbox-ripple .mat-ripple-element {\n      background-color: mat-color($primary);\n    }\n\n    &.mat-accent .mat-checkbox-ripple .mat-ripple-element {\n      background-color: mat-color($accent);\n    }\n\n    &.mat-warn .mat-checkbox-ripple .mat-ripple-element {\n      background-color: mat-color($warn);\n    }\n  }\n}\n\n@mixin mat-checkbox-typography($config) {\n  .mat-checkbox {\n    font-family: mat-font-family($config);\n  }\n\n  // TODO(kara): Remove this style when fixing vertical baseline\n  .mat-checkbox-layout .mat-checkbox-label {\n    line-height: mat-line-height($config, body-2);\n  }\n}\n\n\n\n\n\n\n$mat-chip-remove-font-size: 18px;\n\n@mixin mat-chips-color($foreground, $background) {\n  background-color: $background;\n  color: $foreground;\n\n  .mat-chip-remove {\n    color: $foreground;\n    opacity: 0.4;\n  }\n}\n\n@mixin mat-chips-theme-color($palette) {\n  @include mat-chips-color(mat-color($palette, default-contrast), mat-color($palette));\n\n  .mat-ripple-element {\n    background: mat-color($palette, default-contrast, 0.1);\n  }\n}\n\n@mixin mat-chips-theme($theme) {\n  $is-dark-theme: map-get($theme, is-dark);\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  $unselected-background: mat-color($background, unselected-chip);\n  $unselected-foreground: mat-color($foreground, text);\n\n  .mat-chip.mat-standard-chip {\n    @include mat-chips-color($unselected-foreground, $unselected-background);\n\n    &:not(.mat-chip-disabled) {\n      &:active {\n        @include _mat-theme-elevation(3, $theme);\n      }\n\n      .mat-chip-remove:hover {\n        opacity: 0.54;\n      }\n    }\n\n    &.mat-chip-disabled {\n      opacity: 0.4;\n    }\n\n    &::after {\n      background: map_get($foreground, base);\n    }\n  }\n\n  .mat-chip.mat-standard-chip.mat-chip-selected {\n    &.mat-primary {\n      @include mat-chips-theme-color($primary);\n    }\n\n    &.mat-warn {\n      @include mat-chips-theme-color($warn);\n    }\n\n    &.mat-accent {\n      @include mat-chips-theme-color($accent);\n    }\n  }\n}\n\n@mixin mat-chips-typography($config) {\n  .mat-chip {\n    font-size: mat-font-size($config, body-2);\n    font-weight: mat-font-weight($config, body-2);\n\n    .mat-chip-trailing-icon.mat-icon,\n    .mat-chip-remove.mat-icon {\n      font-size: $mat-chip-remove-font-size;\n    }\n  }\n}\n\n\n\n\n\n@mixin mat-table-theme($theme) {\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  .mat-table {\n    background: mat-color($background, 'card');\n  }\n\n  .mat-table thead, .mat-table tbody, .mat-table tfoot,\n  mat-header-row, mat-row, mat-footer-row,\n  [mat-header-row], [mat-row], [mat-footer-row],\n  .mat-table-sticky {\n    background: inherit;\n  }\n\n  mat-row, mat-header-row, mat-footer-row,\n  th.mat-header-cell, td.mat-cell, td.mat-footer-cell {\n    border-bottom-color: mat-color($foreground, divider);\n  }\n\n  .mat-header-cell {\n    color: mat-color($foreground, secondary-text);\n  }\n\n  .mat-cell, .mat-footer-cell {\n    color: mat-color($foreground, text);\n  }\n}\n\n@mixin mat-table-typography($config) {\n  .mat-table {\n    font-family: mat-font-family($config);\n  }\n\n  .mat-header-cell {\n    font-size: mat-font-size($config, caption);\n    font-weight: mat-font-weight($config, body-2);\n  }\n\n  .mat-cell, .mat-footer-cell {\n    font-size: mat-font-size($config, body-1);\n  }\n}\n\n\n\n\n\n\n\n$mat-datepicker-selected-today-box-shadow-width: 1px;\n$mat-datepicker-selected-fade-amount: 0.6;\n$mat-datepicker-today-fade-amount: 0.2;\n$mat-calendar-body-font-size: 13px !default;\n$mat-calendar-weekday-table-font-size: 11px !default;\n\n@mixin _mat-datepicker-color($palette) {\n  .mat-calendar-body-selected {\n    background-color: mat-color($palette);\n    color: mat-color($palette, default-contrast);\n  }\n\n  .mat-calendar-body-disabled > .mat-calendar-body-selected {\n    background-color: fade-out(mat-color($palette), $mat-datepicker-selected-fade-amount);\n  }\n\n  .mat-calendar-body-today.mat-calendar-body-selected {\n    box-shadow: inset 0 0 0 $mat-datepicker-selected-today-box-shadow-width\n                mat-color($palette, default-contrast);\n  }\n}\n\n@mixin mat-datepicker-theme($theme) {\n  $foreground: map-get($theme, foreground);\n  $background: map-get($theme, background);\n\n  .mat-calendar-arrow {\n    border-top-color: mat-color($foreground, icon);\n  }\n\n  // The prev/next buttons need a bit more specificity to\n  // avoid being overwritten by the .mat-icon-button.\n  .mat-datepicker-toggle,\n  .mat-datepicker-content .mat-calendar-next-button,\n  .mat-datepicker-content .mat-calendar-previous-button {\n    color: mat-color($foreground, icon);\n  }\n\n  .mat-calendar-table-header {\n    color: mat-color($foreground, hint-text);\n  }\n\n  .mat-calendar-table-header-divider::after {\n    background: mat-color($foreground, divider);\n  }\n\n  .mat-calendar-body-label {\n    color: mat-color($foreground, secondary-text);\n  }\n\n  .mat-calendar-body-cell-content {\n    color: mat-color($foreground, text);\n    border-color: transparent;\n  }\n\n  .mat-calendar-body-disabled > .mat-calendar-body-cell-content:not(.mat-calendar-body-selected) {\n    color: mat-color($foreground, disabled-text);\n  }\n\n  .mat-calendar-body-cell:not(.mat-calendar-body-disabled):hover,\n  .cdk-keyboard-focused .mat-calendar-body-active,\n  .cdk-program-focused .mat-calendar-body-active {\n    & > .mat-calendar-body-cell-content:not(.mat-calendar-body-selected) {\n      background-color: mat-color($background, hover);\n    }\n  }\n\n  .mat-calendar-body-today:not(.mat-calendar-body-selected) {\n    // Note: though it's not text, the border is a hint about the fact that this is today's date,\n    // so we use the hint color.\n    border-color: mat-color($foreground, hint-text);\n  }\n\n  .mat-calendar-body-disabled > .mat-calendar-body-today:not(.mat-calendar-body-selected) {\n    border-color: fade-out(mat-color($foreground, hint-text), $mat-datepicker-today-fade-amount);\n  }\n\n  @include _mat-datepicker-color(map-get($theme, primary));\n\n  .mat-datepicker-content {\n    @include _mat-theme-elevation(4, $theme);\n    background-color: mat-color($background, card);\n    color: mat-color($foreground, text);\n\n    &.mat-accent {\n      @include _mat-datepicker-color(map-get($theme, accent));\n    }\n\n    &.mat-warn {\n      @include _mat-datepicker-color(map-get($theme, warn));\n    }\n  }\n\n  .mat-datepicker-content-touch {\n    @include _mat-theme-elevation(0, $theme);\n  }\n\n  .mat-datepicker-toggle-active {\n    color: mat-color(map-get($theme, primary));\n\n    &.mat-accent {\n      color: mat-color(map-get($theme, accent));\n    }\n\n    &.mat-warn {\n      color: mat-color(map-get($theme, warn));\n    }\n  }\n}\n\n@mixin mat-datepicker-typography($config) {\n  .mat-calendar {\n    font-family: mat-font-family($config);\n  }\n\n  .mat-calendar-body {\n    font-size: $mat-calendar-body-font-size;\n  }\n\n  .mat-calendar-body-label,\n  .mat-calendar-period-button {\n    font: {\n      size: mat-font-size($config, button);\n      weight: mat-font-weight($config, button);\n    }\n  }\n\n  .mat-calendar-table-header th {\n    font: {\n      size: $mat-calendar-weekday-table-font-size;\n      weight: mat-font-weight($config, body-1);\n    }\n  }\n}\n\n\n\n\n\n\n\n@mixin mat-dialog-theme($theme) {\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  .mat-dialog-container {\n    @include _mat-theme-elevation(24, $theme);\n    background: mat-color($background, dialog);\n    color: mat-color($foreground, text);\n  }\n}\n\n@mixin mat-dialog-typography($config) {\n  .mat-dialog-title {\n    @include mat-typography-level-to-styles($config, title);\n  }\n}\n\n\n\n\n\n\n@mixin mat-expansion-panel-theme($theme) {\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  .mat-expansion-panel {\n    @include _mat-theme-overridable-elevation(2, $theme);\n    background: mat-color($background, card);\n    color: mat-color($foreground, text);\n  }\n\n  .mat-action-row {\n    border-top-color: mat-color($foreground, divider);\n  }\n\n  .mat-expansion-panel:not(.mat-expanded) .mat-expansion-panel-header {\n    &:not([aria-disabled='true']) {\n      &.cdk-keyboard-focused,\n      &.cdk-program-focused,\n      &:hover {\n        background: mat-color($background, hover);\n      }\n    }\n  }\n\n  // Disable the hover on touch devices since it can appear like it is stuck. We can't use\n  // `@media (hover)` above, because the desktop support browser support isn't great.\n  @media (hover: none) {\n    .mat-expansion-panel:not(.mat-expanded):not([aria-disabled='true'])\n      .mat-expansion-panel-header:hover {\n      background: mat-color($background, card);\n    }\n  }\n\n  .mat-expansion-panel-header-title {\n    color: mat-color($foreground, text);\n  }\n\n  .mat-expansion-panel-header-description,\n  .mat-expansion-indicator::after {\n    color: mat-color($foreground, secondary-text);\n  }\n\n  .mat-expansion-panel-header[aria-disabled='true'] {\n    color: mat-color($foreground, disabled-button);\n\n    .mat-expansion-panel-header-title,\n    .mat-expansion-panel-header-description {\n      color: inherit;\n    }\n  }\n}\n\n@mixin mat-expansion-panel-typography($config) {\n  .mat-expansion-panel-header {\n    font: {\n      family: mat-font-family($config, subheading-1);\n      size: mat-font-size($config, subheading-1);\n      weight: mat-font-weight($config, subheading-1);\n    }\n  }\n\n  .mat-expansion-panel-content {\n    @include mat-typography-level-to-styles($config, body-1);\n  }\n}\n\n\n\n\n// This mixin will ensure that lines that overflow the container will hide the overflow and\n// truncate neatly with an ellipsis.\n@mixin mat-truncate-line() {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n// Mixin to provide all mat-line styles, changing secondary font size based on whether the list\n// is in dense mode.\n@mixin mat-line-base($secondary-font-size) {\n  .mat-line {\n    @include mat-truncate-line();\n    display: block;\n    box-sizing: border-box;\n\n    // all lines but the top line should have smaller text\n    &:nth-child(n+2) {\n      font-size: $secondary-font-size;\n    }\n  }\n}\n\n// This mixin normalizes default element styles, e.g. font weight for heading text.\n@mixin mat-normalize-text() {\n  & > * {\n    margin: 0;\n    padding: 0;\n    font-weight: normal;\n    font-size: inherit;\n  }\n}\n\n// This mixin provides base styles for the wrapper around mat-line elements in a list.\n@mixin mat-line-wrapper-base() {\n  @include mat-normalize-text();\n\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  box-sizing: border-box;\n  overflow: hidden;\n\n  // Must remove wrapper when lines are empty or it takes up horizontal\n  // space and pushes other elements to the right.\n  &:empty {\n    display: none;\n  }\n}\n\n\n\n// Include this empty mixin for consistency with the other components.\n@mixin mat-grid-list-theme($theme) { }\n\n@mixin mat-grid-list-typography($config) {\n  .mat-grid-tile-header,\n  .mat-grid-tile-footer {\n    @include mat-line-base(mat-font-size($config, caption));\n    font-size: mat-font-size($config, body-1);\n  }\n}\n\n\n\n\n// Include this empty mixin for consistency with the other components.\n@mixin mat-icon-theme($theme) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  .mat-icon {\n    &.mat-primary {\n      color: mat-color($primary);\n    }\n\n    &.mat-accent {\n      color: mat-color($accent);\n    }\n\n    &.mat-warn {\n      color: mat-color($warn);\n    }\n  }\n}\n\n@mixin mat-icon-typography($config) { }\n\n\n\n\n\n// Renders a gradient for showing the dashed line when the input is disabled.\n// Unlike using a border, a gradient allows us to adjust the spacing of the dotted line\n// to match the Material Design spec.\n@mixin mat-control-disabled-underline($color) {\n  background-image: linear-gradient(to right, $color 0%, $color 33%, transparent 0%);\n  background-size: 4px 100%;\n  background-repeat: repeat-x;\n}\n\n// Figures out the color of the placeholder for a form control.\n// Used primarily to prevent the various form controls from\n// becoming out of sync since these colors aren't in a palette.\n@function _mat-control-placeholder-color($theme) {\n  $foreground: map-get($theme, foreground);\n  $is-dark-theme: map-get($theme, is-dark);\n  @return mat-color($foreground, secondary-text, if($is-dark-theme, 0.5, 0.42));\n}\n\n\n/* stylelint-disable material/no-prefixes */\n@mixin user-select($value) {\n  -webkit-user-select: $value;\n  -moz-user-select: $value;\n  -ms-user-select: $value;\n  user-select: $value;\n}\n\n@mixin input-placeholder {\n  &::placeholder {\n    @content;\n  }\n\n  &::-moz-placeholder {\n    @content;\n  }\n\n  &::-webkit-input-placeholder {\n    @content;\n  }\n\n  &:-ms-input-placeholder {\n    @content;\n  }\n}\n\n@mixin cursor-grab {\n  cursor: -webkit-grab;\n  cursor: grab;\n}\n\n@mixin cursor-grabbing {\n  cursor: -webkit-grabbing;\n  cursor: grabbing;\n}\n\n@mixin backface-visibility($value) {\n  -webkit-backface-visibility: $value;\n  backface-visibility: $value;\n}\n/* stylelint-enable */\n\n\n\n@mixin mat-input-theme($theme) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $foreground: map-get($theme, foreground);\n\n  .mat-form-field-type-mat-native-select .mat-form-field-infix::after {\n    color: mat-color($foreground, secondary-text);\n  }\n\n  .mat-input-element:disabled,\n  .mat-form-field-type-mat-native-select.mat-form-field-disabled .mat-form-field-infix::after {\n    color: mat-color($foreground, disabled-text);\n  }\n\n  .mat-input-element {\n    caret-color: mat-color($primary);\n\n    @include input-placeholder {\n      color: _mat-control-placeholder-color($theme);\n    }\n\n    // On dark themes we set the native `select` color to some shade of white,\n    // however the color propagates to all of the `option` elements, which are\n    // always on a white background inside the dropdown, causing them to blend in.\n    // Since we can't change background of the dropdown, we need to explicitly\n    // reset the color of the options to something dark.\n    @if (map-get($theme, is-dark)) {\n      option {\n        color: $dark-primary-text;\n      }\n\n      option:disabled {\n        color: $dark-disabled-text;\n      }\n    }\n  }\n\n  .mat-accent .mat-input-element {\n    caret-color: mat-color($accent);\n  }\n\n  .mat-warn .mat-input-element,\n  .mat-form-field-invalid .mat-input-element {\n    caret-color: mat-color($warn);\n  }\n\n  .mat-form-field-type-mat-native-select.mat-form-field-invalid .mat-form-field-infix::after {\n    color: mat-color($warn);\n  }\n}\n\n@mixin mat-input-typography($config) {\n  // The unit-less line-height from the font config.\n  $line-height: mat-line-height($config, input);\n\n  // The amount of space between the top of the line and the top of the actual text\n  // (as a fraction of the font-size).\n  $line-spacing: ($line-height - 1) / 2;\n\n  // <input> elements seem to have their height set slightly too large on Safari causing the text to\n  // be misaligned w.r.t. the placeholder. Adding this margin corrects it.\n  input.mat-input-element {\n    margin-top: -$line-spacing * 1em;\n  }\n}\n\n\n\n\n\n\n\n@mixin mat-list-theme($theme) {\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  .mat-list-base {\n    .mat-list-item {\n      color: mat-color($foreground, text);\n    }\n\n    .mat-list-option {\n      color: mat-color($foreground, text);\n    }\n\n    .mat-subheader {\n      color: mat-color($foreground, secondary-text);\n    }\n  }\n\n  .mat-list-item-disabled {\n    background-color: mat-color($background, disabled-list-option);\n  }\n\n  .mat-list-option,\n  .mat-nav-list .mat-list-item {\n    &:hover, &:focus {\n      background: mat-color($background, 'hover');\n    }\n  }\n}\n\n@mixin mat-list-typography($config) {\n  $font-family: mat-font-family($config);\n\n  .mat-list-item {\n    font-family: $font-family;\n  }\n\n  .mat-list-option {\n    font-family: $font-family;\n  }\n\n  // Default list\n  .mat-list-base {\n    .mat-list-item {\n      font-size: mat-font-size($config, subheading-2);\n      @include mat-line-base(mat-font-size($config, body-1));\n    }\n\n    .mat-list-option {\n      font-size: mat-font-size($config, subheading-2);\n      @include mat-line-base(mat-font-size($config, body-1));\n    }\n\n    .mat-subheader {\n      font-family: mat-font-family($config, body-2);\n      font-size: mat-font-size($config, body-2);\n      font-weight: mat-font-weight($config, body-2);\n    }\n  }\n\n  // Dense list\n  .mat-list-base[dense] {\n    .mat-list-item {\n      font-size: mat-font-size($config, caption);\n      @include mat-line-base(mat-font-size($config, caption));\n    }\n\n    .mat-list-option {\n      font-size: mat-font-size($config, caption);\n      @include mat-line-base(mat-font-size($config, caption));\n    }\n\n    .mat-subheader {\n      font-family: $font-family;\n      font-size: mat-font-size($config, caption);\n      font-weight: mat-font-weight($config, body-2);\n    }\n  }\n}\n\n\n\n\n\n\n\n@mixin mat-menu-theme($theme) {\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  .mat-menu-panel {\n    @include _mat-theme-overridable-elevation(4, $theme);\n    background: mat-color($background, 'card');\n  }\n\n  .mat-menu-item {\n    background: transparent;\n    color: mat-color($foreground, 'text');\n\n    &[disabled] {\n      &, &::after {\n        color: mat-color($foreground, 'disabled');\n      }\n    }\n  }\n\n  .mat-menu-item .mat-icon:not([color]),\n  .mat-menu-item-submenu-trigger::after {\n    color: mat-color($foreground, 'icon');\n  }\n\n  .mat-menu-item:hover,\n  .mat-menu-item.cdk-program-focused,\n  .mat-menu-item.cdk-keyboard-focused,\n  .mat-menu-item-highlighted {\n    &:not([disabled]) {\n      background: mat-color($background, 'hover');\n    }\n  }\n}\n\n@mixin mat-menu-typography($config) {\n  .mat-menu-item {\n    font: {\n      family: mat-font-family($config, body-1);\n      size: mat-font-size($config, body-1);\n      weight: mat-font-weight($config, body-1);\n    }\n  }\n}\n\n\n\n\n\n\n@mixin mat-paginator-theme($theme) {\n  $foreground: map-get($theme, foreground);\n  $background: map-get($theme, background);\n\n  .mat-paginator {\n    background: mat-color($background, 'card');\n  }\n\n  .mat-paginator,\n  .mat-paginator-page-size .mat-select-trigger {\n    color: mat-color($foreground, secondary-text);\n  }\n\n  .mat-paginator-decrement,\n  .mat-paginator-increment {\n    border-top: 2px solid mat-color($foreground, 'icon');\n    border-right: 2px solid mat-color($foreground, 'icon');\n  }\n\n  .mat-paginator-first,\n  .mat-paginator-last {\n    border-top: 2px solid mat-color($foreground, 'icon');\n  }\n\n  .mat-icon-button[disabled] {\n    .mat-paginator-decrement,\n    .mat-paginator-increment,\n    .mat-paginator-first,\n    .mat-paginator-last {\n      border-color: mat-color($foreground, 'disabled');\n    }\n  }\n}\n\n@mixin mat-paginator-typography($config) {\n  .mat-paginator,\n  .mat-paginator-page-size .mat-select-trigger {\n    font: {\n      family: mat-font-family($config, caption);\n      size: mat-font-size($config, caption);\n    }\n  }\n}\n\n\n\n\n\n@mixin mat-progress-bar-theme($theme) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n\n  .mat-progress-bar-background {\n    fill: mat-color($primary, lighter);\n  }\n\n  .mat-progress-bar-buffer {\n    background-color: mat-color($primary, lighter);\n  }\n\n  .mat-progress-bar-fill::after {\n    background-color: mat-color($primary);\n  }\n\n  .mat-progress-bar.mat-accent {\n    .mat-progress-bar-background {\n      fill: mat-color($accent, lighter);\n    }\n\n    .mat-progress-bar-buffer {\n      background-color: mat-color($accent, lighter);\n    }\n\n    .mat-progress-bar-fill::after {\n      background-color: mat-color($accent);\n    }\n  }\n\n  .mat-progress-bar.mat-warn {\n    .mat-progress-bar-background {\n      fill: mat-color($warn, lighter);\n    }\n\n    .mat-progress-bar-buffer {\n      background-color: mat-color($warn, lighter);\n    }\n\n    .mat-progress-bar-fill::after {\n      background-color: mat-color($warn);\n    }\n  }\n}\n\n@mixin mat-progress-bar-typography($config) { }\n\n\n\n\n\n\n@mixin mat-progress-spinner-theme($theme) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n\n  .mat-progress-spinner, .mat-spinner {\n    circle {\n      stroke: mat-color($primary);\n    }\n\n    &.mat-accent circle {\n      stroke: mat-color($accent);\n    }\n\n    &.mat-warn circle {\n      stroke: mat-color($warn);\n    }\n  }\n}\n\n@mixin mat-progress-spinner-typography($config) { }\n\n\n\n\n\n@mixin _mat-radio-color($palette) {\n  &.mat-radio-checked .mat-radio-outer-circle {\n    border-color: mat-color($palette);\n  }\n\n  .mat-radio-inner-circle,\n  .mat-radio-ripple .mat-ripple-element:not(.mat-radio-persistent-ripple),\n  &.mat-radio-checked .mat-radio-persistent-ripple,\n  &:active .mat-radio-persistent-ripple {\n    background-color: mat-color($palette);\n  }\n}\n\n@mixin mat-radio-theme($theme) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  .mat-radio-outer-circle {\n    border-color: mat-color($foreground, secondary-text);\n  }\n\n  .mat-radio-button {\n    &.mat-primary {\n      @include _mat-radio-color($primary);\n    }\n\n    &.mat-accent {\n      @include _mat-radio-color($accent);\n    }\n\n    &.mat-warn {\n      @include _mat-radio-color($warn);\n    }\n\n    // This needs extra specificity, because the classes above are combined\n    // (e.g. `.mat-radio-button.mat-accent`) which increases their specificity a lot.\n    // TODO: consider making the selectors into descendants (`.mat-primary .mat-radio-button`).\n    &.mat-radio-disabled {\n      &.mat-radio-checked .mat-radio-outer-circle,\n      .mat-radio-outer-circle {\n        border-color: mat-color($foreground, disabled);\n      }\n\n      .mat-radio-ripple .mat-ripple-element,\n      .mat-radio-inner-circle {\n        background-color: mat-color($foreground, disabled);\n      }\n\n      .mat-radio-label-content {\n        color: mat-color($foreground, disabled);\n      }\n    }\n\n    // Switch this to a solid color since we're using `opacity`\n    // to control how opaque the ripple should be.\n    .mat-ripple-element {\n      background-color: map_get($foreground, base);\n    }\n  }\n}\n\n@mixin mat-radio-typography($config) {\n  .mat-radio-button {\n    font-family: mat-font-family($config);\n  }\n}\n\n\n\n\n\n\n\n\n@mixin mat-select-theme($theme) {\n  $foreground: map-get($theme, foreground);\n  $background: map-get($theme, background);\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n\n  .mat-select-value {\n    color: mat-color($foreground, text);\n  }\n\n  .mat-select-placeholder {\n    color: _mat-control-placeholder-color($theme);\n  }\n\n  .mat-select-disabled .mat-select-value {\n    color: mat-color($foreground, disabled-text);\n  }\n\n  .mat-select-arrow {\n    color: mat-color($foreground, secondary-text);\n  }\n\n  .mat-select-panel {\n    background: mat-color($background, card);\n    @include _mat-theme-overridable-elevation(4, $theme);\n\n    .mat-option.mat-selected:not(.mat-option-multiple) {\n      background: mat-color($background, hover, 0.12);\n    }\n  }\n\n  .mat-form-field {\n    &.mat-focused {\n      &.mat-primary .mat-select-arrow {\n        color: mat-color($primary);\n      }\n\n      &.mat-accent .mat-select-arrow {\n        color: mat-color($accent);\n      }\n\n      &.mat-warn .mat-select-arrow {\n        color: mat-color($warn);\n      }\n    }\n\n    .mat-select.mat-select-invalid .mat-select-arrow {\n      color: mat-color($warn);\n    }\n\n    .mat-select.mat-select-disabled .mat-select-arrow {\n      color: mat-color($foreground, disabled-text);\n    }\n  }\n}\n\n@mixin mat-select-typography($config) {\n  // The unit-less line-height from the font config.\n  $line-height: mat-line-height($config, input);\n\n  .mat-select {\n    font-family: mat-font-family($config);\n  }\n\n  .mat-select-trigger {\n    height: $line-height * 1em;\n  }\n}\n\n\n\n\n\n\n@mixin mat-sidenav-theme($theme) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  // We use invert() here to have the darken the background color expected to be used. If the\n  // background is light, we use a dark backdrop. If the background is dark,\n  // we use a light backdrop.\n  $drawer-backdrop-color: invert(mat-color($background, card, 0.6));\n  $drawer-background-color: mat-color($background, dialog);\n  $drawer-container-background-color:  mat-color($background, background);\n  $drawer-push-background-color: mat-color($background, dialog);\n  $drawer-side-border: solid 1px mat-color($foreground, divider);\n\n  .mat-drawer-container {\n    background-color: $drawer-container-background-color;\n    color: mat-color($foreground, text);\n  }\n\n  .mat-drawer {\n    background-color: $drawer-background-color;\n    color: mat-color($foreground, text);\n\n    &.mat-drawer-push {\n      background-color: $drawer-push-background-color;\n    }\n\n    &:not(.mat-drawer-side) {\n      // The elevation of z-16 is noted in the design specifications.\n      // See https://material.io/design/components/navigation-drawer.html\n      @include _mat-theme-elevation(16, $theme);\n    }\n  }\n\n  .mat-drawer-side {\n    border-right: $drawer-side-border;\n\n    &.mat-drawer-end {\n      border-left: $drawer-side-border;\n      border-right: none;\n    }\n  }\n\n  [dir='rtl'] .mat-drawer-side {\n    border-left: $drawer-side-border;\n    border-right: none;\n\n    &.mat-drawer-end {\n      border-left: none;\n      border-right: $drawer-side-border;\n    }\n  }\n\n  .mat-drawer-backdrop.mat-drawer-shown {\n    background-color: $drawer-backdrop-color;\n  }\n}\n\n@mixin mat-sidenav-typography($config) { }\n\n\n\n\n\n\n@mixin _mat-slide-toggle-checked($palette, $thumb-checked-hue) {\n  &.mat-checked {\n    .mat-slide-toggle-thumb {\n      background-color: mat-color($palette, $thumb-checked-hue);\n    }\n\n    .mat-slide-toggle-bar {\n      // Opacity is determined from the specs for the selection controls.\n      // See: https://material.io/design/components/selection-controls.html#specs\n      background-color: mat-color($palette, $thumb-checked-hue, 0.54);\n    }\n\n    .mat-ripple-element {\n      // Set no opacity for the ripples because the ripple opacity will be adjusted dynamically\n      // based on the type of interaction with the slide-toggle (e.g. for hover, focus)\n      background-color: mat-color($palette, $thumb-checked-hue);\n    }\n  }\n}\n\n@mixin mat-slide-toggle-theme($theme) {\n  $is-dark: map_get($theme, is-dark);\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  // Color hues are based on the specs which briefly show the hues that are applied to a switch.\n  // The 2018 specs no longer describe how dark switches should look like. Due to the lack of\n  // information for dark themed switches, we keep the old behavior that is based on the previous\n  // specifications. See: https://material.io/design/components/selection-controls.html#specs\n  $thumb-unchecked-hue: if($is-dark, 400, 50);\n  $thumb-checked-hue: if($is-dark, 200, default);\n\n  $bar-unchecked-color: mat-color($foreground, disabled);\n  $ripple-unchecked-color: mat-color($foreground, base);\n\n  .mat-slide-toggle {\n    @include _mat-slide-toggle-checked($accent, $thumb-checked-hue);\n\n    &.mat-primary {\n      @include _mat-slide-toggle-checked($primary, $thumb-checked-hue);\n    }\n\n    &.mat-warn {\n      @include _mat-slide-toggle-checked($warn, $thumb-checked-hue);\n    }\n\n    &:not(.mat-checked) .mat-ripple-element {\n      // Set no opacity for the ripples because the ripple opacity will be adjusted dynamically\n      // based on the type of interaction with the slide-toggle (e.g. for hover, focus)\n      background-color: $ripple-unchecked-color;\n    }\n  }\n\n  .mat-slide-toggle-thumb {\n    @include _mat-theme-elevation(1, $theme);\n    background-color: mat-color($mat-grey, $thumb-unchecked-hue);\n  }\n\n  .mat-slide-toggle-bar {\n    background-color: $bar-unchecked-color;\n  }\n}\n\n@mixin mat-slide-toggle-typography($config) {\n  .mat-slide-toggle-content {\n    font-family: mat-font-family($config);\n  }\n}\n\n\n\n\n\n@mixin _mat-slider-inner-content-theme($palette) {\n  .mat-slider-track-fill,\n  .mat-slider-thumb,\n  .mat-slider-thumb-label {\n    background-color: mat-color($palette);\n  }\n\n  .mat-slider-thumb-label-text {\n    color: mat-color($palette, default-contrast);\n  }\n}\n\n@mixin mat-slider-theme($theme) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  $mat-slider-off-color: mat-color($foreground, slider-off);\n  $mat-slider-off-focused-color: mat-color($foreground, slider-off-active);\n  $mat-slider-disabled-color: mat-color($foreground, slider-off);\n  $mat-slider-labeled-min-value-thumb-color: mat-color($foreground, slider-min);\n  $mat-slider-labeled-min-value-thumb-label-color: mat-color($foreground, slider-off);\n  $mat-slider-focus-ring-color: mat-color($accent, default, 0.2);\n  $mat-slider-focus-ring-min-value-color: mat-color($foreground, base, 0.12);\n  $mat-slider-tick-color: mat-color($foreground, base, 0.7);\n  $mat-slider-tick-size: 2px;\n\n  .mat-slider-track-background {\n    background-color: $mat-slider-off-color;\n  }\n\n  .mat-primary {\n    @include _mat-slider-inner-content-theme($primary);\n  }\n\n  .mat-accent {\n    @include _mat-slider-inner-content-theme($accent);\n  }\n\n  .mat-warn {\n    @include _mat-slider-inner-content-theme($warn);\n  }\n\n  .mat-slider-focus-ring {\n    background-color: $mat-slider-focus-ring-color;\n  }\n\n  .mat-slider:hover,\n  .cdk-focused {\n    .mat-slider-track-background {\n      background-color: $mat-slider-off-focused-color;\n    }\n  }\n\n  .mat-slider-disabled {\n    .mat-slider-track-background,\n    .mat-slider-track-fill,\n    .mat-slider-thumb {\n      background-color: $mat-slider-disabled-color;\n    }\n\n    &:hover {\n      .mat-slider-track-background {\n        background-color: $mat-slider-disabled-color;\n      }\n    }\n  }\n\n  .mat-slider-min-value {\n    .mat-slider-focus-ring {\n      background-color: $mat-slider-focus-ring-min-value-color;\n    }\n\n    &.mat-slider-thumb-label-showing {\n      .mat-slider-thumb,\n      .mat-slider-thumb-label {\n        background-color: $mat-slider-labeled-min-value-thumb-color;\n      }\n\n      &.cdk-focused {\n        .mat-slider-thumb,\n        .mat-slider-thumb-label {\n          background-color: $mat-slider-labeled-min-value-thumb-label-color;\n        }\n      }\n    }\n\n    &:not(.mat-slider-thumb-label-showing) {\n      .mat-slider-thumb {\n        border-color: $mat-slider-off-color;\n        background-color: transparent;\n      }\n\n      &:hover,\n      &.cdk-focused {\n        .mat-slider-thumb {\n          border-color: $mat-slider-off-focused-color;\n        }\n\n        &.mat-slider-disabled .mat-slider-thumb {\n          border-color: $mat-slider-disabled-color;\n        }\n      }\n    }\n  }\n\n  .mat-slider-has-ticks .mat-slider-wrapper::after {\n    border-color: $mat-slider-tick-color;\n  }\n\n  .mat-slider-horizontal .mat-slider-ticks {\n    background-image: repeating-linear-gradient(to right, $mat-slider-tick-color,\n        $mat-slider-tick-color $mat-slider-tick-size, transparent 0, transparent);\n    // Firefox doesn't draw the gradient correctly with 'to right'\n    // (see https://bugzilla.mozilla.org/show_bug.cgi?id=1314319).\n    background-image: -moz-repeating-linear-gradient(0.0001deg, $mat-slider-tick-color,\n        $mat-slider-tick-color $mat-slider-tick-size, transparent 0, transparent);\n  }\n\n  .mat-slider-vertical .mat-slider-ticks {\n    background-image: repeating-linear-gradient(to bottom, $mat-slider-tick-color,\n        $mat-slider-tick-color $mat-slider-tick-size, transparent 0, transparent);\n  }\n}\n\n@mixin mat-slider-typography($config) {\n  .mat-slider-thumb-label-text {\n    font: {\n      family: mat-font-family($config);\n      size: mat-font-size($config, caption);\n      weight: mat-font-weight($config, body-2);\n    }\n  }\n}\n\n\n\n\n\n@mixin mat-stepper-theme($theme) {\n  $foreground: map-get($theme, foreground);\n  $background: map-get($theme, background);\n  $primary: map-get($theme, primary);\n  $warn: map-get($theme, warn);\n\n  .mat-step-header {\n    &.cdk-keyboard-focused,\n    &.cdk-program-focused,\n    &:hover {\n      background-color: mat-color($background, hover);\n    }\n\n    // On touch devices the :hover state will linger on the element after a tap.\n    // Reset it via `@media` after the declaration, because the media query isn't\n    // supported by all browsers yet.\n    @media (hover: none) {\n      &:hover {\n        background: none;\n      }\n    }\n\n    .mat-step-label,\n    .mat-step-optional {\n      // TODO(josephperrott): Update to using a corrected disabled-text contrast\n      // instead of secondary-text.\n      color: mat-color($foreground, secondary-text);\n    }\n\n    .mat-step-icon {\n      // TODO(josephperrott): Update to using a corrected disabled-text contrast\n      // instead of secondary-text.\n      background-color: mat-color($foreground, secondary-text);\n      color: mat-color($primary, default-contrast);\n    }\n\n    .mat-step-icon-selected,\n    .mat-step-icon-state-done,\n    .mat-step-icon-state-edit {\n      background-color: mat-color($primary);\n      color: mat-color($primary, default-contrast);\n    }\n\n    .mat-step-icon-state-error {\n      background-color: transparent;\n      color: mat-color($warn);\n    }\n\n    .mat-step-label.mat-step-label-active {\n      color: mat-color($foreground, text);\n    }\n\n    .mat-step-label.mat-step-label-error {\n      color: mat-color($warn);\n    }\n  }\n\n  .mat-stepper-horizontal, .mat-stepper-vertical {\n    background-color: mat-color($background, card);\n  }\n\n  .mat-stepper-vertical-line::before {\n    border-left-color: mat-color($foreground, divider);\n  }\n\n  .mat-horizontal-stepper-header::before,\n  .mat-horizontal-stepper-header::after,\n  .mat-stepper-horizontal-line {\n    border-top-color: mat-color($foreground, divider);\n  }\n}\n\n@mixin mat-stepper-typography($config) {\n  .mat-stepper-vertical, .mat-stepper-horizontal {\n    font-family: mat-font-family($config);\n  }\n\n  .mat-step-label {\n    font: {\n      size: mat-font-size($config, body-1);\n      weight: mat-font-weight($config, body-1);\n    };\n  }\n\n  .mat-step-sub-label-error {\n    font-weight: normal;\n  }\n\n  .mat-step-label-error {\n    font-size: mat-font-size($config, body-2);\n  }\n\n  .mat-step-label-selected {\n    font: {\n      size: mat-font-size($config, body-2);\n      weight: mat-font-weight($config, body-2);\n    };\n  }\n}\n\n@mixin mat-sort-theme($theme) {\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  .mat-sort-header-arrow {\n    // Because the arrow is made up of multiple elements that are stacked on top of each other,\n    // we can't use the semi-trasparent color from the theme directly. We convert it into a solid\n    // color by taking the opacity from the rgba value and using the value to determine the\n    // percentage of the background to put into foreground when mixing the colors together.\n    $table-background: mat-color($background, 'card');\n    $text-color: mat-color($foreground, secondary-text);\n    $text-opacity: opacity($text-color);\n    color: mix($table-background, rgba($text-color, 1), (1 - $text-opacity) * 100%);\n  }\n}\n\n@mixin mat-sort-typography($config) { }\n\n\n\n\n\n@mixin mat-tabs-theme($theme) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n  $header-border: 1px solid mat-color($foreground, divider);\n\n  .mat-tab-nav-bar,\n  .mat-tab-header {\n    border-bottom: $header-border;\n  }\n\n  .mat-tab-group-inverted-header {\n    .mat-tab-nav-bar,\n    .mat-tab-header {\n      border-top: $header-border;\n      border-bottom: none;\n    }\n  }\n\n  .mat-tab-label, .mat-tab-link {\n    color: mat-color($foreground, text);\n\n    &.mat-tab-disabled {\n      color: mat-color($foreground, disabled-text);\n    }\n  }\n\n  .mat-tab-header-pagination-chevron {\n    border-color: mat-color($foreground, text);\n  }\n\n  .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron {\n    border-color: mat-color($foreground, disabled-text);\n  }\n\n  // Remove header border when there is a background color\n  .mat-tab-group[class*='mat-background-'] .mat-tab-header,\n  .mat-tab-nav-bar[class*='mat-background-'] {\n    border-bottom: none;\n    border-top: none;\n  }\n\n  .mat-tab-group, .mat-tab-nav-bar {\n    $theme-colors: (\n      primary: $primary,\n      accent: $accent,\n      warn: $warn\n    );\n\n    @each $name, $color in $theme-colors {\n      // Set the foreground color of the tabs\n      &.mat-#{$name} {\n        @include _mat-tab-label-focus($color);\n        @include _mat-ink-bar($color);\n\n        // Override ink bar when background color is the same\n        &.mat-background-#{$name} {\n          @include _mat-ink-bar($color, default-contrast);\n        }\n      }\n    }\n\n    @each $name, $color in $theme-colors {\n      // Set background color of the tabs and override focus color\n      &.mat-background-#{$name} {\n        @include _mat-tab-label-focus($color);\n        @include _mat-tabs-background($color);\n      }\n    }\n  }\n}\n\n@mixin _mat-ink-bar($color, $hue: default) {\n  .mat-ink-bar {\n    background-color: mat-color($color, $hue);\n  }\n}\n\n@mixin _mat-tab-label-focus($tab-focus-color) {\n  .mat-tab-label,\n  .mat-tab-link {\n    &.cdk-keyboard-focused,\n    &.cdk-program-focused {\n      &:not(.mat-tab-disabled) {\n        background-color: mat-color($tab-focus-color, lighter, 0.3);\n      }\n    }\n  }\n}\n\n@mixin _mat-tabs-background($background-color) {\n  // Set background color for the tab group\n  .mat-tab-header, .mat-tab-links {\n    background-color: mat-color($background-color);\n  }\n\n  // Set labels to contrast against background\n  .mat-tab-label, .mat-tab-link {\n    color: mat-color($background-color, default-contrast);\n\n    &.mat-tab-disabled {\n      color: mat-color($background-color, default-contrast, 0.4);\n    }\n  }\n\n  // Set pagination chevrons to contrast background\n  .mat-tab-header-pagination-chevron {\n    border-color: mat-color($background-color, default-contrast);\n  }\n\n  .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron {\n    border-color: mat-color($background-color, default-contrast, 0.4);\n  }\n\n  // Set ripples color to be the contrast color of the new background. Otherwise the ripple\n  // color will be based on the app background color.\n  .mat-ripple-element {\n    background-color: mat-color($background-color, default-contrast, 0.12);\n  }\n}\n\n@mixin mat-tabs-typography($config) {\n  .mat-tab-group {\n    font-family: mat-font-family($config);\n  }\n\n  .mat-tab-label, .mat-tab-link {\n    font: {\n      family: mat-font-family($config, button);\n      size: mat-font-size($config, button);\n      weight: mat-font-weight($config, button);\n    }\n  }\n}\n\n\n\n\n\n\n@mixin _mat-toolbar-color($palette) {\n  background: mat-color($palette);\n  color: mat-color($palette, default-contrast);\n}\n\n@mixin _mat-toolbar-form-field-overrides {\n  .mat-form-field-underline,\n  .mat-form-field-ripple,\n  .mat-focused .mat-form-field-ripple {\n    background-color: currentColor;\n  }\n\n  .mat-form-field-label,\n  .mat-focused .mat-form-field-label,\n  .mat-select-value,\n  .mat-select-arrow,\n  .mat-form-field.mat-focused .mat-select-arrow {\n    color: inherit;\n  }\n\n  .mat-input-element {\n    caret-color: currentColor;\n  }\n}\n\n@mixin mat-toolbar-theme($theme) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  .mat-toolbar {\n    background: mat-color($background, app-bar);\n    color: mat-color($foreground, text);\n\n    &.mat-primary {\n      @include _mat-toolbar-color($primary);\n    }\n\n    &.mat-accent {\n      @include _mat-toolbar-color($accent);\n    }\n\n    &.mat-warn {\n      @include _mat-toolbar-color($warn);\n    }\n\n    @include _mat-toolbar-form-field-overrides;\n  }\n}\n\n@mixin mat-toolbar-typography($config) {\n  .mat-toolbar,\n  .mat-toolbar h1,\n  .mat-toolbar h2,\n  .mat-toolbar h3,\n  .mat-toolbar h4,\n  .mat-toolbar h5,\n  .mat-toolbar h6 {\n    @include mat-typography-level-to-styles($config, title);\n    margin: 0;\n  }\n}\n\n\n\n\n\n$mat-tooltip-target-height: 22px;\n$mat-tooltip-font-size: 10px;\n$mat-tooltip-vertical-padding: ($mat-tooltip-target-height - $mat-tooltip-font-size) / 2;\n\n$mat-tooltip-handset-target-height: 30px;\n$mat-tooltip-handset-font-size: 14px;\n$mat-tooltip-handset-vertical-padding:\n    ($mat-tooltip-handset-target-height - $mat-tooltip-handset-font-size) / 2;\n\n@mixin mat-tooltip-theme($theme) {\n  .mat-tooltip {\n    background: mat-color($mat-grey, 700, 0.9);\n  }\n}\n\n@mixin mat-tooltip-typography($config) {\n  .mat-tooltip {\n    font-family: mat-font-family($config);\n    font-size: $mat-tooltip-font-size;\n    padding-top: $mat-tooltip-vertical-padding;\n    padding-bottom: $mat-tooltip-vertical-padding;\n  }\n\n  .mat-tooltip-handset {\n    font-size: $mat-tooltip-handset-font-size;\n    padding-top: $mat-tooltip-handset-vertical-padding;\n    padding-bottom: $mat-tooltip-handset-vertical-padding;\n  }\n}\n\n\n\n\n\n@mixin mat-snack-bar-theme($theme) {\n  $is-dark-theme: map-get($theme, is-dark);\n  $accent: map-get($theme, accent);\n\n  .mat-snack-bar-container {\n    // Use the primary text on the dark theme, even though the lighter one uses\n    // a secondary, because the contrast on the light primary text is poor.\n    color: if($is-dark-theme, $dark-primary-text, $light-secondary-text);\n    background: if($is-dark-theme, map-get($mat-grey, 50), #323232);\n\n    @include _mat-theme-elevation(6, $theme);\n  }\n\n  .mat-simple-snackbar-action {\n    color: if($is-dark-theme, inherit, mat-color($accent));\n  }\n}\n\n@mixin mat-snack-bar-typography($config) {\n  .mat-simple-snackbar {\n    font: {\n      family: mat-font-family($config, body-1);\n      size: mat-font-size($config, body-1);\n    }\n  }\n\n  .mat-simple-snackbar-action {\n    line-height: 1;\n    font: {\n      family: inherit;\n      size: inherit;\n      weight: mat-font-weight($config, button);\n    }\n  }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// Theme styles that only apply to the fill appearance of the form-field.\n\n@mixin mat-form-field-fill-theme($theme) {\n  $foreground: map-get($theme, foreground);\n  $is-dark-theme: map-get($theme, is-dark);\n\n  $fill-background: mat-color($foreground, base, if($is-dark-theme, 0.1, 0.04));\n  $fill-disabled-background: mat-color($foreground, base, if($is-dark-theme, 0.05, 0.02));\n  $underline-color: mat-color($foreground, divider, if($is-dark-theme, 0.5, 0.42));\n  $label-disabled-color: mat-color($foreground, disabled-text);\n\n  .mat-form-field-appearance-fill {\n    .mat-form-field-flex {\n      background-color: $fill-background;\n    }\n\n    &.mat-form-field-disabled .mat-form-field-flex {\n      background-color: $fill-disabled-background;\n    }\n\n    .mat-form-field-underline::before {\n      background-color: $underline-color;\n    }\n\n    &.mat-form-field-disabled {\n      .mat-form-field-label {\n        color: $label-disabled-color;\n      }\n\n      .mat-form-field-underline::before {\n        background-color: transparent;\n      }\n    }\n  }\n}\n\n// Used to make instances of the _mat-form-field-label-floating mixin negligibly different,\n// and prevent Google's CSS Optimizer from collapsing the declarations. This is needed because some\n// of the selectors contain pseudo-classes not recognized in all browsers. If a browser encounters\n// an unknown pseudo-class it will discard the entire rule set.\n$mat-form-field-fill-dedupe: 0;\n\n// Applies a floating label above the form field control itself.\n@mixin _mat-form-field-fill-label-floating($font-scale, $infix-padding, $infix-margin-top) {\n  transform: translateY(-$infix-margin-top - $infix-padding + $mat-form-field-fill-dedupe)\n             scale($font-scale);\n  width: 100% / $font-scale + $mat-form-field-fill-dedupe;\n\n  $mat-form-field-fill-dedupe: $mat-form-field-fill-dedupe + 0.00001 !global;\n}\n\n@mixin mat-form-field-fill-typography($config) {\n  // The unit-less line-height from the font config.\n  $line-height: mat-line-height($config, input);\n  // The amount to scale the font for the floating label and subscript.\n  $subscript-font-scale: 0.75;\n  // The padding on top of the infix.\n  $infix-padding-top: 0.25em;\n  // The padding below the infix.\n  $infix-padding-bottom: 0.75em;\n  // The margin applied to the form-field-infix to reserve space for the floating label.\n  $infix-margin-top: 1em * $line-height * $subscript-font-scale;\n  // The amount we offset the label from the input text in the fill appearance.\n  $fill-appearance-label-offset: -0.5em;\n\n  .mat-form-field-appearance-fill {\n    .mat-form-field-infix {\n      padding: $infix-padding-top 0 $infix-padding-bottom 0;\n    }\n\n    .mat-form-field-label {\n      top: $infix-margin-top + $infix-padding-top;\n      margin-top: $fill-appearance-label-offset;\n    }\n\n    &.mat-form-field-can-float {\n      &.mat-form-field-should-float .mat-form-field-label,\n      .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\n        @include _mat-form-field-fill-label-floating(\n                $subscript-font-scale, $infix-padding-top + $fill-appearance-label-offset,\n                $infix-margin-top);\n      }\n\n      // Server-side rendered matInput with a label attribute but label not shown\n      // (used as a pure CSS stand-in for mat-form-field-should-float).\n      .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper\n      .mat-form-field-label {\n        @include _mat-form-field-fill-label-floating(\n                $subscript-font-scale, $infix-padding-top + $fill-appearance-label-offset,\n                $infix-margin-top);\n      }\n    }\n  }\n}\n\n\n\n\n\n\n\n// Theme styles that only apply to the legacy appearance of the form-field.\n\n@mixin mat-form-field-legacy-theme($theme) {\n  $foreground: map-get($theme, foreground);\n  $is-dark-theme: map-get($theme, is-dark);\n\n  $label-color: mat-color($foreground, secondary-text);\n  $underline-color: mat-color($foreground, divider, if($is-dark-theme, 0.7, 0.42));\n\n  .mat-form-field-appearance-legacy {\n    .mat-form-field-label {\n      color: $label-color;\n    }\n\n    .mat-hint {\n      color: $label-color;\n    }\n\n    .mat-form-field-underline {\n      background-color: $underline-color;\n    }\n\n    &.mat-form-field-disabled .mat-form-field-underline {\n      @include mat-control-disabled-underline($underline-color);\n    }\n  }\n}\n\n// Used to make instances of the _mat-form-field-label-floating mixin negligibly different,\n// and prevent Google's CSS Optimizer from collapsing the declarations. This is needed because some\n// of the selectors contain pseudo-classes not recognized in all browsers. If a browser encounters\n// an unknown pseudo-class it will discard the entire rule set.\n$mat-form-field-legacy-dedupe: 0;\n\n// Applies a floating label above the form field control itself.\n@mixin _mat-form-field-legacy-label-floating($font-scale, $infix-padding, $infix-margin-top) {\n  // We use perspective to fix the text blurriness as described here:\n  // http://www.useragentman.com/blog/2014/05/04/fixing-typography-inside-of-2-d-css-transforms/\n  // This results in a small jitter after the label floats on Firefox, which the\n  // translateZ fixes.\n  transform: translateY(-$infix-margin-top - $infix-padding) scale($font-scale) perspective(100px)\n  translateZ(0.001px + $mat-form-field-legacy-dedupe);\n  // The tricks above used to smooth out the animation on chrome and firefox actually make things\n  // worse on IE, so we don't include them in the IE version.\n  -ms-transform: translateY(-$infix-margin-top - $infix-padding + $mat-form-field-legacy-dedupe)\n                  scale($font-scale);\n\n  width: 100% / $font-scale + $mat-form-field-legacy-dedupe;\n\n  $mat-form-field-legacy-dedupe: $mat-form-field-legacy-dedupe + 0.00001 !global;\n}\n\n// Same as mixin above, but omits the translateZ for printing purposes.\n@mixin _mat-form-field-legacy-label-floating-print($font-scale, $infix-padding, $infix-margin-top) {\n  // This results in a small jitter after the label floats on Firefox, which the\n  // translateZ fixes.\n  transform: translateY(-$infix-margin-top - $infix-padding + $mat-form-field-legacy-dedupe)\n                  scale($font-scale);\n  // The tricks above used to smooth out the animation on chrome and firefox actually make things\n  // worse on IE, so we don't include them in the IE version.\n  $mat-form-field-legacy-dedupe: $mat-form-field-legacy-dedupe + 0.00001 !global;\n}\n\n@mixin mat-form-field-legacy-typography($config) {\n  // The unit-less line-height from the font config.\n  $line-height: mat-line-height($config, input);\n  // The amount to scale the font for the floating label and subscript.\n  $subscript-font-scale: 0.75;\n  // The amount of space between the top of the line and the top of the actual text\n  // (as a fraction of the font-size).\n  $line-spacing: ($line-height - 1) / 2;\n  // The padding on the infix. Mocks show half of the text size, but seem to measure from the edge\n  // of the text itself, not the edge of the line; therefore we subtract off the line spacing.\n  $infix-padding: 0.5em - $line-spacing;\n  // The margin applied to the form-field-infix to reserve space for the floating label.\n  $infix-margin-top: 1em * $line-height * $subscript-font-scale;\n  // The space between the bottom of the .mat-form-field-flex area and the subscript wrapper.\n  // Mocks show half of the text size, but this margin is applied to an element with the subscript\n  // text font size, so we need to divide by the scale factor to make it half of the original text\n  // size. We again need to subtract off the line spacing since the mocks measure to the edge of the\n  // text, not the  edge of the line.\n  $subscript-margin-top: 0.5em / $subscript-font-scale - ($line-spacing * 2);\n  // The padding applied to the form-field-wrapper to reserve space for the subscript, since it's\n  // absolutely positioned. This is a combination of the subscript's margin and line-height, but we\n  // need to multiply by the subscript font scale factor since the wrapper has a larger font size.\n  $wrapper-padding-bottom: ($subscript-margin-top + $line-height) * $subscript-font-scale;\n\n  .mat-form-field-appearance-legacy {\n    .mat-form-field-wrapper {\n      padding-bottom: $wrapper-padding-bottom;\n    }\n\n    .mat-form-field-infix {\n      padding: $infix-padding 0;\n    }\n\n    &.mat-form-field-can-float {\n      &.mat-form-field-should-float .mat-form-field-label,\n      .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\n        @include _mat-form-field-legacy-label-floating(\n                $subscript-font-scale, $infix-padding, $infix-margin-top);\n      }\n\n      // @breaking-change 8.0.0 will rely on AutofillMonitor instead.\n      .mat-form-field-autofill-control:-webkit-autofill + .mat-form-field-label-wrapper\n      .mat-form-field-label {\n        @include _mat-form-field-legacy-label-floating(\n                $subscript-font-scale, $infix-padding, $infix-margin-top);\n      }\n\n      // Server-side rendered matInput with a label attribute but label not shown\n      // (used as a pure CSS stand-in for mat-form-field-should-float).\n      .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper\n      .mat-form-field-label {\n        @include _mat-form-field-legacy-label-floating(\n                $subscript-font-scale, $infix-padding, $infix-margin-top);\n      }\n    }\n\n    .mat-form-field-label {\n      top: $infix-margin-top + $infix-padding;\n    }\n\n    .mat-form-field-underline {\n      // We want the underline to start at the end of the content box, not the padding box,\n      // so we move it up by the padding amount.\n      bottom: $wrapper-padding-bottom;\n    }\n\n    .mat-form-field-subscript-wrapper {\n      margin-top: $subscript-margin-top;\n\n      // We want the subscript to start at the end of the content box, not the padding box,\n      // so we move it up by the padding amount (adjusted for the smaller font size);\n      top: calc(100% - #{$wrapper-padding-bottom / $subscript-font-scale});\n    }\n  }\n\n  // translateZ causes the label to not appear while printing, so we override it to not\n  // apply translateZ while printing\n  @media print {\n    .mat-form-field-appearance-legacy {\n      &.mat-form-field-can-float {\n        &.mat-form-field-should-float .mat-form-field-label,\n        .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\n          @include _mat-form-field-legacy-label-floating-print(\n                  $subscript-font-scale, $infix-padding, $infix-margin-top);\n        }\n\n        // @breaking-change 8.0.0 will rely on AutofillMonitor instead.\n        .mat-form-field-autofill-control:-webkit-autofill + .mat-form-field-label-wrapper\n        .mat-form-field-label {\n          @include _mat-form-field-legacy-label-floating-print(\n                  $subscript-font-scale, $infix-padding, $infix-margin-top);\n        }\n\n        // Server-side rendered matInput with a label attribute but label not shown\n        // (used as a pure CSS stand-in for mat-form-field-should-float).\n        .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper\n        .mat-form-field-label {\n          @include _mat-form-field-legacy-label-floating-print(\n                  $subscript-font-scale, $infix-padding, $infix-margin-top);\n        }\n      }\n    }\n  }\n}\n\n\n\n\n\n\n\n// Theme styles that only apply to the outline appearance of the form-field.\n\n@mixin mat-form-field-outline-theme($theme) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $foreground: map-get($theme, foreground);\n  $is-dark-theme: map-get($theme, is-dark);\n\n  $label-disabled-color: mat-color($foreground, disabled-text);\n  $outline-color: mat-color($foreground, divider, if($is-dark-theme, 0.3, 0.12));\n  $outline-color-hover: mat-color($foreground, divider, if($is-dark-theme, 1, 0.87));\n  $outline-color-primary: mat-color($primary);\n  $outline-color-accent: mat-color($accent);\n  $outline-color-warn: mat-color($warn);\n  $outline-color-disabled: mat-color($foreground, divider, if($is-dark-theme, 0.15, 0.06));\n\n  .mat-form-field-appearance-outline {\n    .mat-form-field-outline {\n      color: $outline-color;\n    }\n\n    .mat-form-field-outline-thick {\n      color: $outline-color-hover;\n    }\n\n    &.mat-focused {\n      .mat-form-field-outline-thick {\n        color: $outline-color-primary;\n      }\n\n      &.mat-accent .mat-form-field-outline-thick {\n        color: $outline-color-accent;\n      }\n\n      &.mat-warn .mat-form-field-outline-thick {\n        color: $outline-color-warn;\n      }\n    }\n\n    // Class repeated so that rule is specific enough to override focused accent color case.\n    &.mat-form-field-invalid.mat-form-field-invalid {\n      .mat-form-field-outline-thick {\n        color: $outline-color-warn;\n      }\n    }\n\n    &.mat-form-field-disabled {\n      .mat-form-field-label {\n        color: $label-disabled-color;\n      }\n\n      .mat-form-field-outline {\n        color: $outline-color-disabled;\n      }\n    }\n  }\n}\n\n// Used to make instances of the _mat-form-field-label-floating mixin negligibly different,\n// and prevent Google's CSS Optimizer from collapsing the declarations. This is needed because some\n// of the selectors contain pseudo-classes not recognized in all browsers. If a browser encounters\n// an unknown pseudo-class it will discard the entire rule set.\n$mat-form-field-outline-dedupe: 0;\n\n// Applies a floating label above the form field control itself.\n@mixin _mat-form-field-outline-label-floating($font-scale, $infix-padding, $infix-margin-top) {\n  transform: translateY(-$infix-margin-top - $infix-padding + $mat-form-field-outline-dedupe)\n  scale($font-scale);\n  width: 100% / $font-scale + $mat-form-field-outline-dedupe;\n\n  $mat-form-field-outline-dedupe: $mat-form-field-outline-dedupe + 0.00001 !global;\n}\n\n@mixin mat-form-field-outline-typography($config) {\n  // The unit-less line-height from the font config.\n  $line-height: mat-line-height($config, input);\n  // The amount to scale the font for the floating label and subscript.\n  $subscript-font-scale: 0.75;\n  // The padding above and below the infix.\n  $infix-padding: 1em;\n  // The margin applied to the form-field-infix to reserve space for the floating label.\n  $infix-margin-top: 1em * $line-height * $subscript-font-scale;\n  // The space between the bottom of the .mat-form-field-flex area and the subscript wrapper.\n  // Mocks show half of the text size, but this margin is applied to an element with the subscript\n  // text font size, so we need to divide by the scale factor to make it half of the original text\n  // size.\n  $subscript-margin-top: 0.5em / $subscript-font-scale;\n  // The padding applied to the form-field-wrapper to reserve space for the subscript, since it's\n  // absolutely positioned. This is a combination of the subscript's margin and line-height, but we\n  // need to multiply by the subscript font scale factor since the wrapper has a larger font size.\n  $wrapper-padding-bottom: ($subscript-margin-top + $line-height) * $subscript-font-scale;\n  // The amount we offset the label from the input text in the outline appearance.\n  $outline-appearance-label-offset: -0.25em;\n\n  .mat-form-field-appearance-outline {\n    .mat-form-field-infix {\n      padding: $infix-padding 0 $infix-padding 0;\n    }\n\n    .mat-form-field-label {\n      top: $infix-margin-top + $infix-padding;\n      margin-top: $outline-appearance-label-offset;\n    }\n\n    &.mat-form-field-can-float {\n      &.mat-form-field-should-float .mat-form-field-label,\n      .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\n        @include _mat-form-field-outline-label-floating(\n                $subscript-font-scale, $infix-padding + $outline-appearance-label-offset,\n                $infix-margin-top);\n      }\n\n      // Server-side rendered matInput with a label attribute but label not shown\n      // (used as a pure CSS stand-in for mat-form-field-should-float).\n      .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper\n      .mat-form-field-label {\n        @include _mat-form-field-outline-label-floating(\n                $subscript-font-scale, $infix-padding + $outline-appearance-label-offset,\n                $infix-margin-top);\n      }\n    }\n  }\n}\n\n\n\n\n\n\n\n// Theme styles that only apply to the standard appearance of the form-field.\n\n@mixin mat-form-field-standard-theme($theme) {\n  $foreground: map-get($theme, foreground);\n  $is-dark-theme: map-get($theme, is-dark);\n\n  $underline-color: mat-color($foreground, divider, if($is-dark-theme, 0.7, 0.42));\n\n  .mat-form-field-appearance-standard {\n    .mat-form-field-underline {\n      background-color: $underline-color;\n    }\n\n    &.mat-form-field-disabled .mat-form-field-underline {\n      @include mat-control-disabled-underline($underline-color);\n    }\n  }\n}\n\n@mixin mat-form-field-standard-typography($config) {}\n\n\n// Theme styles that apply to all appearances of the form-field.\n@mixin mat-form-field-theme($theme) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n  $is-dark-theme: map-get($theme, is-dark);\n\n  // Label colors. Required is used for the `*` star shown in the label.\n  $label-color: mat-color($foreground, secondary-text, if($is-dark-theme, 0.7, 0.6));\n  $focused-label-color: mat-color($primary);\n  $required-label-color: mat-color($accent);\n\n  // Underline colors.\n  $underline-color-base: mat-color($foreground, divider, if($is-dark-theme, 1, 0.87));\n  $underline-color-accent: mat-color($accent);\n  $underline-color-warn: mat-color($warn);\n  $underline-focused-color: mat-color($primary);\n\n  .mat-form-field-label {\n    color: $label-color;\n  }\n\n  .mat-hint {\n    color: $label-color;\n  }\n\n  .mat-form-field.mat-focused .mat-form-field-label {\n    color: $focused-label-color;\n\n    &.mat-accent {\n      color: $underline-color-accent;\n    }\n\n    &.mat-warn {\n      color: $underline-color-warn;\n    }\n  }\n\n  .mat-focused .mat-form-field-required-marker {\n    color: $required-label-color;\n  }\n\n  .mat-form-field-ripple {\n    background-color: $underline-color-base;\n  }\n\n  .mat-form-field.mat-focused {\n    .mat-form-field-ripple {\n      background-color: $underline-focused-color;\n\n      &.mat-accent {\n        background-color: $underline-color-accent;\n      }\n\n      &.mat-warn {\n        background-color: $underline-color-warn;\n      }\n    }\n  }\n\n  // Styling for the error state of the form field. Note that while the same can be\n  // achieved with the ng-* classes, we use this approach in order to ensure that the same\n  // logic is used to style the error state and to show the error messages.\n  .mat-form-field.mat-form-field-invalid {\n    .mat-form-field-label {\n      color: $underline-color-warn;\n\n      &.mat-accent,\n      .mat-form-field-required-marker {\n        color: $underline-color-warn;\n      }\n    }\n\n    .mat-form-field-ripple,\n    .mat-form-field-ripple.mat-accent {\n      background-color: $underline-color-warn;\n    }\n  }\n\n  .mat-error {\n    color: $underline-color-warn;\n  }\n\n  @include mat-form-field-legacy-theme($theme);\n  @include mat-form-field-standard-theme($theme);\n  @include mat-form-field-fill-theme($theme);\n  @include mat-form-field-outline-theme($theme);\n}\n\n// Used to make instances of the _mat-form-field-label-floating mixin negligibly different,\n// and prevent Google's CSS Optimizer from collapsing the declarations. This is needed because some\n// of the selectors contain pseudo-classes not recognized in all browsers. If a browser encounters\n// an unknown pseudo-class it will discard the entire rule set.\n$mat-form-field-dedupe: 0;\n\n// Applies a floating label above the form field control itself.\n@mixin _mat-form-field-label-floating($font-scale, $infix-padding, $infix-margin-top) {\n  transform: translateY(-$infix-margin-top - $infix-padding + $mat-form-field-dedupe)\n             scale($font-scale);\n  width: 100% / $font-scale + $mat-form-field-dedupe;\n\n  $mat-form-field-dedupe: $mat-form-field-dedupe + 0.00001 !global;\n}\n\n@mixin mat-form-field-typography($config) {\n  // The unit-less line-height from the font config.\n  $line-height: mat-line-height($config, input);\n\n  // The amount to scale the font for the floating label and subscript.\n  $subscript-font-scale: 0.75;\n  // The amount to scale the font for the prefix and suffix icons.\n  $prefix-suffix-icon-font-scale: 1.5;\n\n  // The padding on the infix. Mocks show half of the text size.\n  $infix-padding: 0.5em;\n  // The margin applied to the form-field-infix to reserve space for the floating label.\n  $infix-margin-top: 1em * $line-height * $subscript-font-scale;\n  // Font size to use for the label and subscript text.\n  $subscript-font-size: $subscript-font-scale * 100%;\n  // Font size to use for the for the prefix and suffix icons.\n  $prefix-suffix-icon-font-size: $prefix-suffix-icon-font-scale * 100%;\n  // The space between the bottom of the .mat-form-field-flex area and the subscript wrapper.\n  // Mocks show half of the text size, but this margin is applied to an element with the subscript\n  // text font size, so we need to divide by the scale factor to make it half of the original text\n  // size.\n  $subscript-margin-top: 0.5em / $subscript-font-scale;\n  // The padding applied to the form-field-wrapper to reserve space for the subscript, since it's\n  // absolutely positioned. This is a combination of the subscript's margin and line-height, but we\n  // need to multiply by the subscript font scale factor since the wrapper has a larger font size.\n  $wrapper-padding-bottom: ($subscript-margin-top + $line-height) * $subscript-font-scale;\n\n  .mat-form-field {\n    @include mat-typography-level-to-styles($config, input);\n  }\n\n  .mat-form-field-wrapper {\n    padding-bottom: $wrapper-padding-bottom;\n  }\n\n  .mat-form-field-prefix,\n  .mat-form-field-suffix {\n    // Allow icons in a prefix or suffix to adapt to the correct size.\n    .mat-icon {\n      font-size: $prefix-suffix-icon-font-size;\n      line-height: $line-height;\n    }\n\n    // Allow icon buttons in a prefix or suffix to adapt to the correct size.\n    .mat-icon-button {\n      height: $prefix-suffix-icon-font-scale * 1em;\n      width: $prefix-suffix-icon-font-scale * 1em;\n\n      .mat-icon {\n        height: $line-height * 1em;\n        line-height: $line-height;\n      }\n    }\n  }\n\n  .mat-form-field-infix {\n    padding: $infix-padding 0;\n    // Throws off the baseline if we do it as a real margin, so we do it as a border instead.\n    border-top: $infix-margin-top solid transparent;\n  }\n\n  .mat-form-field-can-float {\n    &.mat-form-field-should-float .mat-form-field-label,\n    .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\n      @include _mat-form-field-label-floating(\n              $subscript-font-scale, $infix-padding, $infix-margin-top);\n    }\n\n    // Server-side rendered matInput with a label attribute but label not shown\n    // (used as a pure CSS stand-in for mat-form-field-should-float).\n    .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper\n        .mat-form-field-label {\n      @include _mat-form-field-label-floating(\n              $subscript-font-scale, $infix-padding, $infix-margin-top);\n    }\n  }\n\n  .mat-form-field-label-wrapper {\n    top: -$infix-margin-top;\n    padding-top: $infix-margin-top;\n  }\n\n  .mat-form-field-label {\n    top: $infix-margin-top + $infix-padding;\n  }\n\n  .mat-form-field-underline {\n    // We want the underline to start at the end of the content box, not the padding box,\n    // so we move it up by the padding amount.\n    bottom: $wrapper-padding-bottom;\n  }\n\n  .mat-form-field-subscript-wrapper {\n    font-size: $subscript-font-size;\n    margin-top: $subscript-margin-top;\n\n    // We want the subscript to start at the end of the content box, not the padding box,\n    // so we move it up by the padding amount (adjusted for the smaller font size);\n    top: calc(100% - #{$wrapper-padding-bottom / $subscript-font-scale});\n  }\n\n  @include mat-form-field-legacy-typography($config);\n  @include mat-form-field-standard-typography($config);\n  @include mat-form-field-fill-typography($config);\n  @include mat-form-field-outline-typography($config);\n}\n\n\n\n\n\n@mixin mat-tree-theme($theme) {\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  .mat-tree {\n    background: mat-color($background, 'card');\n  }\n\n  .mat-tree-node,\n  .mat-nested-tree-node {\n    color: mat-color($foreground, text);\n  }\n}\n\n@mixin mat-tree-typography($config) {\n  .mat-tree {\n    font-family: mat-font-family($config);\n  }\n\n  .mat-tree-node,\n  .mat-nested-tree-node {\n    font-weight: mat-font-weight($config, body-1);\n    font-size: mat-font-size($config, body-1);\n  }\n}\n\n\n\n// Includes all of the typographic styles.\n@mixin angular-material-typography($config: null) {\n  @if $config == null {\n    $config: mat-typography-config();\n  }\n\n  @include mat-badge-typography($config);\n  @include mat-base-typography($config);\n  @include mat-autocomplete-typography($config);\n  @include mat-bottom-sheet-typography($config);\n  @include mat-button-typography($config);\n  @include mat-button-toggle-typography($config);\n  @include mat-card-typography($config);\n  @include mat-checkbox-typography($config);\n  @include mat-chips-typography($config);\n  @include mat-table-typography($config);\n  @include mat-datepicker-typography($config);\n  @include mat-dialog-typography($config);\n  @include mat-expansion-panel-typography($config);\n  @include mat-form-field-typography($config);\n  @include mat-grid-list-typography($config);\n  @include mat-icon-typography($config);\n  @include mat-input-typography($config);\n  @include mat-menu-typography($config);\n  @include mat-paginator-typography($config);\n  @include mat-progress-bar-typography($config);\n  @include mat-progress-spinner-typography($config);\n  @include mat-radio-typography($config);\n  @include mat-select-typography($config);\n  @include mat-sidenav-typography($config);\n  @include mat-slide-toggle-typography($config);\n  @include mat-slider-typography($config);\n  @include mat-stepper-typography($config);\n  @include mat-sort-typography($config);\n  @include mat-tabs-typography($config);\n  @include mat-toolbar-typography($config);\n  @include mat-tooltip-typography($config);\n  @include mat-list-typography($config);\n  @include mat-option-typography($config);\n  @include mat-optgroup-typography($config);\n  @include mat-snack-bar-typography($config);\n  @include mat-tree-typography($config);\n}\n\n\n// Mixin that renders all of the core styles that are not theme-dependent.\n@mixin mat-core($typography-config: null) {\n  @include angular-material-typography($typography-config);\n  @include mat-ripple();\n  @include cdk-a11y();\n  @include cdk-overlay();\n  @include cdk-text-field();\n}\n\n// Mixin that renders all of the core styles that depend on the theme.\n@mixin mat-core-theme($theme) {\n  @include mat-ripple-theme($theme);\n  @include mat-option-theme($theme);\n  @include mat-optgroup-theme($theme);\n  @include mat-pseudo-checkbox-theme($theme);\n\n  // Provides external CSS classes for each elevation value. Each CSS class is formatted as\n  // `mat-elevation-z$zValue` where `$zValue` corresponds to the z-space to which the element is\n  // elevated.\n  @for $zValue from 0 through 24 {\n    .#{$_mat-elevation-prefix}#{$zValue} {\n      @include _mat-theme-elevation($zValue, $theme);\n    }\n  }\n\n  // Wrapper element that provides the theme background when the user's content isn't\n  // inside of a `mat-sidenav-container`. Note that we need to exclude the ampersand\n  // selector in case the mixin is included at the top level.\n  .mat-app-background#{if(&, ', &.mat-app-background', '')} {\n    $background: map-get($theme, background);\n    $foreground: map-get($theme, foreground);\n\n    background-color: mat-color($background, background);\n    color: mat-color($foreground, text);\n  }\n\n  // Marker that is used to determine whether the user has added a theme to their page.\n  @at-root {\n    .mat-theme-loaded-marker {\n      display: none;\n    }\n  }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@mixin mat-divider-theme($theme) {\n  $foreground: map-get($theme, foreground);\n\n  .mat-divider {\n    border-top-color: mat-color($foreground, divider);\n  }\n\n  .mat-divider-vertical {\n    border-right-color: mat-color($foreground, divider);\n  }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// Create a theme.\n@mixin angular-material-theme($theme) {\n  @include mat-core-theme($theme);\n  @include mat-autocomplete-theme($theme);\n  @include mat-badge-theme($theme);\n  @include mat-bottom-sheet-theme($theme);\n  @include mat-button-theme($theme);\n  @include mat-button-toggle-theme($theme);\n  @include mat-card-theme($theme);\n  @include mat-checkbox-theme($theme);\n  @include mat-chips-theme($theme);\n  @include mat-table-theme($theme);\n  @include mat-datepicker-theme($theme);\n  @include mat-dialog-theme($theme);\n  @include mat-divider-theme($theme);\n  @include mat-expansion-panel-theme($theme);\n  @include mat-form-field-theme($theme);\n  @include mat-grid-list-theme($theme);\n  @include mat-icon-theme($theme);\n  @include mat-input-theme($theme);\n  @include mat-list-theme($theme);\n  @include mat-menu-theme($theme);\n  @include mat-paginator-theme($theme);\n  @include mat-progress-bar-theme($theme);\n  @include mat-progress-spinner-theme($theme);\n  @include mat-radio-theme($theme);\n  @include mat-select-theme($theme);\n  @include mat-sidenav-theme($theme);\n  @include mat-slide-toggle-theme($theme);\n  @include mat-slider-theme($theme);\n  @include mat-stepper-theme($theme);\n  @include mat-sort-theme($theme);\n  @include mat-tabs-theme($theme);\n  @include mat-toolbar-theme($theme);\n  @include mat-tooltip-theme($theme);\n  @include mat-tree-theme($theme);\n  @include mat-snack-bar-theme($theme);\n}\n","@import '~@angular/material/theming';\r\n\r\n@include mat-core();\r\n\r\n@import 'themes.scss';\r\n\r\n.default-theme {\r\n  @include angular-material-theme($app-theme);\r\n}\r\n\r\n.light-theme {\r\n  @include angular-material-theme($app-light-theme);\r\n}\r\n\r\n.black-theme {\r\n  @include angular-material-theme($app-black-theme);\r\n}\r\n",null,"/* You can add global styles to this file, and also import other style files */\n\n@import 'themes/styles-init.scss';\n\n\n@import '~@angular/material/theming';\n// Plus imports for other components in your app.\n\n// Include the common styles for Angular Material. We include this here so that you only\n// have to load a single css file for Angular Material in your app.\n// Be sure that you only ever include this mixin once!\n@include mat-core();\n\n// Define the palettes for your theme using the Material Design palettes available in palette.scss\n// (imported above). For each palette, you can optionally specify a default, lighter, and darker\n// hue. Available color palettes: https://material.io/design/color/\n$candy-app-primary: mat-palette($mat-indigo);\n$candy-app-accent:  mat-palette($mat-pink, A200, A100, A400);\n\n// The warn palette is optional (defaults to red).\n$candy-app-warn:    mat-palette($mat-red);\n\n// Create the theme object (a Sass map containing all of the palettes).\n$candy-app-theme: mat-light-theme($candy-app-primary, $candy-app-accent, $candy-app-warn);\n\n// Include theme styles for core and each component used in your app.\n// Alternatively, you can import and @include the theme mixins for each component\n// that you are using.\n@include angular-material-theme($candy-app-theme);\n"],"sourceRoot":""}